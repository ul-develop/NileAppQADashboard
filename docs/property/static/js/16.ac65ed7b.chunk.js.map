{"version":3,"sources":["components/Calendar/SelectedCells.jsx","components/Calendar/DayScaleCell.js","components/Calendar/TimeTableCell.js","components/Calendar/Appointment.js","components/Calendar/TooltipContent.js","components/Calendar/IntegratedDates.js","services/YouCanBook/Request.js","services/YouCanBook/ProfilesService.js","services/YouCanBook/helpers.js","services/YouCanBook/BookingsService.js","components/Calendar/hooks/useConfig.js","components/Calendar/hooks/useAppointments.js","components/Calendar/hooks/useError.js","components/Calendar/BookingForm/constants.js","components/Calendar/BookingForm/helpers.js","components/Calendar/BookingForm/AppointmentData/index.jsx","components/Calendar/BookingForm/AppointmentTypes/index.jsx","components/Elements/TextField/index.jsx","components/Calendar/BookingForm/Fields/SimpleField.jsx","components/Elements/Select/index.jsx","components/Elements/Checkbox/index.jsx","components/Calendar/BookingForm/Fields/CheckboxField.jsx","components/Calendar/BookingForm/Fields/index.jsx","components/Calendar/BookingForm/Fields/DropdownField.jsx","components/Calendar/BookingForm/SubmitButton/index.jsx","components/Calendar/BookingForm/BookingForm.jsx","components/Calendar/BookingForm/RepeatSection/index.jsx","components/Calendar/BookingForm/SellerBookingForm.jsx","components/Calendar/AppointmentForm/BasicLayout.jsx","components/Calendar/AppointmentForm/Layout.jsx","components/Calendar/AppointmentForm/CommandLayout.jsx","components/Calendar/AppointmentForm/Overlay.jsx","components/Calendar/AppointmentForm/AppointmentForm.jsx","components/Calendar/AppointmentContainer.jsx","components/Calendar/Calendar.js"],"names":["useStyles","makeStyles","theme","cells","width","position","left","background","palette","primary","light","structuredSelector","createStructuredSelector","selectingCells","state","_get","slotLengthMinutes","connect","withErrorBoundary","React","props","classes","cellsProps","getCellsProp","onMouseUp","event","preventDefault","_isEmpty","target","classList","contains","CELL_CLASS","isElementContains","OVERLAY_ID","DATE_PICKER_ID","startCell","cell","document","getElementById","toString","dispatchEvent","Event","bubbles","window","addEventListener","removeEventListener","className","style","padding","spacing","display","textAlign","today","backgroundColor","alpha","main","selectingDate","isSelecting","startDate","hasSelectingCells","moment","format","DATE_FORMAT","Box","component","sx","DayScaleCell","clsx","zIndex","mobileStepper","disableCell","action","disabledBackground","backgroundSize","pointerEvents","createSelector","timeConfig","timeZone","dateString","onDoubleClick","restProps","dispatch","useDispatch","TimeTableCell","id","onMouseDown","beginSelectingCell","onMouseEnter","addSelectedCell","isCellActive","config","appointment","speedDial","color","common","white","busy","lightGray","gray","title","overflow","fontWeight","whiteSpace","textOverflow","property","children","data","isBuyer","isBusyBooking","isBusyAppointment","displayTime","formatTime","Appointment","Typography","variant","root","wrapper","paddingTop","section","marginBottom","appointmentData","displayDate","isBusy","getBookingInfo","fullName","email","dre","Paper","mb","alignItems","mr","MailOutline","fontSize","Dialpad","AccessTime","mapDispatchToProps","setStartOfWeek","setEndOfWeek","undefined","name","computed","startViewDate","endViewDate","Request","this","baseURL","process","cancelToken","method","url","params","headers","needResHeaders","self","CancelToken","axios","Promise","resolve","reject","options","timeout","Authorization","PLACEHOLDER_AUTHORIZATION","c","request","then","res","JSON","parse","error","status","message","errors","fields","PATHS","PROFILES","getEmail","booking","emailField","filter","answer","code","filterCancelledBookings","cancelled","remapBookings","bookings","map","start","end","convertTimezoneToLocal","endDate","services","answers","remapBooking","a","profileId","BOOKINGS","BOOKING_FIELDS","cur","length","push","from","to","needMore","nextPage","jumpToDate","resLink","tmpBookings","lastItemStartDate","isBefore","useConfig","useEffect","setProfileId","setIsLoading","ProfilesService","getProfileById","CALENDAR_CONFIG_FIELDS","setConfig","setError","cancel","useAppointments","startOfWeek","useSelector","endOfWeek","BookingsService","getBookings","setAppointments","useError","toastr","ERROR_MESSAGES","getTimeConfig","TYPES","defaultValues","REPEAT_TYPE","generateInitialValues","questions","reduce","acc","type","appointmentType","prepareQuestionsAnswers","values","string","generateBookingRange","endCell","formatCells","startMinutes","toMinutes","endMinutes","duration","Math","abs","Array","_","i","startsAt","add","prepareBookingData","times","FNAME","tentative","tz","guess","units","prepareSellerBookings","repeat","repeatType","busyAppointmentType","appointmentTypes","find","toLowerCase","getBusyAppointmentType","bookingRange","mStartDate","diff","module","floor","day","mDay","bookingsInDay","getErrorMessages","bookingDates","join","emailRegex","typography","h4","date","displayStart","displayEnd","mt","group","margin","button","textTransform","buttonLabel","justifyContent","selected","AppointmentTypes","useFormikContext","setFieldValue","value","ToggleButtonGroup","orientation","exclusive","onChange","newTypeId","newType","ToggleButton","label","key","ml","getAppointmentTypeDuration","textField","marginTop","dark","input","h5","TextField","styleClasses","placeholder","required","FormControl","FormLabel","InputProps","after","subtitle","select","item","Select","MenuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","MenuItem","option","checkbox","Checkbox","checked","FormControlLabel","control","components","question","before","handleChange","flexDirection","my","Boolean","FormHelperText","Fields","Component","SubmitButton","isLoading","isValidValues","EMAIL","some","RegExp","test","checkValidValues","Button","disableElevation","fullWidth","disabled","addAppointments","onSave","buyerAppointmentTypes","BUSY_APPOINTMENT_NAME","initialValues","onSubmit","createBookings","Divider","popover","RepeatSection","handleDateChange","field","Switch","Collapse","in","RadioGroup","Radio","Grid","container","utils","MomentUtils","inputVariant","Date","PopoverProps","address","Auth","DRE","generateSellerValues","FormComponent","SellerBookingForm","BookingForm","layout","content","minWidth","maxHeight","Layout","BasicLayout","basicLayoutComponent","CommandLayout","commandLayoutComponent","RecurrenceLayout","recurrenceLayoutComponent","isRecurrence","onCommitButtonClick","isSaving","setIsSaving","Overlay","visible","onHide","Modal","onClose","stopSelectingCell","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","open","anchor","Fade","AppointmentForm","useState","BasicLayoutComponent","connectProps","CommandLayoutComponent","layoutComponent","overlayComponent","AppointmentContainer","useTheme","appBar","minHeight","fontFamily","avenirLT","loading","border","appointments","tag","blocking","loader","active","elevation","timeTableCellComponent","dayScaleCellComponent","cellDuration","DEFAULT_DURATION","onCommitChanges","appointmentComponent","containerComponent","showCloseButton","contentComponent","TooltipContent"],"mappings":"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","file":"static/js/16.ac65ed7b.chunk.js","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash/get';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport {\n  CELL_CLASS,\n  DATE_PICKER_ID,\n  getCellsProp,\n  isElementContains,\n  OVERLAY_ID,\n} from './helpers';\nimport _isEmpty from 'lodash/isEmpty';\n\nconst useStyles = makeStyles(theme => ({\n  cells: {\n    width: '100%',\n    position: 'absolute',\n    left: 0,\n    background: theme.palette.primary.light,\n  },\n}));\n\ntype Props = {\n  selectingCells: Object,\n  slotLengthMinutes: number,\n};\n\nconst SelectedCells = (\n  props: Props,\n): React.Element<'div' | typeof React.Fragment> => {\n  const classes = useStyles();\n  const { selectingCells, slotLengthMinutes } = props;\n  const cellsProps = getCellsProp(selectingCells, slotLengthMinutes);\n\n  const onMouseUp = event => {\n    event.preventDefault();\n    if (_isEmpty(selectingCells)) return;\n\n    const { target } = event;\n    if (target.classList.contains(CELL_CLASS)) return;\n    if (isElementContains(OVERLAY_ID, target)) return;\n    if (isElementContains(DATE_PICKER_ID, target)) return;\n\n    const { startCell } = selectingCells;\n    const cell = document.getElementById(startCell.toString());\n    if (cell) {\n      cell.dispatchEvent(new Event('mouseup', { bubbles: true }));\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener('mouseup', onMouseUp);\n    return () => {\n      window.removeEventListener('mouseup', onMouseUp);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <div className={classes.cells} style={cellsProps}></div>;\n};\n\nconst structuredSelector = createStructuredSelector({\n  selectingCells: state => _get(state, 'calendar.selectingCells'),\n  slotLengthMinutes: state =>\n    _get(state, 'calendar.config.times.slotLengthMinutes'),\n});\n\ntype PropsWithoutRedux = {};\nexport default (connect(structuredSelector)(\n  withErrorBoundary(React.memo(SelectedCells)),\n): React.AbstractComponent<PropsWithoutRedux>);\n","// @flow\nimport * as React from 'react';\nimport { WeekView } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles, alpha } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport SelectedCells from './SelectedCells';\nimport { Box } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash/get';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport moment from 'moment';\nimport { DATE_FORMAT } from './helpers';\n\nconst useStyles = makeStyles(theme => ({\n  cell: {\n    '&&': {\n      padding: theme.spacing(1, 0),\n      width: '100%',\n      display: 'block',\n      textAlign: 'center',\n    },\n  },\n  today: {\n    backgroundColor: alpha(theme.palette.primary.main, 0.16),\n  },\n}));\n\nconst DayScaleCell = (props: Object): React.Element<typeof React.Fragment> => {\n  const classes = useStyles();\n  const { today, startDate, selectingDate, isSelecting } = props;\n  const hasSelectingCells =\n    isSelecting && selectingDate === moment(startDate).format(DATE_FORMAT);\n\n  return (\n    <Box\n      component=\"td\"\n      sx={{\n        display: 'table-cell',\n        position: 'relative',\n        width: '100%',\n      }}\n    >\n      <WeekView.DayScaleCell\n        {...props}\n        className={clsx(classes.cell, {\n          [classes.today]: today,\n        })}\n      ></WeekView.DayScaleCell>\n      {hasSelectingCells && <SelectedCells />}\n    </Box>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  selectingDate: state => _get(state, 'calendar.selectingCells.date'),\n  isSelecting: state => _get(state, 'calendar.isSelecting'),\n});\n\ntype PropsWithoutRedux = { date: Date };\nexport default (connect(structuredSelector)(\n  withErrorBoundary(React.memo(DayScaleCell)),\n): React.AbstractComponent<PropsWithoutRedux>);\n","// @flow\nimport * as React from 'react';\nimport { WeekView } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport _get from 'lodash/get';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { CELL_CLASS, isCellActive } from './helpers';\nimport { beginSelectingCell, addSelectedCell } from './redux/Actions';\nimport { useDispatch } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n  cell: {\n    zIndex: theme.zIndex.mobileStepper,\n  },\n  disableCell: {\n    background: `linear-gradient(-45deg,${theme.palette.action.disabledBackground} 10%,transparent 10%,transparent 50%,${theme.palette.action.disabledBackground} 50%,${theme.palette.action.disabledBackground} 60%,transparent 60%,transparent)`,\n    backgroundSize: '8px 8px',\n    pointerEvents: 'none',\n  },\n}));\n\nconst TimeTableCell = (props: Object): React.Element<'div'> => {\n  const classes = useStyles();\n  const {\n    startDate: dateString,\n    timeConfig,\n    onDoubleClick,\n    ...restProps\n  } = props;\n  const dispatch = useDispatch();\n\n  const onMouseDown = (event: MouseEvent) => {\n    event.preventDefault();\n    dispatch(beginSelectingCell(dateString));\n  };\n\n  const onMouseEnter = (event: MouseEvent) => {\n    event.preventDefault();\n    dispatch(addSelectedCell(dateString));\n  };\n\n  const onMouseUp = (event: MouseEvent) => {\n    event.preventDefault();\n    onDoubleClick();\n  };\n\n  return (\n    <WeekView.TimeTableCell\n      {...restProps}\n      startDate={dateString}\n      id={dateString.toString()}\n      onMouseDown={onMouseDown}\n      onMouseEnter={onMouseEnter}\n      onMouseUp={onMouseUp}\n      className={clsx(\n        classes.cell,\n        {\n          [classes.disableCell]: !isCellActive({\n            dateString,\n            config: timeConfig,\n          }),\n        },\n        CELL_CLASS,\n      )}\n    />\n  );\n};\n\nconst structuredSelector = createSelector(\n  state => _get(state, 'calendar.config.times'),\n  state => _get(state, 'calendar.config.timeZone'),\n  (timeConfig, timeZone) => ({\n    timeConfig: { ...timeConfig, timeZone },\n  }),\n);\n\ntype PropsWithoutRedux = {};\nexport default (connect(structuredSelector)(\n  withErrorBoundary(React.memo(TimeTableCell)),\n): React.AbstractComponent<PropsWithoutRedux>);\n","// @flow\nimport * as React from 'react';\nimport type { AbstractComponent } from 'react';\nimport { Appointments } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { formatTime, isBusyAppointment } from './helpers';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash.get';\nimport { connect } from 'react-redux';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  appointment: {\n    zIndex: theme.zIndex.speedDial,\n    padding: theme.spacing(0.5, 1),\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  busy: {\n    backgroundColor: theme.palette.common.lightGray,\n    color: theme.palette.primary.gray,\n    '&:hover': {\n      backgroundColor: theme.palette.common.lightGray,\n    },\n  },\n  title: {\n    overflow: 'hidden',\n    fontWeight: 'bold',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n  },\n}));\n\nconst Appointment = ({\n  property,\n  children,\n  ...restProps\n}: Object): React.Element<'div'> => {\n  const { data } = restProps;\n  const classes = useStyles();\n  const isBuyer = !property;\n  const isBusyBooking = isBusyAppointment(data);\n  const { title } = data;\n  const { displayTime } = formatTime(data);\n  return (\n    <Appointments.Appointment\n      {...restProps}\n      className={clsx(classes.appointment, {\n        [classes.busy]: isBuyer || isBusyBooking,\n      })}\n    >\n      {isBuyer ? (\n        <div>Busy</div>\n      ) : (\n        <div>\n          <Typography variant=\"subtitle1\" classes={{ root: classes.title }}>\n            {title}\n          </Typography>\n          <Typography variant=\"subtitle1\">{displayTime}</Typography>\n        </div>\n      )}\n    </Appointments.Appointment>\n  );\n};\n\ntype PropsWithoutRedux = {};\n\nconst structuredSelector = createStructuredSelector({\n  property: state => _get(state, ['calendar', 'property']),\n});\n\nexport default (connect(structuredSelector)(\n  Appointment,\n): AbstractComponent<PropsWithoutRedux>);\n","// @flow\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport _get from 'lodash/get';\nimport Typography from '@material-ui/core/Typography';\nimport { formatTime, getBookingInfo, isBusyAppointment } from './helpers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  AccessTime as AccessTimeIcon,\n  Event as EventIcon,\n  MailOutline as MailOutlineIcon,\n  Dialpad as DialpadIcon,\n} from '@material-ui/icons';\nimport { Box } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    padding: theme.spacing(2),\n    paddingTop: 0,\n  },\n  section: {\n    marginBottom: theme.spacing(1),\n  },\n  busy: {\n    color: theme.palette.primary.gray,\n  },\n}));\n\ntype Props = {\n  appointmentData: Object,\n  isBuyer: boolean,\n};\n\nconst TooltipContent = ({\n  appointmentData,\n  isBuyer,\n}: Props): React.Element<'div'> => {\n  const classes = useStyles();\n  const { displayDate, displayTime } = formatTime(appointmentData);\n  const isBusy = isBusyAppointment(appointmentData);\n  const { fullName, email, dre } = getBookingInfo(appointmentData);\n\n  return (\n    <Paper className={classes.wrapper}>\n      <Typography\n        variant=\"h4\"\n        color=\"primary\"\n        className={clsx(classes.section, { [classes.busy]: isBuyer || isBusy })}\n      >\n        {isBuyer ? 'Busy' : fullName}\n      </Typography>\n      {!isBuyer && (\n        <Box sx={{ mb: 1, display: 'flex', alignItems: 'center' }}>\n          <Box sx={{ mr: 0.5, display: 'flex' }}>\n            <MailOutlineIcon fontSize=\"small\" />\n          </Box>\n          <Typography variant=\"h5\">{email}</Typography>\n        </Box>\n      )}\n      {!isBuyer && dre && (\n        <Box sx={{ mb: 1, display: 'flex', alignItems: 'center' }}>\n          <Box sx={{ mr: 0.5, display: 'flex' }}>\n            <DialpadIcon fontSize=\"small\" />\n          </Box>\n          <Typography variant=\"h5\">{dre}</Typography>\n        </Box>\n      )}\n      <Box sx={{ mb: 1, display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ mr: 0.5, display: 'flex' }}>\n          <EventIcon fontSize=\"small\" />\n        </Box>\n        <Typography variant=\"h5\">{displayDate}</Typography>\n      </Box>\n      <Box sx={{ mb: 1, display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ mr: 0.5, display: 'flex' }}>\n          <AccessTimeIcon fontSize=\"small\" />\n        </Box>\n        <Typography variant=\"h5\">{displayTime}</Typography>\n      </Box>\n    </Paper>\n  );\n};\n\ntype PropsWithoutRedux = {\n  appointmentData: Object,\n};\n\nconst structuredSelector = createStructuredSelector({\n  isBuyer: state => !_get(state, ['calendar', 'property']),\n});\n\nexport default (connect(structuredSelector)(\n  TooltipContent,\n): React.AbstractComponent<PropsWithoutRedux>);\n","// @flow\nimport React from 'react';\nimport type { AbstractComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { setEndOfWeek, setStartOfWeek } from './redux/Actions';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\n\nconst IntegratedDates = ({ setStartOfWeek, setEndOfWeek }) => {\n  const startViewDateComputed = ({ startViewDate }) => {\n    setStartOfWeek(startViewDate);\n    return startViewDate;\n  };\n\n  const endViewDateComputed = ({ endViewDate }) => {\n    setEndOfWeek(endViewDate);\n    return endViewDate;\n  };\n\n  return (\n    <Plugin name=\"IntegratedDates\">\n      <Getter name=\"startViewDate\" computed={startViewDateComputed} />\n      <Getter name=\"endViewDate\" computed={endViewDateComputed} />\n    </Plugin>\n  );\n};\n\ntype PropsWithoutRedux = {};\n\nconst mapDispatchToProps = {\n  setStartOfWeek,\n  setEndOfWeek,\n};\n\nexport default (connect(\n  undefined,\n  mapDispatchToProps,\n)(withErrorBoundary(IntegratedDates)): AbstractComponent<PropsWithoutRedux>);\n","import axios from 'axios';\nimport _get from 'lodash/get';\nimport { PLACEHOLDER_AUTHORIZATION } from './constants';\n\nexport default class Request {\n  constructor() {\n    this.baseURL = `${process.env.REACT_APP_YOU_BOOK_ME_ENDPOINT}/${process.env.REACT_APP_YOU_BOOK_ME_ACCOUNT_ID}/`;\n    this.cancelToken = null;\n  }\n\n  cancel() {\n    if (this.cancelToken !== null) this.cancelToken();\n  }\n\n  axios({\n    method,\n    baseURL = this.baseURL,\n    url,\n    data,\n    params,\n    headers = {},\n    needResHeaders = false,\n  }) {\n    const self = this;\n    const { CancelToken } = axios;\n\n    return new Promise((resolve, reject) => {\n      const options = {\n        method,\n        url,\n        baseURL,\n        timeout: 30000,\n        params,\n        data,\n        headers: { ...headers, Authorization: PLACEHOLDER_AUTHORIZATION },\n        cancelToken: new CancelToken(function executor(c) {\n          self.cancelToken = c;\n        }),\n      };\n\n      axios.request(options).then(\n        res => {\n          const data =\n            typeof res.data === 'object' ? res.data : JSON.parse(res.data);\n\n          resolve(needResHeaders ? { data, headers: res.headers } : data);\n        },\n        error => {\n          const status = _get(error, ['response', 'status']);\n          const message = _get(error, ['response', 'data', 'message']);\n          const errors = _get(error, ['response', 'data', 'errors']);\n          const errorRes = { status, message, errors };\n          reject(errorRes);\n        },\n      );\n    });\n  }\n}\n","import Request from './Request';\nimport { PATHS } from './constants';\n\nclass ProfilesService extends Request {\n  getProfileById({ id, fields }) {\n    if (!id) return {};\n\n    return this.axios({\n      method: 'GET',\n      url: `${PATHS.PROFILES}/${id}`,\n      params: {\n        fields,\n      },\n    });\n  }\n}\n\nexport default new ProfilesService();\n","import _get from 'lodash/get';\nimport { convertTimezoneToLocal } from 'components/Calendar/helpers';\n\nconst getEmail = booking => {\n  const emailField = _get(booking, ['answers'], []).filter(\n    answer => answer.code === 'EMAIL',\n  )[0];\n\n  return _get(emailField, 'string', '');\n};\n\nconst filterCancelledBookings = booking => !booking.cancelled;\n\nexport const remapBooking = booking => {\n  const start = _get(booking, 'startsAt');\n  const end = _get(booking, 'endsAt');\n  const timeZone = _get(booking, 'timeZone');\n\n  return {\n    title: getEmail(booking),\n    id: _get(booking, 'id'),\n    startDate: convertTimezoneToLocal(start, timeZone),\n    endDate: convertTimezoneToLocal(end, timeZone),\n    services: _get(booking, 'services', []),\n    cancelled: _get(booking, 'cancelled'),\n    answers: _get(booking, 'answers', []),\n  };\n};\n\nexport const remapBookings = bookings =>\n  bookings\n    .map(booking => {\n      return remapBooking(booking);\n    })\n    .filter(filterCancelledBookings);\n","import Request from './Request';\nimport { BOOKING_FIELDS, PATHS } from './constants';\nimport _get from 'lodash/get';\nimport moment from 'moment';\nimport parse from 'parse-link-header';\nimport { remapBookings } from './helpers';\n\nclass BookingsService extends Request {\n  async createBooking({ profileId, data }) {\n    const booking = await this.axios({\n      method: 'POST',\n      url: `${PATHS.PROFILES}/${profileId}/${PATHS.BOOKINGS}`,\n      params: {\n        fields: BOOKING_FIELDS,\n      },\n      data: {\n        ...data,\n      },\n    });\n    return remapBookings([booking]);\n  }\n\n  async createBookings({ profileId, data }) {\n    let cur = 0;\n    let errors = [];\n    let bookings = [];\n    while (cur !== data.length) {\n      try {\n        const res = await this.axios({\n          method: 'POST',\n          url: `${PATHS.PROFILES}/${profileId}/${PATHS.BOOKINGS}`,\n          params: { fields: BOOKING_FIELDS },\n          data: data[cur],\n        });\n        bookings.push(res);\n      } catch (error) {\n        errors.push(data[cur]);\n      }\n\n      cur = cur + 1;\n    }\n    return { bookings: remapBookings(bookings), errors };\n  }\n\n  async getBookings({ profileId, from, to }) {\n    if (!profileId) return [];\n\n    let needMore = true;\n    let nextPage = '';\n    let bookings = [];\n\n    while (needMore) {\n      const res = !nextPage\n        ? await this.axios({\n            method: 'GET',\n            url: `${PATHS.PROFILES}/${profileId}/${PATHS.BOOKINGS}`,\n            params: {\n              fields: BOOKING_FIELDS,\n              jumpToDate: moment(from).format('YYYY-MM-DD'),\n            },\n            needResHeaders: true,\n          })\n        : await this.axios({\n            method: 'GET',\n            url: nextPage,\n            needResHeaders: true,\n          });\n\n      const resLink = _get(res, ['headers', 'link'], '');\n      nextPage = _get(parse(resLink), ['next', 'url'], '');\n\n      const tmpBookings = _get(res, ['data']);\n      bookings = [...bookings, ...tmpBookings];\n      const lastItemStartDate = _get(\n        tmpBookings,\n        [tmpBookings.length - 1, 'startsAt'],\n        '',\n      );\n\n      needMore = nextPage && moment(lastItemStartDate).isBefore(to);\n    }\n\n    return remapBookings(bookings);\n  }\n}\n\nexport default new BookingsService();\n","// @flow\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ProfilesService } from '../../../services/YouCanBook';\nimport { CALENDAR_CONFIG_FIELDS } from '../helpers';\nimport {\n  setConfig,\n  setError,\n  setIsLoading,\n  setProfileId,\n} from '../redux/Actions';\nimport type { CustomHookProps } from './types';\n\nconst useConfig = ({ profileId }: CustomHookProps) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setProfileId(profileId));\n\n    (async () => {\n      dispatch(setIsLoading(true));\n      try {\n        const data = await ProfilesService.getProfileById({\n          id: profileId,\n          fields: CALENDAR_CONFIG_FIELDS,\n        });\n        dispatch(setConfig(data || {}));\n      } catch (error) {\n        dispatch(setError(error));\n      }\n      dispatch(setIsLoading(false));\n    })();\n\n    return () => {\n      ProfilesService.cancel();\n    };\n    // eslint-disable-next-line\n  }, [profileId]);\n};\n\nexport default useConfig;\n","// @flow\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BookingsService } from '../../../services/YouCanBook';\nimport _get from 'lodash/get';\nimport type { CustomHookProps } from './types';\nimport { setError, setIsLoading, setAppointments } from '../redux/Actions';\n\nconst useAppointments = ({ profileId }: CustomHookProps) => {\n  const dispatch = useDispatch();\n  const startOfWeek = useSelector(state =>\n    _get(state, ['calendar', 'startOfWeek']),\n  );\n  const endOfWeek = useSelector(state =>\n    _get(state, ['calendar', 'endOfWeek']),\n  );\n\n  useEffect(() => {\n    (async () => {\n      if (!endOfWeek) return;\n      try {\n        dispatch(setIsLoading(true));\n        const appointmentData = await BookingsService.getBookings({\n          profileId,\n          from: startOfWeek,\n          to: endOfWeek,\n        });\n        dispatch(setAppointments(appointmentData));\n      } catch (error) {\n        dispatch(setError(error));\n      }\n      dispatch(setIsLoading(false));\n    })();\n\n    return () => {\n      BookingsService.cancel();\n    };\n    // eslint-disable-next-line\n  }, [endOfWeek, profileId]);\n};\n\nexport default useAppointments;\n","// @flow\nimport { useEffect } from 'react';\nimport { ERROR_MESSAGES } from '../helpers';\nimport { toastr } from 'react-redux-toastr';\nimport { useSelector } from 'react-redux';\nimport _get from 'lodash/get';\n\nconst useError = () => {\n  const error = useSelector(state => _get(state, ['calendar', 'error']));\n\n  useEffect(() => {\n    if (!error) return;\n\n    const { message } = error || {};\n\n    if (message) {\n      toastr.error(ERROR_MESSAGES.getTimeConfig, message);\n    }\n  }, [error]);\n};\n\nexport default useError;\n","// @flow\nexport const TYPES = {\n  SIMPLE: 'SIMPLE',\n  CHECKBOX: 'CHECKBOX',\n  MULTI_DROPDOWN: 'MULTI_DROPDOWN',\n};\n","// @flow\nimport type { TQuestion } from '../../../types';\nimport { Auth } from 'aws-amplify';\nimport { TYPES } from './constants';\nimport { formatCells, toMinutes } from '../helpers';\nimport moment from 'moment';\nimport 'moment-timezone';\nimport _get from 'lodash.get';\n\nexport const BOOKING_FORMAT = 'YYYY-MM-DDTHH:mm:ss';\nconst BOOKING_DATE_FORMAT = 'YYYY-MM-DD';\nconst BOOKING_TIME_FORMAT = 'HH:mm:ss';\nexport const DATE_PICKER_FORMAT = 'MM/DD/YYYY';\nconst WEEK_DAYS = 7;\n\nconst defaultValues = {\n  [TYPES.SIMPLE]: '',\n  [TYPES.CHECKBOX]: false,\n  [TYPES.MULTI_DROPDOWN]: '',\n};\n\nconst REPEAT_TYPE = {\n  daily: 'daily',\n  weekly: 'weekly',\n};\n\nexport const generateInitialValues = ({ questions }: Object): Object => {\n  return questions.reduce(\n    (acc, { code, type }) => ({ ...acc, [code]: defaultValues[type] }),\n    {\n      appointmentType: undefined,\n    },\n  );\n};\n\nexport const generateSellerValues = ({\n  property,\n  selectingCells,\n  config,\n}: Object): Object => {\n  const {\n    questions,\n    times: { slotLengthMinutes },\n  } = config;\n  const { start } = formatCells(selectingCells, slotLengthMinutes);\n  const date = start.format(DATE_PICKER_FORMAT);\n  const address = _get(property, 'PropertyData.FullAddress', '');\n  const email = _get(Auth, ['user', 'attributes', 'email'], '');\n  return {\n    ...generateInitialValues({ questions }),\n    FNAME: address,\n    EMAIL: email,\n    DRE: '1',\n    repeat: false,\n    repeatType: REPEAT_TYPE.daily,\n    startDate: date,\n    endDate: date,\n  };\n};\n\nconst prepareQuestionsAnswers = (questions: TQuestion[], values): Object => {\n  return questions\n    .map(({ code }) => ({ code, string: values[code] }))\n    .filter(({ string }) => string);\n};\n\nconst generateBookingRange = (selectingCells, slotLengthMinutes) => {\n  const { startCell, endCell } = selectingCells;\n  const { start } = formatCells(selectingCells, slotLengthMinutes);\n  const startMinutes = toMinutes(startCell);\n  const endMinutes = toMinutes(endCell);\n  const duration =\n    Math.abs((startMinutes - endMinutes) / slotLengthMinutes) + 1;\n  return Array.from(Array(duration), (_, i) => ({\n    startsAt: moment(start)\n      .add(i * slotLengthMinutes, 'm')\n      .format(BOOKING_FORMAT),\n  }));\n};\n\nexport const prepareBookingData = ({\n  selectingCells,\n  values,\n  config,\n}: Object): Object => {\n  const {\n    title,\n    questions,\n    times: { slotLengthMinutes },\n  } = config;\n  const { FNAME: name, appointmentType } = values;\n  const bookingRange = generateBookingRange(selectingCells, slotLengthMinutes);\n\n  return bookingRange.map(({ startsAt }) => ({\n    startsAt,\n    title: `${name} and ${title}`,\n    tentative: 'NOT_USED',\n    timeZone: moment.tz.guess(),\n    cancelled: false,\n    units: 1,\n    services: [appointmentType],\n    answers: prepareQuestionsAnswers(questions, values),\n  }));\n};\n\nexport const BUSY_APPOINTMENT = 'busy';\n\nexport const getBusyAppointmentType = (\n  appointmentTypes: Object[],\n): Object | typeof undefined => {\n  return appointmentTypes.find(\n    ({ name }) => name.toLowerCase() === BUSY_APPOINTMENT,\n  );\n};\n\nexport const prepareSellerBookings = ({\n  selectingCells,\n  values,\n  config,\n}: Object): Object[] => {\n  const {\n    questions,\n    times: { slotLengthMinutes },\n  } = config;\n  const { repeat, repeatType, startDate, endDate } = values;\n  const appointmentTypes = _get(config, 'services.items', []);\n  const busyAppointmentType = getBusyAppointmentType(appointmentTypes);\n  const bookingRange = generateBookingRange(selectingCells, slotLengthMinutes);\n\n  if (!repeat)\n    return bookingRange.map(({ startsAt }) => ({\n      startsAt,\n      title: BUSY_APPOINTMENT,\n      tentative: 'NOT_USED',\n      timeZone: moment.tz.guess(),\n      cancelled: false,\n      units: 1,\n      services: [busyAppointmentType],\n      answers: prepareQuestionsAnswers(questions, values),\n    }));\n\n  const mStartDate = moment(startDate);\n  const mEndDate = moment(endDate);\n  const diff = mEndDate.diff(mStartDate, 'day');\n  const module = repeatType === REPEAT_TYPE.weekly ? WEEK_DAYS : 1;\n\n  const days = Array.from(\n    Array(Math.floor(diff / module) + 1),\n    (_, i) => i * module,\n  );\n\n  return days.reduce((bookings, day) => {\n    const mDay = moment(startDate).add(day, 'day');\n    const bookingsInDay = bookingRange.map(({ startsAt }) => ({\n      title: BUSY_APPOINTMENT,\n      startsAt: `${mDay.format(BOOKING_DATE_FORMAT)}T${moment(startsAt).format(\n        BOOKING_TIME_FORMAT,\n      )}`,\n      tentative: 'NOT_USED',\n      timeZone: moment.tz.guess(),\n      cancelled: false,\n      units: 1,\n      services: [busyAppointmentType],\n      answers: prepareQuestionsAnswers(questions, values),\n    }));\n    return [...bookings, ...bookingsInDay];\n  }, []);\n};\n\nexport const getErrorMessages = (bookings: Object[]): Object => {\n  const bookingDates = bookings.map(booking => booking.startsAt).join(', ');\n  return { message: `Cannot book at dates: ${bookingDates}` };\n};\n\nconst emailRegex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n\nexport const checkValidValues = (\n  questions: Object[],\n  values: Object,\n): boolean => {\n  const { appointmentType, EMAIL: email } = values;\n  if (!appointmentType) return false;\n  const isMissingValue = questions.some(\n    ({ code, required }) => required && !values[code],\n  );\n  if (isMissingValue) return false;\n  return new RegExp(emailRegex).test(email);\n};\n","// @flow\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport type { Element } from 'react';\nimport { formatCells, displayTime, displayDate } from '../../helpers';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    ...theme.typography.h4,\n    padding: theme.spacing(2, 0),\n    backgroundColor: theme.palette.background.gray,\n    textAlign: 'center',\n  },\n}));\n\nconst AppointmentData = ({\n  selectingCells,\n  slotLengthMinutes,\n}: Object): Element<'div'> => {\n  const classes = useStyles();\n  if (_isEmpty(selectingCells)) return <div></div>;\n  const { date } = selectingCells;\n  const { start, end } = formatCells(selectingCells, slotLengthMinutes);\n  const displayStart = displayTime(start);\n  const displayEnd = displayTime(end);\n\n  return (\n    <div className={classes.wrapper}>\n      <Typography variant=\"h4\">{displayDate(date)}</Typography>\n      <Box sx={{ mt: 1 }}>\n        <Typography variant=\"h3\">\n          {displayStart} - {displayEnd}\n        </Typography>\n      </Box>\n    </div>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  selectingCells: state => _get(state, 'calendar.selectingCells'),\n  slotLengthMinutes: state =>\n    _get(state, 'calendar.config.times.slotLengthMinutes'),\n});\n\ntype PropsWithoutRedux = {};\nexport default (connect(structuredSelector)(\n  withErrorBoundary(React.memo(AppointmentData)),\n): React.AbstractComponent<PropsWithoutRedux>);\n","// @flow\nimport React, { useEffect } from 'react';\nimport type { Element } from 'react';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport QueryBuilderOutlinedIcon from '@material-ui/icons/QueryBuilderOutlined';\nimport { getAppointmentTypeDuration } from '../../helpers';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport { useFormikContext } from 'formik';\nimport _get from 'lodash.get';\n\nconst useStyles = makeStyles(theme => ({\n  group: {\n    width: '100%',\n    margin: theme.spacing(1, 0, 2, 0),\n  },\n  button: {\n    padding: theme.spacing(1.5, 2),\n    textTransform: 'none',\n  },\n  buttonLabel: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  duration: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  selected: {\n    '&&, &&:hover': {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n}));\n\ntype Props = {\n  appointmentTypes: Object[],\n};\n\nexport const AppointmentTypes = ({\n  appointmentTypes,\n}: Props): Element<typeof React.Fragment> => {\n  const classes = useStyles();\n  const { values, setFieldValue } = useFormikContext();\n  const value = _get(values, 'appointmentType.id') || '';\n\n  useEffect(() => {\n    if (appointmentTypes.length === 1) {\n      const [appointmentType] = appointmentTypes;\n      setFieldValue('appointmentType', appointmentType);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [appointmentTypes.length]);\n\n  const handleChange = (event, newTypeId) => {\n    const newType = appointmentTypes.find(type => type.id === newTypeId);\n    setFieldValue('appointmentType', newType);\n  };\n\n  return (\n    <>\n      <Typography variant=\"h4\">Choose an appointment type</Typography>\n      <ToggleButtonGroup\n        orientation=\"vertical\"\n        value={value}\n        exclusive\n        onChange={handleChange}\n        classes={{ root: classes.group }}\n      >\n        {appointmentTypes.map(type => (\n          <ToggleButton\n            value={type.id}\n            classes={{\n              root: classes.button,\n              label: classes.buttonLabel,\n              selected: classes.selected,\n            }}\n            key={type.id}\n          >\n            <Typography variant=\"h5\" color=\"textPrimary\">\n              {type.name}\n            </Typography>\n            <Typography\n              variant=\"subtitle1\"\n              classes={{ root: classes.duration }}\n            >\n              <QueryBuilderOutlinedIcon fontSize=\"small\" />\n              <Box sx={{ ml: 0.5, mt: 0.25 }}>\n                {getAppointmentTypeDuration(type)}\n              </Box>\n            </Typography>\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport clsx from 'clsx';\nimport {\n  FormControl,\n  FormLabel,\n  makeStyles,\n  TextField as MuiTextField,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    marginTop: theme.spacing(0.5),\n  },\n  label: {\n    color: theme.palette.primary.dark,\n    ...theme.typography.h4,\n  },\n  input: {\n    ...theme.typography.h5,\n    padding: theme.spacing(1, 1.5),\n  },\n}));\n\ntype Props = {\n  name?: string,\n  variant?: string,\n  placeholder?: string,\n  label: string,\n  value: string,\n  onChange: Function,\n  required?: boolean,\n  classes?: Object,\n};\n\nexport const TextField = (props: Props): Element<typeof MuiTextField> => {\n  const styleClasses = useStyles();\n  const {\n    name,\n    variant,\n    placeholder = '',\n    label,\n    value,\n    required,\n    onChange,\n    classes = {},\n  } = props;\n\n  return (\n    <FormControl required={required}>\n      <FormLabel color=\"secondary\" className={styleClasses.label}>\n        {label}\n      </FormLabel>\n      <MuiTextField\n        name={name}\n        variant={variant}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        classes={{ root: clsx(styleClasses.textField, classes.textField) }}\n        InputProps={{\n          classes: {\n            input: clsx(styleClasses.input, classes.input),\n          },\n        }}\n      />\n    </FormControl>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { Box, FormHelperText, makeStyles } from '@material-ui/core';\nimport type { TQuestion } from '../../../../types';\nimport { TextField } from '../../../Elements/TextField';\nimport { useFormikContext } from 'formik';\n\nconst useStyles = makeStyles(theme => ({\n  after: {\n    ...theme.typography.subtitle,\n  },\n}));\n\ntype Props = {\n  question: TQuestion,\n};\n\nexport const SimpleField = ({ question }: Props): Element<typeof Box> => {\n  const classes = useStyles();\n  const { code, before, after, required } = question;\n  const { values, handleChange } = useFormikContext();\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', my: 1 }}>\n      <TextField\n        name={code}\n        variant=\"outlined\"\n        placeholder=\"\"\n        label={before}\n        value={values[code]}\n        onChange={handleChange}\n        required={required}\n      />\n      {Boolean(after) && (\n        <FormHelperText className={classes.after}>{after}</FormHelperText>\n      )}\n    </Box>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport {\n  FormControl,\n  MenuItem,\n  Select as MuiSelect,\n  FormLabel,\n  makeStyles,\n} from '@material-ui/core';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    '& .MuiOutlinedInput-notchedOutline>legend>span': {\n      display: 'none',\n    },\n  },\n  label: {\n    '&&': {\n      color: theme.palette.primary.dark,\n      ...theme.typography.h4,\n    },\n  },\n  select: {\n    ...theme.typography.h5,\n    padding: theme.spacing(1, 1.5),\n  },\n  item: {\n    ...theme.typography.h5,\n  },\n}));\n\ntype Props = {\n  name?: string,\n  value: string,\n  onChange: Function,\n  label: string,\n  variant?: string,\n  required?: boolean,\n  options: string[],\n  classes?: Object,\n};\n\nexport const Select = (props: Props): Element<typeof FormControl> => {\n  const styleClasses = useStyles();\n  const {\n    name,\n    value,\n    onChange,\n    label,\n    variant,\n    required,\n    options,\n    classes = {},\n  } = props;\n\n  return (\n    <FormControl required={required} classes={{ root: styleClasses.wrapper }}>\n      <FormLabel className={styleClasses.label}>{label}</FormLabel>\n      <MuiSelect\n        name={name}\n        classes={{ root: clsx(styleClasses.select, classes.select) }}\n        value={value}\n        onChange={onChange}\n        label=\"\"\n        variant={variant}\n        MenuProps={{\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left',\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'left',\n          },\n          getContentAnchorEl: null,\n        }}\n      >\n        <MenuItem\n          classes={{ root: clsx(styleClasses.item, classes.item) }}\n          value=\"\"\n        >\n          <em>None</em>\n        </MenuItem>\n        {options.map((option: string) => (\n          <MenuItem\n            key={option}\n            value={option}\n            classes={{ root: clsx(styleClasses.item, classes.item) }}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </MuiSelect>\n    </FormControl>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport {\n  Checkbox as MuiCheckbox,\n  FormControlLabel,\n  FormControl,\n  makeStyles,\n} from '@material-ui/core';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n  label: {\n    ...theme.typography.h5,\n  },\n  checkbox: {},\n}));\n\ntype Props = {\n  name?: string,\n  required?: boolean,\n  checked: boolean,\n  onChange: Function,\n  label: string,\n  color?: string,\n  classes?: Object,\n};\n\nexport const Checkbox = (props: Props): Element<typeof FormControl> => {\n  const styleClasses = useStyles();\n  const {\n    name,\n    required,\n    checked,\n    onChange,\n    label,\n    color = 'primary',\n    classes = {},\n  } = props;\n  return (\n    <FormControl required={required}>\n      <FormControlLabel\n        classes={{ label: clsx(styleClasses.label, classes.label) }}\n        control={\n          <MuiCheckbox\n            classes={{ root: clsx(styleClasses.checkbox, classes.checkbox) }}\n            checked={checked}\n            onChange={onChange}\n            name={name}\n            color={color}\n          />\n        }\n        label={label}\n      />\n    </FormControl>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { Box, FormHelperText, makeStyles } from '@material-ui/core';\nimport type { TQuestion } from '../../../../types';\nimport { Checkbox } from '../../../Elements';\nimport { useFormikContext } from 'formik';\n\nconst useStyles = makeStyles(theme => ({\n  after: {\n    ...theme.typography.subtitle,\n  },\n}));\n\ntype Props = {\n  question: TQuestion,\n};\n\nexport const CheckboxField = ({ question }: Props): Element<typeof Box> => {\n  const classes = useStyles();\n  const { after, before, required, code } = question;\n  const { values, handleChange } = useFormikContext();\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', my: 1 }}>\n      <Checkbox\n        checked={values[code]}\n        onChange={handleChange}\n        name={code}\n        color=\"primary\"\n        label={before}\n        required={required}\n      />\n      {Boolean(after) && (\n        <FormHelperText className={classes.after}>{after}</FormHelperText>\n      )}\n    </Box>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { SimpleField } from './SimpleField';\nimport { CheckboxField } from './CheckboxField';\nimport { DropdownField } from './DropdownField';\nimport type { TQuestion } from '../../../../types';\nimport { TYPES } from '../constants';\n\nconst components = {\n  [TYPES.SIMPLE]: SimpleField,\n  [TYPES.CHECKBOX]: CheckboxField,\n  [TYPES.MULTI_DROPDOWN]: DropdownField,\n};\n\ntype Props = {\n  questions: TQuestion[],\n};\n\nexport const Fields = ({\n  questions,\n}: Props): Element<typeof React.Fragment> => {\n  return (\n    <>\n      {questions.map(question => {\n        const Component = components[question.type];\n        return Component ? (\n          <Component key={question.code} question={question} />\n        ) : (\n          <></>\n        );\n      })}\n    </>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { Box } from '@material-ui/core';\nimport type { TQuestion } from '../../../../types';\nimport { Select } from '../../../Elements';\nimport { useFormikContext } from 'formik';\n\ntype Props = {\n  question: TQuestion,\n};\n\nexport const DropdownField = ({ question }: Props): Element<typeof Box> => {\n  const { code, after, before, required, options = [] } = question;\n  const { values, handleChange } = useFormikContext();\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', my: 1 }}>\n      <Select\n        name={code}\n        value={values[code]}\n        onChange={handleChange}\n        label={before}\n        variant=\"outlined\"\n        required={required}\n        options={options}\n      />\n      {Boolean(after) && <Box sx={{ mt: 1 }}>{after}</Box>}\n    </Box>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { Button, makeStyles } from '@material-ui/core';\nimport { useFormikContext } from 'formik';\nimport { checkValidValues } from '../helpers';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(2),\n  },\n}));\n\ntype Props = {\n  questions: Object[],\n  isLoading: boolean,\n};\n\nexport const SubmitButton = ({ questions, isLoading }: Props) => {\n  const classes = useStyles();\n  const { values } = useFormikContext();\n  const isValidValues = checkValidValues(questions, values);\n\n  return (\n    <Button\n      type=\"submit\"\n      color=\"primary\"\n      disableElevation\n      fullWidth\n      variant=\"contained\"\n      disabled={isLoading || !isValidValues}\n      classes={{ root: classes.button }}\n    >\n      Confirm Booking\n    </Button>\n  );\n};\n","// @flow\nimport type { Element, AbstractComponent } from 'react';\nimport React from 'react';\nimport { Box, Divider } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport {\n  generateInitialValues,\n  getErrorMessages,\n  prepareBookingData,\n} from './helpers';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport AppointmentData from './AppointmentData';\nimport { AppointmentTypes } from './AppointmentTypes';\nimport { BookingsService } from '../../../services/YouCanBook';\nimport { setIsLoading, setError, addAppointments } from '../redux/Actions';\nimport { Fields } from './Fields';\nimport { BUSY_APPOINTMENT_NAME } from '../../../shared/Consts';\nimport { SubmitButton } from './SubmitButton';\n\ntype Props = {\n  profileId: string | typeof undefined,\n  config: Object,\n  selectingCells: Object,\n  setIsLoading: Function,\n  setError: Function,\n  addAppointments: Function,\n  onSave: Function,\n  isLoading: boolean,\n};\n\nconst BookingForm = ({\n  profileId,\n  config,\n  selectingCells,\n  setIsLoading,\n  setError,\n  addAppointments,\n  onSave,\n  isLoading,\n}: Props): Element<typeof Box> => {\n  const questions = _get(config, 'questions', []);\n  const appointmentTypes = _get(config, 'services.items', []);\n  const buyerAppointmentTypes = appointmentTypes.filter(\n    appointment => appointment.name.toLowerCase() !== BUSY_APPOINTMENT_NAME,\n  );\n  const initialValues = generateInitialValues({ questions, selectingCells });\n\n  const onSubmit = async (values: Object) => {\n    try {\n      setIsLoading(true);\n      const data = prepareBookingData({ selectingCells, values, config });\n      const { bookings, errors } = await BookingsService.createBookings({\n        profileId,\n        data,\n      });\n      if (!_isEmpty(errors)) setError(getErrorMessages(errors));\n      addAppointments(bookings);\n      onSave();\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error);\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\n        <Form>\n          <AppointmentTypes appointmentTypes={buyerAppointmentTypes} />\n          <AppointmentData />\n          <Divider />\n          <Box sx={{ mt: 4 }}>\n            <Fields questions={questions} />\n          </Box>\n          <SubmitButton questions={questions} isLoading={isLoading} />\n        </Form>\n      </Formik>\n    </Box>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  profileId: state => _get(state, 'calendar.profileId'),\n  config: state => _get(state, 'calendar.config'),\n  isLoading: state => _get(state, 'calendar.isLoading'),\n  selectingCells: state => _get(state, 'calendar.selectingCells'),\n});\n\nconst mapDispatchToProps = {\n  setIsLoading,\n  setError,\n  addAppointments,\n};\n\ntype PropsWithoutRedux = {\n  appointmentData: Object,\n};\nexport default (connect(\n  structuredSelector,\n  mapDispatchToProps,\n)(withErrorBoundary(BookingForm)): AbstractComponent<PropsWithoutRedux>);\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport MomentUtils from '@date-io/moment';\nimport { useFormikContext } from 'formik';\nimport {\n  Collapse,\n  FormControlLabel,\n  Switch,\n  Grid,\n  RadioGroup,\n  Radio,\n  makeStyles,\n} from '@material-ui/core';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { DATE_PICKER_FORMAT } from '../helpers';\nimport moment from 'moment';\nimport { DATE_PICKER_ID } from '../../helpers';\n\nconst useStyles = makeStyles(theme => ({\n  popover: {\n    ...theme.typography.h5,\n  },\n}));\n\nexport const RepeatSection = (): Element<'div'> => {\n  const classes = useStyles();\n  const { values, handleChange, setFieldValue } = useFormikContext();\n\n  const handleDateChange = (field: string) => (date: Object) => {\n    setFieldValue(field, moment(date).format(DATE_PICKER_FORMAT));\n  };\n\n  return (\n    <div>\n      <FormControlLabel\n        control={\n          <Switch\n            name=\"repeat\"\n            checked={values.repeat}\n            onChange={handleChange}\n            color=\"primary\"\n          />\n        }\n        label=\"Repeat\"\n      />\n\n      <Collapse in={values.repeat}>\n        <div>\n          <RadioGroup\n            name=\"repeatType\"\n            value={values.repeatType}\n            onChange={handleChange}\n          >\n            <FormControlLabel\n              value=\"daily\"\n              control={<Radio color=\"primary\" />}\n              label=\"Daily\"\n            />\n            <FormControlLabel\n              value=\"weekly\"\n              control={<Radio color=\"primary\" />}\n              label=\"Weekly\"\n            />\n          </RadioGroup>\n        </div>\n        <Grid container justifyContent=\"space-between\">\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              variant=\"inline\"\n              inputVariant=\"outlined\"\n              format={DATE_PICKER_FORMAT}\n              margin=\"normal\"\n              label=\"Start date\"\n              value={new Date(values.startDate)}\n              onChange={handleDateChange('startDate')}\n              PopoverProps={{\n                classes: { root: classes.popover },\n                id: DATE_PICKER_ID,\n              }}\n            />\n            <KeyboardDatePicker\n              variant=\"inline\"\n              inputVariant=\"outlined\"\n              format={DATE_PICKER_FORMAT}\n              margin=\"normal\"\n              label=\"End date\"\n              value={new Date(values.endDate)}\n              onChange={handleDateChange('endDate')}\n              PopoverProps={{\n                classes: { root: classes.popover },\n                id: DATE_PICKER_ID,\n              }}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n      </Collapse>\n    </div>\n  );\n};\n","// @flow\nimport type { Element, AbstractComponent } from 'react';\nimport React from 'react';\nimport { Box, Divider, Typography } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport {\n  generateSellerValues,\n  getErrorMessages,\n  prepareSellerBookings,\n} from './helpers';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport AppointmentData from './AppointmentData';\nimport { BookingsService } from '../../../services/YouCanBook';\nimport { setIsLoading, setError, addAppointments } from '../redux/Actions';\nimport { RepeatSection } from './RepeatSection';\nimport { SubmitButton } from './SubmitButton';\n\ntype Props = {\n  profileId: string | typeof undefined,\n  config: Object,\n  appointmentData: Object,\n  setIsLoading: Function,\n  setError: Function,\n  addAppointments: Function,\n  property: Object,\n  onSave: Function,\n  isLoading: boolean,\n  selectingCells: Object,\n};\n\nconst SellerBookingForm = ({\n  profileId,\n  config,\n  selectingCells,\n  setIsLoading,\n  setError,\n  addAppointments,\n  property,\n  onSave,\n  isLoading,\n}: Props): Element<typeof Box> => {\n  if (_isEmpty(selectingCells)) return <Box></Box>;\n  const questions = _get(config, 'questions', []);\n\n  const initialValues = generateSellerValues({\n    property,\n    selectingCells,\n    config,\n  });\n\n  const onSubmit = async (values: Object) => {\n    try {\n      setIsLoading(true);\n      const data = prepareSellerBookings({ selectingCells, values, config });\n      const { bookings, errors } = await BookingsService.createBookings({\n        profileId,\n        data,\n      });\n      if (!_isEmpty(errors)) setError(getErrorMessages(errors));\n      addAppointments(bookings);\n      onSave();\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error);\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\n        <Form>\n          <Box sx={{ mb: 2 }}>\n            <Typography variant=\"h4\">Block available slots</Typography>\n          </Box>\n          <AppointmentData />\n          <Divider />\n          <Box sx={{ my: 2 }}>\n            <RepeatSection />\n          </Box>\n          <SubmitButton questions={questions} isLoading={isLoading} />\n        </Form>\n      </Formik>\n    </Box>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  profileId: state => _get(state, 'calendar.profileId'),\n  config: state => _get(state, 'calendar.config'),\n  property: state => _get(state, 'calendar.property'),\n  isLoading: state => _get(state, 'calendar.isLoading'),\n  selectingCells: state => _get(state, 'calendar.selectingCells'),\n});\n\nconst mapDispatchToProps = {\n  setIsLoading,\n  setError,\n  addAppointments,\n};\n\ntype PropsWithoutRedux = {\n  appointmentData: Object,\n};\nexport default (connect(\n  structuredSelector,\n  mapDispatchToProps,\n)(withErrorBoundary(SellerBookingForm)): AbstractComponent<PropsWithoutRedux>);\n","// @flow\nimport * as React from 'react';\nimport type { AbstractComponent } from 'react';\nimport type { Element } from 'react';\nimport { BookingForm, SellerBookingForm } from '../BookingForm';\nimport { connect } from 'react-redux';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash.get';\n\nexport const BasicLayout = (props: Object): Element<typeof BookingForm> => {\n  const { appointmentData, property, onSave } = props;\n  const FormComponent = property ? SellerBookingForm : BookingForm;\n\n  return <FormComponent appointmentData={appointmentData} onSave={onSave} />;\n};\n\nconst structuredSelector = createStructuredSelector({\n  property: state => _get(state, ['calendar', 'property']),\n});\n\nexport default (connect(structuredSelector)(\n  withErrorBoundary(BasicLayout),\n): AbstractComponent<{}>);\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    background: theme.palette.common.white,\n  },\n  content: {\n    padding: theme.spacing(4),\n    width: '30vw',\n    minWidth: '300px',\n    overflow: 'auto',\n    maxHeight: '90vh',\n  },\n}));\n\nexport const Layout = (props: Object): Element<'div'> => {\n  const {\n    basicLayoutComponent: BasicLayout,\n    commandLayoutComponent: CommandLayout,\n    recurrenceLayoutComponent: RecurrenceLayout,\n    isRecurrence,\n    children,\n    ...restProps\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.layout} {...restProps}>\n      <CommandLayout />\n      <div className={classes.content}>\n        <BasicLayout />\n        <RecurrenceLayout />\n      </div>\n      {children}\n    </div>\n  );\n};\n","// @flow\nimport React, { useEffect } from 'react';\nimport type { Element } from 'react';\n\nexport const CommandLayout = (props: Object): Element<'div'> => {\n  const { onCommitButtonClick, isSaving, setIsSaving } = props;\n\n  useEffect(() => {\n    if (isSaving) {\n      onCommitButtonClick();\n      setIsSaving(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isSaving]);\n\n  return <div></div>;\n};\n","// @flow\nimport * as React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { useDispatch } from 'react-redux';\nimport { stopSelectingCell } from '../redux/Actions';\nimport { OVERLAY_ID } from '../helpers';\nimport { Fade } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n}));\n\nexport const Overlay = ({\n  children,\n  visible,\n  className,\n  onHide,\n  ...restProps\n}: Object): React.Element<typeof Modal> => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const onClose = () => {\n    onHide();\n    dispatch(stopSelectingCell());\n  };\n\n  return (\n    <Modal\n      id={OVERLAY_ID}\n      className={clsx(classes.root, className)}\n      onClose={onClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n      open={visible}\n      variant=\"temporary\"\n      anchor=\"left\"\n      {...restProps}\n    >\n      <Fade in={visible}>\n        <div>{children}</div>\n      </Fade>\n    </Modal>\n  );\n};\n","// @flow\nimport React, { useState } from 'react';\nimport type { Element } from 'react';\nimport { AppointmentForm as SchedulerAppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\nimport BasicLayout from './BasicLayout';\nimport { Layout } from './Layout';\nimport { CommandLayout } from './CommandLayout';\nimport { connectProps } from '@devexpress/dx-react-core';\nimport { useDispatch } from 'react-redux';\nimport { stopSelectingCell } from '../redux/Actions';\nimport { Overlay } from './Overlay';\n\nexport const AppointmentForm = (): Element<typeof SchedulerAppointmentForm> => {\n  const [isSaving, setIsSaving] = useState(false);\n  const dispatch = useDispatch();\n  const onSave = () => {\n    setIsSaving(true);\n    dispatch(stopSelectingCell());\n  };\n\n  const BasicLayoutComponent = connectProps(BasicLayout, () => ({\n    onSave,\n  }));\n\n  const CommandLayoutComponent = connectProps(CommandLayout, () => ({\n    isSaving,\n    setIsSaving,\n  }));\n\n  return (\n    <SchedulerAppointmentForm\n      layoutComponent={Layout}\n      basicLayoutComponent={BasicLayoutComponent}\n      commandLayoutComponent={CommandLayoutComponent}\n      overlayComponent={Overlay}\n    />\n  );\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { useTheme } from '@material-ui/styles';\n\nexport const AppointmentContainer = ({ style, children, ...restProps }) => {\n  const theme = useTheme();\n  return (\n    <div style={{ ...style, zIndex: theme.zIndex.appBar }} {...restProps}>\n      {children}\n    </div>\n  );\n};\n\nAppointmentContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  style: PropTypes.object.isRequired,\n};\n","// @flow\nimport React, { Fragment } from 'react';\nimport type { Element, AbstractComponent } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler';\nimport {\n  Scheduler,\n  WeekView,\n  Appointments,\n  AppointmentTooltip,\n  Toolbar,\n  DateNavigator,\n  TodayButton,\n} from '@devexpress/dx-react-scheduler-material-ui';\nimport _get from 'lodash/get';\nimport DayScaleCell from './DayScaleCell';\nimport TimeTableCell from './TimeTableCell';\nimport Appointment from './Appointment';\nimport TooltipContent from './TooltipContent';\nimport { DEFAULT_DURATION } from './helpers';\nimport { connect } from 'react-redux';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { createStructuredSelector } from 'reselect';\nimport _isEmpty from 'lodash/isEmpty';\nimport IntegratedDates from './IntegratedDates';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Loader } from 'react-loaders';\nimport BlockUi from 'react-block-ui';\nimport useConfig from './hooks/useConfig';\nimport useAppointments from './hooks/useAppointments';\nimport useError from './hooks/useError';\nimport { AppointmentForm } from './AppointmentForm';\nimport { AppointmentContainer } from './AppointmentContainer';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    minHeight: '100px',\n    fontFamily: theme.typography.fontFamily.avenirLT,\n  },\n  loading: {\n    border: '1px solid #E0E0E0',\n    backgroundColor: theme.palette.common.white,\n  },\n}));\n\ntype Props = {\n  config: Object,\n  profileId: string,\n  isLoading: boolean,\n  appointments: Object[],\n};\n\nconst Calendar = ({\n  config,\n  profileId,\n  isLoading,\n  appointments,\n}: Props): Element<'div' | typeof Fragment> => {\n  const classes = useStyles();\n\n  useConfig({ profileId });\n  useAppointments({ profileId });\n  useError();\n\n  const onCommitChanges = () => {};\n\n  if (_isEmpty(config) && !isLoading) return <></>;\n\n  return (\n    <BlockUi\n      tag=\"div\"\n      blocking={isLoading}\n      loader={<Loader active type=\"ball-pulse\" color=\"rgba(231,28,99,1)\" />}\n      className={clsx(classes.container, {\n        [classes.loading]: isLoading,\n      })}\n    >\n      <Paper elevation={3}>\n        <Scheduler data={appointments}>\n          <ViewState />\n          <WeekView\n            timeTableCellComponent={TimeTableCell}\n            dayScaleCellComponent={DayScaleCell}\n            cellDuration={\n              _get(config, 'times.slotLengthMinutes') || DEFAULT_DURATION\n            }\n          />\n          <EditingState onCommitChanges={onCommitChanges} />\n          <IntegratedDates />\n          <Toolbar />\n          <DateNavigator />\n          <TodayButton />\n          <Appointments\n            appointmentComponent={Appointment}\n            containerComponent={AppointmentContainer}\n          />\n          <AppointmentTooltip\n            showCloseButton\n            contentComponent={TooltipContent}\n          />\n          <AppointmentForm />\n        </Scheduler>\n      </Paper>\n    </BlockUi>\n  );\n};\n\ntype PropsWithoutRedux = {};\n\nconst structuredSelector = createStructuredSelector({\n  config: state => _get(state, ['calendar', 'config']),\n  isLoading: state => _get(state, ['calendar', 'isLoading']),\n  appointments: state => _get(state, ['calendar', 'appointments']),\n});\n\nexport default (connect(\n  structuredSelector,\n  undefined,\n)(withErrorBoundary(Calendar)): AbstractComponent<PropsWithoutRedux>);\n"],"sourceRoot":""}