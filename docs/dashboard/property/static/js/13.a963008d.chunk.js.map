{"version":3,"sources":["../node_modules/@material-ui/icons/esm/CheckCircleOutline.js","../node_modules/@material-ui/icons/esm/RadioButtonUnchecked.js","../node_modules/@material-ui/icons/esm/ArrowForwardIos.js","components/SellerProperty/QuestionList/QuestionItem.js","components/SellerProperty/QuestionList/helpers.js","components/SellerProperty/QuestionList/QuestionListWidget.js","components/SellerProperty/QuestionList/QuestionList.js"],"names":["d","useStyles","makeStyles","theme","link","fontFamily","typography","avenirLT","border","backgroundColor","palette","background","lightGray","padding","spacing","marginBottom","display","alignItems","name","h5","marginLeft","color","text","dark","flex","marginTop","linkHighlight","fontWeight","disabledLink","pointerEvents","opacity","selectIcon","float","width","height","primary","main","checkIcon","disabledIcon","gray","loopIcon","QuestionItem","props","propertyId","form","formId","FormId","Name","formStatus","DataStatus","isEnabled","isSubmitted","FORM_STATUS","submitted","classes","data-testid","className","clsx","to","CheckCircleOutline","RadioButtonUnchecked","ArrowForwardIos","isListDetailsForm","_get","FORM_TYPE_IDS","listingDetails","mapForms","forms","listDetailsForm","find","isListDetailsFormSubmitted","map","shortForm","sort","formA","formB","widget","description","QuestionListWidget","property","propertyData","Property","PropertyId","preparedForms","sortedForms","prepareForms","Widget","title","ConvertDTPropertyAddress","key","hideIfInvalidProps","_isEmpty","container","minHeight","loading","common","white","notFound","QuestionList","properties","isLoading","fetchSellerPropertyForms","error","useEffect","toastr","orderedProperties","itemA","itemB","moment","CreatedAt","tag","blocking","loader","active","type","process","Grid","Typography","variant","Forms","structuredSelector","createStructuredSelector","state","mapDispatchToProps","connect"],"mappings":"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","file":"static/js/13.a963008d.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 7.58L10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'CheckCircleOutline');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.88 4.12L13.76 12l-7.88 7.88L8 22l10-10L8 2z\"\n}), 'ArrowForwardIos');","// @flow\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { FORM_STATUS } from 'components/FormBuilder/Constants';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  CheckCircleOutline,\n  RadioButtonUnchecked,\n  ArrowForwardIos,\n} from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  propertyId: number,\n  form: Object,\n};\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    fontFamily: theme.typography.fontFamily.avenirLT,\n    border: '1px solid #E0E0E0',\n    backgroundColor: theme.palette.background.lightGray,\n    padding: theme.spacing(2.125),\n    marginBottom: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center',\n  },\n  name: {\n    ...theme.typography.h5,\n    marginLeft: theme.spacing(1),\n    color: theme.palette.text.dark,\n    flex: 1,\n    marginTop: '2px',\n  },\n  linkHighlight: {\n    fontWeight: '900',\n  },\n  disabledLink: {\n    pointerEvents: 'none',\n    opacity: 0.5,\n  },\n  selectIcon: {\n    float: 'right',\n    width: '14px',\n    height: '14px',\n    color: theme.palette.primary.main,\n  },\n  checkIcon: {\n    color: theme.palette.primary.main,\n  },\n  disabledIcon: {\n    color: theme.palette.primary.gray,\n  },\n  loopIcon: {\n    color: theme.palette.primary.gray,\n  },\n}));\n\nexport const QuestionItem = (props: Props): React.Element<'div'> => {\n  const { propertyId, form } = props;\n  const {\n    FormId: formId,\n    Name: name,\n    DataStatus: formStatus,\n    isEnabled = false,\n  } = form;\n  const isSubmitted = formStatus === FORM_STATUS.submitted;\n  const classes = useStyles();\n  return (\n    <div data-testid=\"question-item\">\n      <Link\n        className={clsx(classes.link, {\n          [classes.disabledLink]: !isEnabled,\n        })}\n        to={`/property?propertyId=${propertyId}&formId=${formId}`}\n      >\n        {isSubmitted ? (\n          <CheckCircleOutline className={classes.checkIcon} />\n        ) : (\n          <RadioButtonUnchecked className={classes.loopIcon} />\n        )}\n        <span\n          className={clsx(classes.name, {\n            [classes.linkHighlight]: isSubmitted,\n          })}\n        >\n          {name}\n        </span>\n        <ArrowForwardIos\n          className={clsx(classes.selectIcon, {\n            [classes.disabledIcon]: !isEnabled,\n          })}\n        />\n      </Link>\n    </div>\n  );\n};\n","import _get from 'lodash/get';\nimport { FORM_STATUS, FORM_TYPE_IDS } from 'shared/Consts';\n\nconst isListDetailsForm = (form = {}) =>\n  _get(form, ['FormTypeId']) === FORM_TYPE_IDS.listingDetails;\n\nconst mapForms = (forms = []) => {\n  const listDetailsForm = forms.find(form => isListDetailsForm(form));\n\n  if (!listDetailsForm) return forms;\n\n  const isListDetailsFormSubmitted =\n    _get(listDetailsForm, ['DataStatus']) === FORM_STATUS.submitted;\n  return forms.map(form => ({\n    ...form,\n    isEnabled: isListDetailsForm(form) || isListDetailsFormSubmitted,\n  }));\n};\n\nconst shortForm = (forms = []) =>\n  forms.sort(\n    (formA, formB) => _get(formA, ['Order'], 0) - _get(formB, ['Order'], 0),\n  );\n\nconst prepareForms = (forms = []) => {\n  const sortedForms = shortForm(forms);\n  return mapForms(sortedForms);\n};\n\nexport { mapForms, prepareForms };\n","// @flow\nimport React from 'react';\nimport type { AbstractComponent, Element } from 'react';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport { hideIfInvalidProps } from 'utils/RenderComponent';\nimport { QuestionItem } from './QuestionItem';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Widget } from 'components/Widget';\nimport { ConvertDTPropertyAddress } from 'shared/Consts';\n\nimport { prepareForms } from './helpers';\n\ntype Props = {\n  forms: Object,\n  property: Object,\n};\n\nconst useStyles = makeStyles(theme => ({\n  widget: {\n    marginBottom: theme.spacing(3),\n  },\n  description: {\n    ...theme.typography.h5,\n    marginBottom: theme.spacing(3),\n    color: theme.palette.primary.gray,\n  },\n}));\n\nconst checkValidProps = ({ forms, property }) =>\n  !_isEmpty(forms) && !_isEmpty(property);\n\nexport const QuestionListWidget = ({\n  property,\n  forms,\n}: Props): Element<typeof Widget> => {\n  const { Property: propertyData, PropertyId: propertyId } = property;\n  const classes = useStyles();\n  const preparedForms = prepareForms(forms);\n\n  return (\n    <Widget title=\"Question List\" className={classes.widget}>\n      <div className={classes.description}>\n        To publish your properties (\n        <strong>{ConvertDTPropertyAddress(propertyData)}</strong>) to our\n        system, you need to complete the list of questions below:\n      </div>\n      {preparedForms.map(form => (\n        <QuestionItem\n          form={form}\n          propertyId={propertyId}\n          key={_get(form, ['FormId'])}\n        />\n      ))}\n    </Widget>\n  );\n};\n\nexport default (hideIfInvalidProps(checkValidProps)(\n  QuestionListWidget,\n): AbstractComponent<{}>);\n","// @flow\nimport React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport type { Element, AbstractComponent } from 'react';\nimport { fetchSellerPropertyForms } from 'components/SellerProperty/Listing/Form/redux/Actions';\nimport { toastr } from 'react-redux-toastr';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport moment from 'moment';\nimport { QuestionListWidget } from './QuestionListWidget';\nimport BlockUi from 'react-block-ui';\nimport { Loader } from 'react-loaders';\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\n\ntype Props = {\n  properties: Array<Object>,\n  fetchSellerPropertyForms: Function,\n  error: string,\n  isLoading: boolean,\n};\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    minHeight: '100px',\n  },\n  loading: {\n    border: '1px solid #E0E0E0',\n    backgroundColor: theme.palette.common.white,\n  },\n  notFound: {\n    padding: '1rem',\n  },\n}));\n\nexport const QuestionList = (props: Props): Element<'div' | 'p'> => {\n  const { properties, isLoading, fetchSellerPropertyForms, error } = props;\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetchSellerPropertyForms();\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      toastr.error('Something went wrong');\n    }\n  }, [error]);\n\n  const orderedProperties = properties.sort((itemA, itemB) => {\n    return moment(itemA.CreatedAt) - moment(itemB.CreatedAt);\n  });\n\n  return (\n    <BlockUi\n      tag=\"div\"\n      blocking={isLoading}\n      loader={<Loader active type=\"ball-pulse\" color=\"rgba(231,28,99,1)\" />}\n      className={clsx(classes.container, { [classes.loading]: isLoading })}\n    >\n      {process.env.REACT_APP_SELL_SIDE_ENABLED !== '1' && (\n        <Grid container className={classes.notFound}>\n          <Typography variant=\"h3\">Coming Soon</Typography>\n        </Grid>\n      )}\n      {_isEmpty(properties) && !isLoading && (\n        <Grid container className={classes.notFound}>\n          <Typography variant=\"h3\">No property found</Typography>\n        </Grid>\n      )}\n      {orderedProperties.map(property => {\n        const { Forms: forms, PropertyId: propertyId } = property;\n        return (\n          <QuestionListWidget\n            property={property}\n            forms={forms}\n            key={propertyId}\n          />\n        );\n      })}\n    </BlockUi>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  properties: state =>\n    _get(state, ['sellerPropertyForms', 'propertyForms', 'Properties'], []),\n  isLoading: state => _get(state, ['sellerPropertyForms', 'isLoading']),\n  error: state => _get(state, ['sellerPropertyForms', 'error']),\n});\n\nconst mapDispatchToProps = { fetchSellerPropertyForms };\n\nexport default (connect(\n  structuredSelector,\n  mapDispatchToProps,\n)(QuestionList): AbstractComponent<Props>);\n"],"sourceRoot":""}