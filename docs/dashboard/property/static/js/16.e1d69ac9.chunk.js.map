{"version":3,"sources":["components/Calendar/DayScaleCell.js","components/Calendar/helpers.js","components/Calendar/TimeTableCell.js","components/Calendar/Appointment.js","components/Calendar/TooltipContent.js","components/Calendar/redux/Actions.js","components/Calendar/IntegratedDates.js","services/YouCanBook/Request.js","services/YouCanBook/ProfilesService.js","services/YouCanBook/BookingsService.js","components/Calendar/hooks/useConfig.js","components/Calendar/hooks/useAppointments.js","components/Calendar/hooks/useError.js","components/Calendar/Calendar.js"],"names":["useStyles","makeStyles","theme","today","backgroundColor","alpha","palette","primary","main","DayScaleCell","props","classes","className","clsx","ERROR_MESSAGES","MOMENT_FORMAT","getTimeConfig","config","dateString","key","fieldConfig","_get","moment","isCellActive","dateName","Date","toLocaleString","weekday","toLowerCase","mapDateToName","currentMoment","isSame","isMomentInToday","diff","isMomentInPast","isActivatedMoment","currentDate","format","startDate","endDate","isSameOrAfter","isSameOrBefore","isAvailableMoment","breakStart","breakEnd","isMomentInBreaking","disableCell","background","action","disabledBackground","backgroundSize","pointerEvents","structuredSelector","createStructuredSelector","state","connect","undefined","withErrorBoundary","TimeTableCell","appointment","Appointment","children","restProps","wrapper","padding","spacing","paddingTop","section","marginBottom","TooltipContent","appointmentData","displayDate","displayTime","formatTime","Paper","Typography","variant","color","Event","AccessTime","setConfig","data","type","CALENDAR_ACTIONS","payload","setError","setIsLoading","mapDispatchToProps","setStartOfWeek","setEndOfWeek","name","computed","startViewDate","endViewDate","Request","this","baseURL","process","cancelToken","method","url","params","headers","needResHeaders","self","CancelToken","axios","Promise","resolve","reject","options","timeout","Authorization","PLACEHOLDER_AUTHORIZATION","c","request","then","res","JSON","parse","error","status","message","errors","id","fields","PATHS","PROFILES","BookingsService","a","profileId","from","to","needMore","nextPage","bookings","BOOKINGS","jumpToDate","resLink","tmpBookings","lastItemStartDate","length","isBefore","remapBookings","getEmail","booking","emailField","filter","answer","code","map","title","useConfig","dispatch","useDispatch","useEffect","ProfilesService","getProfileById","cancel","useAppointments","startOfWeek","useSelector","endOfWeek","useState","appointments","setAppointments","getBookings","useError","toastr","container","minHeight","loading","border","common","white","isLoading","_isEmpty","tag","blocking","loader","active","elevation","timeTableCellComponent","dayScaleCellComponent","cellDuration","appointmentComponent","showCloseButton","contentComponent"],"mappings":"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","file":"static/js/16.e1d69ac9.chunk.js","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { WeekView } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles, alpha } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n  today: {\n    backgroundColor: alpha(theme.palette.primary.main, 0.16),\n  },\n}));\n\nconst DayScaleCell = (props: Object): React.Element<'div'> => {\n  const classes = useStyles();\n  const { today } = props;\n\n  return (\n    <WeekView.DayScaleCell\n      {...props}\n      className={clsx({\n        [classes.today]: today,\n      })}\n    />\n  );\n};\n\nexport default DayScaleCell;\n","// @flow\nimport _get from 'lodash/get';\nimport moment from 'moment';\n\nexport const DEFAULT_DURATION = 60;\nexport const CALENDAR_CONFIG_FIELDS = 'times,times.*';\nexport const ERROR_MESSAGES = {\n  getTimeConfig: 'Something went wrong',\n};\n\nconst DATE_FORMAT = 'MM-DD-YYYY';\nconst MOMENT_FORMAT = `${DATE_FORMAT} HH:mm:ss`;\nconst DISPLAY_DATE_FORMAT = 'dddd, MMMM DD, YYYY';\nconst DISPLAY_TIME_FORMAT = 'hh:mm A';\n\nconst mapDateToName = dateString =>\n  new Date(dateString)\n    .toLocaleString('en-us', { weekday: 'short' })\n    .toLowerCase();\n\nconst getTimeConfig = ({ config, dateString, key }) => {\n  const fieldConfig = _get(config, key) || '';\n  return moment(`${dateString} ${fieldConfig}`, MOMENT_FORMAT);\n};\n\nconst isActivatedMoment = ({ dateName, config }) =>\n  _get(config, `${dateName}Active`) || false;\n\nconst isAvailableMoment = ({\n  config,\n  currentMoment,\n  currentDate: dateString,\n  dateName,\n}) => {\n  const startDate = getTimeConfig({\n    config,\n    dateString,\n    key: `${dateName}Start`,\n  });\n  const endDate = getTimeConfig({ config, dateString, key: `${dateName}End` });\n\n  return (\n    currentMoment.isSameOrAfter(startDate) &&\n    currentMoment.isSameOrBefore(endDate)\n  );\n};\n\nconst isMomentInBreaking = ({\n  config,\n  currentMoment,\n  currentDate: dateString,\n}) => {\n  const breakStart = getTimeConfig({ config, dateString, key: 'breakStart' });\n  const breakEnd = getTimeConfig({ config, dateString, key: 'breakEnd' });\n\n  return (\n    currentMoment.isSameOrAfter(breakStart) &&\n    currentMoment.isSameOrBefore(breakEnd)\n  );\n};\n\nconst isMomentInPast = currentMoment =>\n  moment().diff(currentMoment, 'hours') > 0;\n\nconst isMomentInToday = currentMoment => moment().isSame(currentMoment, 'day');\n\ntype isCellActiveParams = {\n  dateString: string,\n  config: Object,\n};\nexport const isCellActive = ({\n  dateString,\n  config,\n}: isCellActiveParams): boolean => {\n  const dateName = mapDateToName(dateString);\n  const currentMoment = moment(dateString);\n\n  if (isMomentInToday(currentMoment)) return false;\n  if (isMomentInPast(currentMoment)) return false;\n  if (!isActivatedMoment({ dateName, config })) return false;\n\n  const currentDate = currentMoment.format(DATE_FORMAT);\n\n  const isAvailable = isAvailableMoment({\n    config,\n    currentMoment,\n    currentDate,\n    dateName,\n  });\n  if (!isAvailable) return false;\n\n  const isBreakingMoment = isMomentInBreaking({\n    config,\n    currentMoment,\n    currentDate,\n  });\n  return !isBreakingMoment;\n};\n\nexport const formatTime = ({ startDate, endDate }: Object): Object => {\n  const displayDate = moment(startDate).format(DISPLAY_DATE_FORMAT);\n  const displayTime = `${moment(startDate).format(\n    DISPLAY_TIME_FORMAT,\n  )} - ${moment(endDate).format(DISPLAY_TIME_FORMAT)}`;\n  return { displayDate, displayTime };\n};\n","// @flow\nimport * as React from 'react';\nimport { WeekView } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash/get';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { isCellActive } from './helpers';\n\nconst useStyles = makeStyles(theme => ({\n  disableCell: {\n    background: `linear-gradient(-45deg,${theme.palette.action.disabledBackground} 10%,transparent 10%,transparent 50%,${theme.palette.action.disabledBackground} 50%,${theme.palette.action.disabledBackground} 60%,transparent 60%,transparent)`,\n    backgroundSize: '8px 8px',\n    pointerEvents: 'none',\n  },\n}));\n\nconst TimeTableCell = (props: Object): React.Element<'div'> => {\n  const classes = useStyles();\n  const { startDate: dateString, config } = props;\n\n  return (\n    <WeekView.TimeTableCell\n      {...props}\n      className={clsx({\n        [classes.disableCell]: !isCellActive({ dateString, config }),\n      })}\n    />\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  config: state => _get(state, ['calendar', 'config']),\n});\n\ntype PropsWithoutRedux = {};\nexport default (connect(\n  structuredSelector,\n  undefined,\n)(withErrorBoundary(TimeTableCell)): Element<PropsWithoutRedux>);\n","// @flow\nimport * as React from 'react';\nimport { Appointments } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  appointment: {\n    backgroundColor: theme.palette.primary.main,\n\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst Appointment = ({\n  children,\n  ...restProps\n}: Object): React.Element<'div'> => {\n  const classes = useStyles();\n  return (\n    <Appointments.Appointment {...restProps} className={classes.appointment}>\n      {children}\n    </Appointments.Appointment>\n  );\n};\n\nexport default Appointment;\n","// @flow\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport _get from 'lodash/get';\nimport Typography from '@material-ui/core/Typography';\nimport { formatTime } from './helpers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  AccessTime as AccessTimeIcon,\n  Event as EventIcon,\n} from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    padding: theme.spacing(2),\n    paddingTop: 0,\n  },\n  section: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst TooltipContent = ({ appointmentData }: Object): React.Element<'div'> => {\n  const classes = useStyles();\n  const { displayDate, displayTime } = formatTime(appointmentData);\n\n  return (\n    <Paper className={classes.wrapper}>\n      <Typography variant=\"h3\" color=\"primary\" className={classes.section}>\n        {_get(appointmentData, 'title', '')}\n      </Typography>\n      <div className={classes.section}>\n        <Typography variant=\"p\">\n          <EventIcon /> {displayDate}\n        </Typography>\n      </div>\n      <div>\n        <Typography variant=\"p\">\n          <AccessTimeIcon /> {displayTime}\n        </Typography>\n      </div>\n    </Paper>\n  );\n};\nexport default TooltipContent;\n","import { CALENDAR_ACTIONS } from './Constants';\n\nexport const setConfig = data => {\n  return {\n    type: CALENDAR_ACTIONS.setConfig,\n    payload: data,\n  };\n};\n\nexport const setStartOfWeek = data => {\n  return {\n    type: CALENDAR_ACTIONS.setStartOfWeek,\n    payload: data,\n  };\n};\n\nexport const setEndOfWeek = data => {\n  return {\n    type: CALENDAR_ACTIONS.setEndOfWeek,\n    payload: data,\n  };\n};\n\nexport const setError = data => {\n  return {\n    type: CALENDAR_ACTIONS.setError,\n    payload: data,\n  };\n};\n\nexport const setIsLoading = data => {\n  return {\n    type: CALENDAR_ACTIONS.setIsLoading,\n    payload: data,\n  };\n};\n","// @flow\nimport React from 'react';\nimport type { AbstractComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { setEndOfWeek, setStartOfWeek } from './redux/Actions';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\n\nconst IntegratedDates = ({ setStartOfWeek, setEndOfWeek }) => {\n  const startViewDateComputed = ({ startViewDate }) => {\n    setStartOfWeek(startViewDate);\n    return startViewDate;\n  };\n\n  const endViewDateComputed = ({ endViewDate }) => {\n    setEndOfWeek(endViewDate);\n    return endViewDate;\n  };\n\n  return (\n    <Plugin name=\"IntegratedDates\">\n      <Getter name=\"startViewDate\" computed={startViewDateComputed} />\n      <Getter name=\"endViewDate\" computed={endViewDateComputed} />\n    </Plugin>\n  );\n};\n\ntype PropsWithoutRedux = {};\n\nconst mapDispatchToProps = {\n  setStartOfWeek,\n  setEndOfWeek,\n};\n\nexport default (connect(\n  undefined,\n  mapDispatchToProps,\n)(withErrorBoundary(IntegratedDates)): AbstractComponent<PropsWithoutRedux>);\n","import axios from 'axios';\nimport _get from 'lodash/get';\nimport { PLACEHOLDER_AUTHORIZATION } from './constants';\n\nexport default class Request {\n  constructor() {\n    this.baseURL = `${process.env.REACT_APP_YOU_BOOK_ME_ENDPOINT}/${process.env.REACT_APP_YOU_BOOK_ME_ACCOUNT_ID}/`;\n    this.cancelToken = null;\n  }\n\n  cancel() {\n    if (this.cancelToken !== null) this.cancelToken();\n  }\n\n  axios({\n    method,\n    baseURL = this.baseURL,\n    url,\n    data,\n    params,\n    headers = {},\n    needResHeaders = false,\n  }) {\n    const self = this;\n    const { CancelToken } = axios;\n\n    return new Promise((resolve, reject) => {\n      const options = {\n        method,\n        url,\n        baseURL,\n        timeout: 30000,\n        params,\n        data,\n        headers: { ...headers, Authorization: PLACEHOLDER_AUTHORIZATION },\n        cancelToken: new CancelToken(function executor(c) {\n          self.cancelToken = c;\n        }),\n      };\n\n      axios.request(options).then(\n        res => {\n          const data =\n            typeof res.data === 'object' ? res.data : JSON.parse(res.data);\n\n          resolve(needResHeaders ? { data, headers: res.headers } : data);\n        },\n        error => {\n          const status = _get(error, ['response', 'status']);\n          const message = _get(error, ['response', 'data', 'message']);\n          const errors = _get(error, ['response', 'data', 'errors']);\n          const errorRes = { status, message, errors };\n          reject(errorRes);\n        },\n      );\n    });\n  }\n}\n","import Request from './Request';\nimport { PATHS } from './constants';\n\nclass ProfilesService extends Request {\n  getProfileById({ id, fields }) {\n    if (!id) return {};\n\n    return this.axios({\n      method: 'GET',\n      url: `${PATHS.PROFILES}/${id}`,\n      params: {\n        fields,\n      },\n    });\n  }\n}\n\nexport default new ProfilesService();\n","import Request from './Request';\nimport { PATHS } from './constants';\nimport _get from 'lodash/get';\nimport moment from 'moment';\nimport parse from 'parse-link-header';\n\nclass BookingsService extends Request {\n  async getBookings({ profileId, from, to }) {\n    if (!profileId) return {};\n\n    let needMore = true;\n    let nextPage = '';\n    let bookings = [];\n\n    while (needMore) {\n      const res = !nextPage\n        ? await this.axios({\n            method: 'GET',\n            url: `${PATHS.PROFILES}/${profileId}/${PATHS.BOOKINGS}`,\n            params: {\n              fields: 'id,startsAt,endsAt,answers,answers.*',\n              jumpToDate: moment(from).format('YYYY-MM-DD'),\n            },\n            needResHeaders: true,\n          })\n        : await this.axios({\n            method: 'GET',\n            url: nextPage,\n            needResHeaders: true,\n          });\n\n      const resLink = _get(res, ['headers', 'link'], '');\n      nextPage = _get(parse(resLink), ['next', 'url'], '');\n\n      const tmpBookings = _get(res, ['data']);\n      bookings = [...bookings, ...tmpBookings];\n      const lastItemStartDate = _get(\n        tmpBookings,\n        [tmpBookings.length - 1, 'startsAt'],\n        '',\n      );\n\n      needMore = nextPage && moment(lastItemStartDate).isBefore(to);\n    }\n\n    return remapBookings(bookings);\n  }\n}\n\nconst getEmail = booking => {\n  const emailField = _get(booking, ['answers'], []).filter(\n    answer => answer.code === 'EMAIL',\n  )[0];\n\n  return _get(emailField, 'string', '');\n};\n\nconst remapBookings = bookings =>\n  bookings.map(booking => {\n    return {\n      title: getEmail(booking),\n      id: _get(booking, 'id'),\n      startDate: _get(booking, 'startsAt'),\n      endDate: _get(booking, 'endsAt'),\n    };\n  });\n\nexport default new BookingsService();\n","// @flow\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport _get from 'lodash/get';\nimport { ProfilesService } from '../../../services/YouCanBook';\nimport { CALENDAR_CONFIG_FIELDS } from '../helpers';\nimport { setConfig, setError, setIsLoading } from '../redux/Actions';\nimport type { CustomHookProps } from './types';\n\nconst useConfig = ({ profileId }: CustomHookProps) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    (async () => {\n      dispatch(setIsLoading(true));\n      try {\n        const data = await ProfilesService.getProfileById({\n          id: profileId,\n          fields: CALENDAR_CONFIG_FIELDS,\n        });\n        dispatch(setConfig(_get(data, 'times') || {}));\n      } catch (error) {\n        dispatch(setError(error));\n      }\n      dispatch(setIsLoading(false));\n    })();\n\n    return () => {\n      ProfilesService.cancel();\n    };\n    // eslint-disable-next-line\n  }, []);\n};\n\nexport default useConfig;\n","// @flow\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BookingsService } from '../../../services/YouCanBook';\nimport _get from 'lodash/get';\nimport type { CustomHookProps } from './types';\nimport { setError, setIsLoading } from '../redux/Actions';\n\nconst useAppointments = ({\n  profileId,\n}: CustomHookProps): [Array<Object>, Function] => {\n  const dispatch = useDispatch();\n  const startOfWeek = useSelector(state =>\n    _get(state, ['calendar', 'startOfWeek']),\n  );\n  const endOfWeek = useSelector(state =>\n    _get(state, ['calendar', 'endOfWeek']),\n  );\n  const [appointments, setAppointments] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      if (!endOfWeek) return;\n      try {\n        dispatch(setIsLoading(true));\n        const appointmentData = await BookingsService.getBookings({\n          profileId,\n          from: startOfWeek,\n          to: endOfWeek,\n        });\n        setAppointments(appointmentData);\n      } catch (error) {\n        dispatch(setError(error));\n      }\n      dispatch(setIsLoading(false));\n    })();\n\n    return () => {\n      BookingsService.cancel();\n    };\n    // eslint-disable-next-line\n  }, [endOfWeek]);\n\n  return [appointments, setAppointments];\n};\n\nexport default useAppointments;\n","// @flow\nimport { useEffect } from 'react';\nimport { ERROR_MESSAGES } from '../helpers';\nimport { toastr } from 'react-redux-toastr';\nimport { useSelector } from 'react-redux';\nimport _get from 'lodash/get';\n\nconst useError = () => {\n  const error = useSelector(state => _get(state, ['calendar', 'error']));\n\n  useEffect(() => {\n    if (!error) return;\n\n    const { message } = error || {};\n\n    if (message) {\n      toastr.error(ERROR_MESSAGES.getTimeConfig, message);\n    }\n  }, [error]);\n};\n\nexport default useError;\n","// @flow\nimport React, { Fragment } from 'react';\nimport type { Element } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { ViewState } from '@devexpress/dx-react-scheduler';\nimport {\n  Scheduler,\n  WeekView,\n  Appointments,\n  AppointmentTooltip,\n  Toolbar,\n  DateNavigator,\n  TodayButton,\n} from '@devexpress/dx-react-scheduler-material-ui';\nimport _get from 'lodash/get';\nimport DayScaleCell from './DayScaleCell';\nimport TimeTableCell from './TimeTableCell';\nimport Appointment from './Appointment';\nimport TooltipContent from './TooltipContent';\nimport { DEFAULT_DURATION } from './helpers';\nimport { connect } from 'react-redux';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { createStructuredSelector } from 'reselect';\nimport _isEmpty from 'lodash/isEmpty';\nimport IntegratedDates from './IntegratedDates';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Loader } from 'react-loaders';\nimport BlockUi from 'react-block-ui';\nimport useConfig from './hooks/useConfig';\nimport useAppointments from './hooks/useAppointments';\nimport useError from './hooks/useError';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    minHeight: '100px',\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(3),\n  },\n  loading: {\n    border: '1px solid #E0E0E0',\n    backgroundColor: theme.palette.common.white,\n  },\n}));\n\ntype Props = {\n  config: Object,\n  profileId: string,\n  isLoading: boolean,\n};\n\nconst Calendar = ({\n  config,\n  profileId,\n  isLoading,\n}: Props): Element<'div' | typeof Fragment> => {\n  const classes = useStyles();\n\n  useConfig({ profileId });\n\n  const [appointments] = useAppointments({ profileId });\n\n  useError();\n\n  if (_isEmpty(config) && !isLoading) return <></>;\n\n  return (\n    <BlockUi\n      tag=\"div\"\n      blocking={isLoading}\n      loader={<Loader active type=\"ball-pulse\" color=\"rgba(231,28,99,1)\" />}\n      className={clsx(classes.container, {\n        [classes.loading]: isLoading,\n      })}\n    >\n      <Paper elevation={3}>\n        <Scheduler data={appointments}>\n          <ViewState />\n          <WeekView\n            timeTableCellComponent={TimeTableCell}\n            dayScaleCellComponent={DayScaleCell}\n            cellDuration={_get(config, 'slotLengthMinutes') || DEFAULT_DURATION}\n          />\n          <IntegratedDates />\n          <Toolbar />\n          <DateNavigator />\n          <TodayButton />\n          <Appointments appointmentComponent={Appointment} />\n          <AppointmentTooltip\n            showCloseButton\n            contentComponent={TooltipContent}\n          />\n        </Scheduler>\n      </Paper>\n    </BlockUi>\n  );\n};\n\ntype PropsWithoutRedux = {};\n\nconst structuredSelector = createStructuredSelector({\n  config: state => _get(state, ['calendar', 'config']),\n  isLoading: state => _get(state, ['calendar', 'isLoading']),\n});\n\nexport default (connect(\n  structuredSelector,\n  undefined,\n)(withErrorBoundary(Calendar)): Element<PropsWithoutRedux>);\n"],"sourceRoot":""}