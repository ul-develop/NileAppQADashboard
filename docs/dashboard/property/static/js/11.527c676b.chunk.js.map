{"version":3,"sources":["utils/RenderComponent.js","../node_modules/@material-ui/icons/esm/CheckCircleOutline.js","../node_modules/@material-ui/icons/esm/RadioButtonUnchecked.js","../node_modules/@material-ui/icons/esm/ArrowForwardIos.js","components/SellerProperty/QuestionList/QuestionItem.js","components/SellerProperty/QuestionList/QuestionListWidget.js","components/SellerProperty/QuestionList/QuestionList.js"],"names":["isValidProps","createSvgIcon","d","useStyles","makeStyles","theme","link","fontFamily","typography","avenirLT","border","backgroundColor","palette","background","lightGray","padding","spacing","marginBottom","display","alignItems","name","h5","marginLeft","color","text","dark","flex","linkHighlight","fontWeight","selectIcon","float","width","height","primary","main","checkIcon","loopIcon","gray","QuestionItem","props","propertyId","form","formId","FormId","Name","isSubmitted","DataStatus","FORM_STATUS","submitted","classes","data-testid","className","href","APP_BASE_URL","CheckCircleOutline","RadioButtonUnchecked","clsx","ArrowForwardIos","widget","description","QuestionListWidget","property","forms","propertyData","Property","PropertyId","orderForms","sort","formA","formB","_get","Widget","title","ConvertDTPropertyAddress","map","key","_isEmpty","WrappedComponent","container","minHeight","loading","common","white","QuestionList","properties","isLoading","fetchSellerPropertyForms","error","useEffect","toastr","orderedProperties","itemA","itemB","moment","CreatedAt","tag","blocking","loader","active","type","Forms","structuredSelector","createStructuredSelector","state","mapDispatchToProps","connect"],"mappings":"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","file":"static/js/11.527c676b.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\n\nexport const hideIfInvalidProps = (\n  isValidProps: Function,\n): Function => WrappedComponent => {\n  const renderWrapped = props => {\n    if (!isValidProps(props)) return null;\n\n    return <WrappedComponent {...props} />;\n  };\n\n  return renderWrapped;\n};\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 7.58L10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'CheckCircleOutline');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.88 4.12L13.76 12l-7.88 7.88L8 22l10-10L8 2z\"\n}), 'ArrowForwardIos');","// @flow\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { APP_BASE_URL } from 'shared/Consts';\nimport { FORM_STATUS } from 'components/FormBuilder/Constants';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  CheckCircleOutline,\n  RadioButtonUnchecked,\n  ArrowForwardIos,\n} from '@material-ui/icons';\n\ntype Props = {\n  propertyId: number,\n  form: Object,\n};\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    fontFamily: theme.typography.fontFamily.avenirLT,\n    border: '1px solid #E0E0E0',\n    backgroundColor: theme.palette.background.lightGray,\n    padding: theme.spacing(2.125),\n    marginBottom: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center',\n  },\n  name: {\n    ...theme.typography.h5,\n    marginLeft: theme.spacing(1),\n    color: theme.palette.text.dark,\n    flex: 1,\n  },\n  linkHighlight: {\n    fontWeight: '900',\n  },\n  selectIcon: {\n    float: 'right',\n    width: '14px',\n    height: '14px',\n    color: theme.palette.primary.main,\n  },\n  checkIcon: {\n    color: theme.palette.primary.main,\n  },\n  loopIcon: {\n    color: theme.palette.primary.gray,\n  },\n}));\n\nexport const QuestionItem = (props: Props): React.Element<'div'> => {\n  const { propertyId, form } = props;\n  const { FormId: formId, Name: name, DataStatus: formStatus } = form;\n  const isSubmitted = formStatus === FORM_STATUS.submitted;\n  const classes = useStyles();\n\n  return (\n    <div data-testid=\"question-item\">\n      <a\n        className={classes.link}\n        href={`${APP_BASE_URL}/property?propertyId=${propertyId}&formId=${formId}`}\n      >\n        {isSubmitted ? (\n          <CheckCircleOutline className={classes.checkIcon} />\n        ) : (\n          <RadioButtonUnchecked className={classes.loopIcon} />\n        )}\n        <span\n          className={clsx(classes.name, {\n            [classes.linkHighlight]: isSubmitted,\n          })}\n        >\n          {name}\n        </span>\n        <ArrowForwardIos className={classes.selectIcon} />\n      </a>\n    </div>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { AbstractComponent, Element } from 'react';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport { hideIfInvalidProps } from 'utils/RenderComponent';\nimport { QuestionItem } from './QuestionItem';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Widget } from 'components/Widget';\nimport { ConvertDTPropertyAddress } from 'shared/Consts';\n\ntype Props = {\n  forms: Object,\n  property: Object,\n};\n\nconst useStyles = makeStyles(theme => ({\n  widget: {\n    marginBottom: theme.spacing(3),\n  },\n  description: {\n    ...theme.typography.h5,\n    marginBottom: theme.spacing(3),\n    color: theme.palette.primary.gray,\n  },\n}));\n\nconst checkValidProps = ({ forms, property }) =>\n  !_isEmpty(forms) && !_isEmpty(property);\n\nexport const QuestionListWidget = ({\n  property,\n  forms,\n}: Props): Element<typeof Widget> => {\n  const { Property: propertyData, PropertyId: propertyId } = property;\n  const orderForms = forms.sort(\n    (formA, formB) => _get(formA, ['Order'], 0) - _get(formB, ['Order'], 0),\n  );\n  const classes = useStyles();\n\n  return (\n    <Widget title=\"Question List\" className={classes.widget}>\n      <div className={classes.description}>\n        To publish your properties (\n        <strong>{ConvertDTPropertyAddress(propertyData)}</strong>) to our\n        system, you need to complete the list of questions below:\n      </div>\n      {orderForms.map(form => (\n        <QuestionItem\n          form={form}\n          propertyId={propertyId}\n          key={_get(form, ['FormId'])}\n        />\n      ))}\n    </Widget>\n  );\n};\n\nexport default (hideIfInvalidProps(checkValidProps)(\n  QuestionListWidget,\n): AbstractComponent<{}>);\n","// @flow\nimport React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport type { Element, AbstractComponent } from 'react';\nimport { fetchSellerPropertyForms } from 'components/SellerProperty/Listing/Form/redux/Actions';\nimport { toastr } from 'react-redux-toastr';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport moment from 'moment';\nimport { QuestionListWidget } from './QuestionListWidget';\nimport BlockUi from 'react-block-ui';\nimport { Loader } from 'react-loaders';\nimport { makeStyles } from '@material-ui/core/styles';\n\ntype Props = {\n  properties: Array<Object>,\n  fetchSellerPropertyForms: Function,\n  error: string,\n  isLoading: boolean,\n};\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    minHeight: '100px',\n  },\n  loading: {\n    border: '1px solid #E0E0E0',\n    backgroundColor: theme.palette.common.white,\n  },\n}));\n\nexport const QuestionList = (props: Props): Element<'div' | 'p'> => {\n  const { properties, isLoading, fetchSellerPropertyForms, error } = props;\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetchSellerPropertyForms();\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      toastr.error('Something went wrong');\n    }\n  }, [error]);\n\n  if (process.env.REACT_APP_SELL_SIDE_ENABLED !== '1') {\n    return <p className=\"incorrect_parameter\">Coming Soon</p>;\n  }\n\n  if (_isEmpty(properties) && !isLoading) {\n    return <p className=\"incorrect_parameter\">Property Not Found</p>;\n  }\n\n  const orderedProperties = properties.sort((itemA, itemB) => {\n    return moment(itemA.CreatedAt) - moment(itemB.CreatedAt);\n  });\n\n  return (\n    <BlockUi\n      tag=\"div\"\n      blocking={isLoading}\n      loader={<Loader active type=\"ball-pulse\" color=\"rgba(231,28,99,1)\" />}\n      className={clsx(classes.container, { [classes.loading]: isLoading })}\n    >\n      {orderedProperties.map(property => {\n        const { Forms: forms, PropertyId: propertyId } = property;\n        return (\n          <QuestionListWidget\n            property={property}\n            forms={forms}\n            key={propertyId}\n          />\n        );\n      })}\n    </BlockUi>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  properties: state =>\n    _get(state, ['sellerPropertyForms', 'propertyForms', 'Properties'], []),\n  isLoading: state => _get(state, ['sellerPropertyForms', 'isLoading']),\n  error: state => _get(state, ['sellerPropertyForms', 'error']),\n});\n\nconst mapDispatchToProps = { fetchSellerPropertyForms };\n\nexport default (connect(\n  structuredSelector,\n  mapDispatchToProps,\n)(QuestionList): AbstractComponent<Props>);\n"],"sourceRoot":""}