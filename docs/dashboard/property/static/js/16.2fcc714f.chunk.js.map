{"version":3,"sources":["components/Calendar/DayScaleCell.js","components/Calendar/helpers.js","components/Calendar/TimeTableCell.js","components/Calendar/Appointment.js","components/Calendar/TooltipContent.js","components/Calendar/redux/Actions.js","components/Calendar/IntegratedDates.js","services/YouCanBook/Request.js","services/YouCanBook/ProfilesService.js","services/YouCanBook/BookingsService.js","components/Calendar/hooks/useConfig.js","components/Calendar/hooks/useAppointments.js","components/Calendar/hooks/useError.js","components/BookingForm/constants.js","components/BookingForm/helpers.js","components/BookingForm/AppointmentData/index.jsx","components/BookingForm/AppointmentTypes/index.jsx","components/Elements/TextField/index.jsx","components/BookingForm/Fields/SimpleField.jsx","components/Elements/Select/index.jsx","components/Elements/Checkbox/index.jsx","components/BookingForm/Fields/CheckboxField.jsx","components/BookingForm/Fields/index.jsx","components/BookingForm/Fields/DropdownField.jsx","components/BookingForm/index.jsx","components/Calendar/AppointmentForm/BasicLayout.jsx","components/Calendar/AppointmentForm/Layout.jsx","components/Calendar/AppointmentForm/AppointmentForm.jsx","components/Calendar/Calendar.js"],"names":["useStyles","makeStyles","theme","cell","paddingTop","spacing","today","backgroundColor","alpha","palette","primary","main","DayScaleCell","props","classes","className","clsx","ERROR_MESSAGES","MOMENT_FORMAT","getTimeConfig","config","dateString","key","fieldConfig","_get","moment","isCellActive","dateName","Date","toLocaleString","weekday","toLowerCase","mapDateToName","currentMoment","isSame","isMomentInToday","diff","isMomentInPast","isActivatedMoment","currentDate","format","startDate","endDate","isSameOrAfter","isSameOrBefore","isAvailableMoment","breakStart","breakEnd","isMomentInBreaking","formatTime","displayDate","displayTime","disableCell","background","action","disabledBackground","backgroundSize","pointerEvents","structuredSelector","createStructuredSelector","timeConfig","state","connect","undefined","withErrorBoundary","TimeTableCell","appointment","Appointment","children","restProps","wrapper","padding","section","marginBottom","TooltipContent","appointmentData","Paper","Typography","variant","color","Event","AccessTime","setConfig","data","type","CALENDAR_ACTIONS","payload","setError","setIsLoading","mapDispatchToProps","setStartOfWeek","setEndOfWeek","name","computed","startViewDate","endViewDate","Request","this","baseURL","process","cancelToken","method","url","params","headers","needResHeaders","self","CancelToken","axios","Promise","resolve","reject","options","timeout","Authorization","PLACEHOLDER_AUTHORIZATION","c","request","then","res","JSON","parse","error","status","message","errors","id","fields","PATHS","PROFILES","BookingsService","a","profileId","BOOKINGS","from","to","needMore","nextPage","bookings","jumpToDate","resLink","tmpBookings","lastItemStartDate","length","isBefore","remapBookings","getEmail","booking","emailField","filter","answer","code","map","title","useConfig","dispatch","useDispatch","useEffect","setProfileId","ProfilesService","getProfileById","cancel","useAppointments","startOfWeek","useSelector","endOfWeek","needRefetch","useState","appointments","setAppointments","getBookings","useError","toastr","TYPES","defaultValues","prepareQuestionsAnswers","questions","values","string","prepareBookingData","FNAME","appointmentType","startsAt","tentative","timeZone","cancelled","units","services","answers","typography","h4","gray","textAlign","AppointmentData","Box","sx","mt","group","width","margin","button","textTransform","buttonLabel","display","justifyContent","alignItems","duration","selected","AppointmentTypes","appointmentTypes","useFormikContext","setFieldValue","value","ToggleButtonGroup","orientation","exclusive","onChange","event","newTypeId","newType","find","root","ToggleButton","label","fontSize","ml","numberOfSlots","slotLengthMinutes","getAppointmentTypeDuration","textField","marginTop","dark","input","h5","TextField","styleClasses","placeholder","required","FormControl","FormLabel","InputProps","after","subtitle","select","item","Select","MenuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","MenuItem","option","checkbox","Checkbox","checked","FormControlLabel","control","components","question","before","handleChange","flexDirection","my","Boolean","FormHelperText","Fields","Component","setNeedRefetch","initialValues","reduce","acc","generateInitialValues","onSubmit","createBooking","Divider","Button","disableElevation","fullWidth","BasicLayout","layout","common","white","content","Layout","basicLayoutComponent","RecurrenceLayout","commandLayoutComponent","recurrenceLayoutComponent","isRecurrence","AppointmentForm","layoutComponent","container","minHeight","fontFamily","avenirLT","loading","border","isLoading","_isEmpty","tag","blocking","loader","active","elevation","timeTableCellComponent","dayScaleCellComponent","cellDuration","appointmentComponent","showCloseButton","contentComponent"],"mappings":"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","file":"static/js/16.2fcc714f.chunk.js","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { WeekView } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles, alpha } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n  cell: {\n    paddingTop: theme.spacing(1),\n  },\n  today: {\n    backgroundColor: alpha(theme.palette.primary.main, 0.16),\n  },\n}));\n\nconst DayScaleCell = (props: Object): React.Element<'div'> => {\n  const classes = useStyles();\n  const { today } = props;\n\n  return (\n    <WeekView.DayScaleCell\n      {...props}\n      className={clsx(classes.cell, {\n        [classes.today]: today,\n      })}\n    />\n  );\n};\n\nexport default DayScaleCell;\n","// @flow\nimport _get from 'lodash/get';\nimport moment from 'moment';\n\nexport const DEFAULT_DURATION = 60;\nexport const CALENDAR_CONFIG_FIELDS =\n  'times,times.*,questions,questions.*,services, services.*,services.items.*,actions,actions.*,title';\nexport const ERROR_MESSAGES = {\n  getTimeConfig: 'Something went wrong',\n};\n\nconst DATE_FORMAT = 'MM-DD-YYYY';\nconst MOMENT_FORMAT = `${DATE_FORMAT} HH:mm:ss`;\nconst DISPLAY_DATE_FORMAT = 'dddd, MMMM DD, YYYY';\nconst DISPLAY_TIME_FORMAT = 'hh:mm A';\n\nconst mapDateToName = dateString =>\n  new Date(dateString)\n    .toLocaleString('en-us', { weekday: 'short' })\n    .toLowerCase();\n\nconst getTimeConfig = ({ config, dateString, key }) => {\n  const fieldConfig = _get(config, key) || '';\n  return moment(`${dateString} ${fieldConfig}`, MOMENT_FORMAT);\n};\n\nconst isActivatedMoment = ({ dateName, config }) =>\n  _get(config, `${dateName}Active`) || false;\n\nconst isAvailableMoment = ({\n  config,\n  currentMoment,\n  currentDate: dateString,\n  dateName,\n}) => {\n  const startDate = getTimeConfig({\n    config,\n    dateString,\n    key: `${dateName}Start`,\n  });\n  const endDate = getTimeConfig({ config, dateString, key: `${dateName}End` });\n\n  return (\n    currentMoment.isSameOrAfter(startDate) &&\n    currentMoment.isSameOrBefore(endDate)\n  );\n};\n\nconst isMomentInBreaking = ({\n  config,\n  currentMoment,\n  currentDate: dateString,\n}) => {\n  const breakStart = getTimeConfig({ config, dateString, key: 'breakStart' });\n  const breakEnd = getTimeConfig({ config, dateString, key: 'breakEnd' });\n\n  return (\n    currentMoment.isSameOrAfter(breakStart) &&\n    currentMoment.isSameOrBefore(breakEnd)\n  );\n};\n\nconst isMomentInPast = currentMoment =>\n  moment().diff(currentMoment, 'hours') > 0;\n\nconst isMomentInToday = currentMoment => moment().isSame(currentMoment, 'day');\n\ntype isCellActiveParams = {\n  dateString: string,\n  config: Object,\n};\nexport const isCellActive = ({\n  dateString,\n  config,\n}: isCellActiveParams): boolean => {\n  const dateName = mapDateToName(dateString);\n  const currentMoment = moment(dateString);\n\n  if (isMomentInToday(currentMoment)) return false;\n  if (isMomentInPast(currentMoment)) return false;\n  if (!isActivatedMoment({ dateName, config })) return false;\n\n  const currentDate = currentMoment.format(DATE_FORMAT);\n\n  const isAvailable = isAvailableMoment({\n    config,\n    currentMoment,\n    currentDate,\n    dateName,\n  });\n  if (!isAvailable) return false;\n\n  const isBreakingMoment = isMomentInBreaking({\n    config,\n    currentMoment,\n    currentDate,\n  });\n  return !isBreakingMoment;\n};\n\nexport const formatTime = ({ startDate, endDate }: Object): Object => {\n  const displayDate = moment(startDate).format(DISPLAY_DATE_FORMAT);\n  const displayTime = `${moment(startDate).format(\n    DISPLAY_TIME_FORMAT,\n  )} - ${moment(endDate).format(DISPLAY_TIME_FORMAT)}`;\n  return { displayDate, displayTime };\n};\n\nexport const getAppointmentTypeDuration = ({\n  numberOfSlots,\n  slotLengthMinutes,\n}: Object): string => {\n  return `${numberOfSlots * slotLengthMinutes} minutes`;\n};\n","// @flow\nimport * as React from 'react';\nimport type { AbstractComponent } from 'react';\nimport { WeekView } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash/get';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { isCellActive } from './helpers';\n\nconst useStyles = makeStyles(theme => ({\n  disableCell: {\n    background: `linear-gradient(-45deg,${theme.palette.action.disabledBackground} 10%,transparent 10%,transparent 50%,${theme.palette.action.disabledBackground} 50%,${theme.palette.action.disabledBackground} 60%,transparent 60%,transparent)`,\n    backgroundSize: '8px 8px',\n    pointerEvents: 'none',\n  },\n}));\n\nconst TimeTableCell = (props: Object): React.Element<'div'> => {\n  const classes = useStyles();\n  const { startDate: dateString, timeConfig } = props;\n\n  return (\n    <WeekView.TimeTableCell\n      {...props}\n      className={clsx({\n        [classes.disableCell]: !isCellActive({\n          dateString,\n          config: timeConfig,\n        }),\n      })}\n    />\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  timeConfig: state => _get(state, ['calendar', 'config', 'times']),\n});\n\ntype PropsWithoutRedux = {};\nexport default (connect(\n  structuredSelector,\n  undefined,\n)(withErrorBoundary(TimeTableCell)): AbstractComponent<PropsWithoutRedux>);\n","// @flow\nimport * as React from 'react';\nimport { Appointments } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  appointment: {\n    backgroundColor: theme.palette.primary.main,\n\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst Appointment = ({\n  children,\n  ...restProps\n}: Object): React.Element<'div'> => {\n  const classes = useStyles();\n  return (\n    <Appointments.Appointment {...restProps} className={classes.appointment}>\n      {children}\n    </Appointments.Appointment>\n  );\n};\n\nexport default Appointment;\n","// @flow\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport _get from 'lodash/get';\nimport Typography from '@material-ui/core/Typography';\nimport { formatTime } from './helpers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  AccessTime as AccessTimeIcon,\n  Event as EventIcon,\n} from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    padding: theme.spacing(2),\n    paddingTop: 0,\n  },\n  section: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst TooltipContent = ({ appointmentData }: Object): React.Element<'div'> => {\n  const classes = useStyles();\n  const { displayDate, displayTime } = formatTime(appointmentData);\n\n  return (\n    <Paper className={classes.wrapper}>\n      <Typography variant=\"h3\" color=\"primary\" className={classes.section}>\n        {_get(appointmentData, 'title', '')}\n      </Typography>\n      <div className={classes.section}>\n        <Typography variant=\"h5\">\n          <EventIcon /> {displayDate}\n        </Typography>\n      </div>\n      <div>\n        <Typography variant=\"h5\">\n          <AccessTimeIcon /> {displayTime}\n        </Typography>\n      </div>\n    </Paper>\n  );\n};\nexport default TooltipContent;\n","import { CALENDAR_ACTIONS } from './Constants';\n\nexport const setConfig = data => {\n  return {\n    type: CALENDAR_ACTIONS.setConfig,\n    payload: data,\n  };\n};\n\nexport const setStartOfWeek = data => {\n  return {\n    type: CALENDAR_ACTIONS.setStartOfWeek,\n    payload: data,\n  };\n};\n\nexport const setEndOfWeek = data => {\n  return {\n    type: CALENDAR_ACTIONS.setEndOfWeek,\n    payload: data,\n  };\n};\n\nexport const setError = data => {\n  return {\n    type: CALENDAR_ACTIONS.setError,\n    payload: data,\n  };\n};\n\nexport const setIsLoading = data => {\n  return {\n    type: CALENDAR_ACTIONS.setIsLoading,\n    payload: data,\n  };\n};\n\nexport const setProfileId = id => {\n  return {\n    type: CALENDAR_ACTIONS.setProfileId,\n    payload: id,\n  };\n};\n\nexport const setNeedRefetch = data => {\n  return {\n    type: CALENDAR_ACTIONS.setNeedRefetch,\n    payload: data,\n  };\n};\n","// @flow\nimport React from 'react';\nimport type { AbstractComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { setEndOfWeek, setStartOfWeek } from './redux/Actions';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\n\nconst IntegratedDates = ({ setStartOfWeek, setEndOfWeek }) => {\n  const startViewDateComputed = ({ startViewDate }) => {\n    setStartOfWeek(startViewDate);\n    return startViewDate;\n  };\n\n  const endViewDateComputed = ({ endViewDate }) => {\n    setEndOfWeek(endViewDate);\n    return endViewDate;\n  };\n\n  return (\n    <Plugin name=\"IntegratedDates\">\n      <Getter name=\"startViewDate\" computed={startViewDateComputed} />\n      <Getter name=\"endViewDate\" computed={endViewDateComputed} />\n    </Plugin>\n  );\n};\n\ntype PropsWithoutRedux = {};\n\nconst mapDispatchToProps = {\n  setStartOfWeek,\n  setEndOfWeek,\n};\n\nexport default (connect(\n  undefined,\n  mapDispatchToProps,\n)(withErrorBoundary(IntegratedDates)): AbstractComponent<PropsWithoutRedux>);\n","import axios from 'axios';\nimport _get from 'lodash/get';\nimport { PLACEHOLDER_AUTHORIZATION } from './constants';\n\nexport default class Request {\n  constructor() {\n    this.baseURL = `${process.env.REACT_APP_YOU_BOOK_ME_ENDPOINT}/${process.env.REACT_APP_YOU_BOOK_ME_ACCOUNT_ID}/`;\n    this.cancelToken = null;\n  }\n\n  cancel() {\n    if (this.cancelToken !== null) this.cancelToken();\n  }\n\n  axios({\n    method,\n    baseURL = this.baseURL,\n    url,\n    data,\n    params,\n    headers = {},\n    needResHeaders = false,\n  }) {\n    const self = this;\n    const { CancelToken } = axios;\n\n    return new Promise((resolve, reject) => {\n      const options = {\n        method,\n        url,\n        baseURL,\n        timeout: 30000,\n        params,\n        data,\n        headers: { ...headers, Authorization: PLACEHOLDER_AUTHORIZATION },\n        cancelToken: new CancelToken(function executor(c) {\n          self.cancelToken = c;\n        }),\n      };\n\n      axios.request(options).then(\n        res => {\n          const data =\n            typeof res.data === 'object' ? res.data : JSON.parse(res.data);\n\n          resolve(needResHeaders ? { data, headers: res.headers } : data);\n        },\n        error => {\n          const status = _get(error, ['response', 'status']);\n          const message = _get(error, ['response', 'data', 'message']);\n          const errors = _get(error, ['response', 'data', 'errors']);\n          const errorRes = { status, message, errors };\n          reject(errorRes);\n        },\n      );\n    });\n  }\n}\n","import Request from './Request';\nimport { PATHS } from './constants';\n\nclass ProfilesService extends Request {\n  getProfileById({ id, fields }) {\n    if (!id) return {};\n\n    return this.axios({\n      method: 'GET',\n      url: `${PATHS.PROFILES}/${id}`,\n      params: {\n        fields,\n      },\n    });\n  }\n}\n\nexport default new ProfilesService();\n","import Request from './Request';\nimport { PATHS } from './constants';\nimport _get from 'lodash/get';\nimport moment from 'moment';\nimport parse from 'parse-link-header';\n\nclass BookingsService extends Request {\n  async createBooking({ profileId, data }) {\n    return this.axios({\n      method: 'POST',\n      url: `${PATHS.PROFILES}/${profileId}/${PATHS.BOOKINGS}`,\n      data: {\n        ...data,\n      },\n    });\n  }\n\n  async getBookings({ profileId, from, to }) {\n    if (!profileId) return {};\n\n    let needMore = true;\n    let nextPage = '';\n    let bookings = [];\n\n    while (needMore) {\n      const res = !nextPage\n        ? await this.axios({\n            method: 'GET',\n            url: `${PATHS.PROFILES}/${profileId}/${PATHS.BOOKINGS}`,\n            params: {\n              fields: 'id,startsAt,endsAt,answers,answers.*',\n              jumpToDate: moment(from).format('YYYY-MM-DD'),\n            },\n            needResHeaders: true,\n          })\n        : await this.axios({\n            method: 'GET',\n            url: nextPage,\n            needResHeaders: true,\n          });\n\n      const resLink = _get(res, ['headers', 'link'], '');\n      nextPage = _get(parse(resLink), ['next', 'url'], '');\n\n      const tmpBookings = _get(res, ['data']);\n      bookings = [...bookings, ...tmpBookings];\n      const lastItemStartDate = _get(\n        tmpBookings,\n        [tmpBookings.length - 1, 'startsAt'],\n        '',\n      );\n\n      needMore = nextPage && moment(lastItemStartDate).isBefore(to);\n    }\n\n    return remapBookings(bookings);\n  }\n}\n\nconst getEmail = booking => {\n  const emailField = _get(booking, ['answers'], []).filter(\n    answer => answer.code === 'EMAIL',\n  )[0];\n\n  return _get(emailField, 'string', '');\n};\n\nconst remapBookings = bookings =>\n  bookings.map(booking => {\n    return {\n      title: getEmail(booking),\n      id: _get(booking, 'id'),\n      startDate: _get(booking, 'startsAt'),\n      endDate: _get(booking, 'endsAt'),\n    };\n  });\n\nexport default new BookingsService();\n","// @flow\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ProfilesService } from '../../../services/YouCanBook';\nimport { CALENDAR_CONFIG_FIELDS } from '../helpers';\nimport {\n  setConfig,\n  setError,\n  setIsLoading,\n  setProfileId,\n} from '../redux/Actions';\nimport type { CustomHookProps } from './types';\n\nconst useConfig = ({ profileId }: CustomHookProps) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setProfileId(profileId));\n\n    (async () => {\n      dispatch(setIsLoading(true));\n      try {\n        const data = await ProfilesService.getProfileById({\n          id: profileId,\n          fields: CALENDAR_CONFIG_FIELDS,\n        });\n        dispatch(setConfig(data || {}));\n      } catch (error) {\n        dispatch(setError(error));\n      }\n      dispatch(setIsLoading(false));\n    })();\n\n    return () => {\n      ProfilesService.cancel();\n    };\n    // eslint-disable-next-line\n  }, []);\n};\n\nexport default useConfig;\n","// @flow\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BookingsService } from '../../../services/YouCanBook';\nimport _get from 'lodash/get';\nimport type { CustomHookProps } from './types';\nimport { setError, setIsLoading } from '../redux/Actions';\n\nconst useAppointments = ({\n  profileId,\n}: CustomHookProps): [Array<Object>, Function] => {\n  const dispatch = useDispatch();\n  const startOfWeek = useSelector(state =>\n    _get(state, ['calendar', 'startOfWeek']),\n  );\n  const endOfWeek = useSelector(state =>\n    _get(state, ['calendar', 'endOfWeek']),\n  );\n  const needRefetch = useSelector(state =>\n    _get(state, ['calendar', 'needRefetch']),\n  );\n  const [appointments, setAppointments] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      if (!endOfWeek) return;\n      try {\n        dispatch(setIsLoading(true));\n        const appointmentData = await BookingsService.getBookings({\n          profileId,\n          from: startOfWeek,\n          to: endOfWeek,\n        });\n        setAppointments(appointmentData);\n      } catch (error) {\n        dispatch(setError(error));\n      }\n      dispatch(setIsLoading(false));\n    })();\n\n    return () => {\n      BookingsService.cancel();\n    };\n    // eslint-disable-next-line\n  }, [endOfWeek, needRefetch]);\n\n  return [appointments, setAppointments];\n};\n\nexport default useAppointments;\n","// @flow\nimport { useEffect } from 'react';\nimport { ERROR_MESSAGES } from '../helpers';\nimport { toastr } from 'react-redux-toastr';\nimport { useSelector } from 'react-redux';\nimport _get from 'lodash/get';\n\nconst useError = () => {\n  const error = useSelector(state => _get(state, ['calendar', 'error']));\n\n  useEffect(() => {\n    if (!error) return;\n\n    const { message } = error || {};\n\n    if (message) {\n      toastr.error(ERROR_MESSAGES.getTimeConfig, message);\n    }\n  }, [error]);\n};\n\nexport default useError;\n","// @flow\nexport const TYPES = {\n  SIMPLE: 'SIMPLE',\n  CHECKBOX: 'CHECKBOX',\n  MULTI_DROPDOWN: 'MULTI_DROPDOWN',\n};\n","// @flow\nimport type { TQuestion } from '../../types';\nimport { TYPES } from './constants';\nimport moment from 'moment';\n\nconst BOOKING_FORMAT = 'YYYY-MM-DDTHH:mm:ss';\n\nconst defaultValues = {\n  [TYPES.SIMPLE]: '',\n  [TYPES.CHECKBOX]: false,\n  [TYPES.MULTI_DROPDOWN]: '',\n};\n\nexport const generateInitialValues = (questions: TQuestion[]): Object => {\n  return questions.reduce(\n    (acc, { code, type }) => ({ ...acc, [code]: defaultValues[type] }),\n    {\n      appointmentType: undefined,\n    },\n  );\n};\n\nconst prepareQuestionsAnswers = (questions: TQuestion[], values): Object => {\n  return questions.map(({ code }) => ({ code, string: values[code] }));\n};\n\nexport const prepareBookingData = ({\n  appointmentData,\n  values,\n  config,\n}: Object): Object => {\n  const { title, questions } = config;\n  const { FNAME: name, appointmentType } = values;\n  const { startDate } = appointmentData;\n\n  return {\n    title: `${name} and ${title}`,\n    startsAt: moment(startDate).format(BOOKING_FORMAT),\n    tentative: 'NOT_USED',\n    timeZone: 'Asia/Ho_Chi_Minh',\n    cancelled: false,\n    units: 1,\n    services: [{ id: appointmentType.id, name: appointmentType.name }],\n    answers: prepareQuestionsAnswers(questions, values),\n  };\n};\n","// @flow\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport type { Element } from 'react';\nimport { formatTime } from '../../Calendar/helpers';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    ...theme.typography.h4,\n    padding: theme.spacing(2, 0),\n    backgroundColor: theme.palette.background.gray,\n    textAlign: 'center',\n  },\n}));\n\nexport const AppointmentData = ({\n  appointmentData,\n}: Object): Element<'div'> => {\n  const { startDate, endDate } = appointmentData;\n  const classes = useStyles();\n  const { displayDate, displayTime } = formatTime({ startDate, endDate });\n  return (\n    <div className={classes.wrapper}>\n      <Typography variant=\"h4\">{displayDate}</Typography>\n      <Box sx={{ mt: 1 }}>\n        <Typography variant=\"h3\">{displayTime}</Typography>\n      </Box>\n    </div>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport QueryBuilderOutlinedIcon from '@material-ui/icons/QueryBuilderOutlined';\nimport { getAppointmentTypeDuration } from '../../Calendar/helpers';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport { useFormikContext } from 'formik';\n\nconst useStyles = makeStyles(theme => ({\n  group: {\n    width: '100%',\n    margin: theme.spacing(1, 0, 2, 0),\n  },\n  button: {\n    padding: theme.spacing(1.5, 2),\n    textTransform: 'none',\n  },\n  buttonLabel: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  duration: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  selected: {\n    '&&, &&:hover': {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n}));\n\ntype Props = {\n  appointmentTypes: Object[],\n};\n\nexport const AppointmentTypes = ({\n  appointmentTypes,\n}: Props): Element<typeof React.Fragment> => {\n  const classes = useStyles();\n  const { values, setFieldValue } = useFormikContext();\n  const value = values.appointmentType?.id || '';\n\n  const handleChange = (event, newTypeId) => {\n    const newType = appointmentTypes.find(type => type.id === newTypeId);\n    setFieldValue('appointmentType', newType);\n  };\n\n  return (\n    <>\n      <Typography variant=\"h4\">Choose an appointment type</Typography>\n      <ToggleButtonGroup\n        orientation=\"vertical\"\n        value={value}\n        exclusive\n        onChange={handleChange}\n        classes={{ root: classes.group }}\n      >\n        {appointmentTypes.map(type => (\n          <ToggleButton\n            value={type.id}\n            classes={{\n              root: classes.button,\n              label: classes.buttonLabel,\n              selected: classes.selected,\n            }}\n            key={type.id}\n          >\n            <Typography variant=\"h5\" color=\"textPrimary\">\n              {type.name}\n            </Typography>\n            <Typography\n              variant=\"subtitle1\"\n              classes={{ root: classes.duration }}\n            >\n              <QueryBuilderOutlinedIcon fontSize=\"small\" />\n              <Box sx={{ ml: 0.5, mt: 0.25 }}>\n                {getAppointmentTypeDuration(type)}\n              </Box>\n            </Typography>\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport clsx from 'clsx';\nimport {\n  FormControl,\n  FormLabel,\n  makeStyles,\n  TextField as MuiTextField,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    marginTop: theme.spacing(0.5),\n  },\n  label: {\n    color: theme.palette.primary.dark,\n    ...theme.typography.h4,\n  },\n  input: {\n    ...theme.typography.h5,\n    padding: theme.spacing(1, 1.5),\n  },\n}));\n\ntype Props = {\n  name?: string,\n  variant?: string,\n  placeholder?: string,\n  label: string,\n  value: string,\n  onChange: Function,\n  required?: boolean,\n  classes?: Object,\n};\n\nexport const TextField = (props: Props): Element<typeof MuiTextField> => {\n  const styleClasses = useStyles();\n  const {\n    name,\n    variant,\n    placeholder = '',\n    label,\n    value,\n    required,\n    onChange,\n    classes = {},\n  } = props;\n\n  return (\n    <FormControl required={required}>\n      <FormLabel color=\"secondary\" className={styleClasses.label}>\n        {label}\n      </FormLabel>\n      <MuiTextField\n        name={name}\n        variant={variant}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        classes={{ root: clsx(styleClasses.textField, classes.textField) }}\n        InputProps={{\n          classes: {\n            input: clsx(styleClasses.input, classes.input),\n          },\n        }}\n      />\n    </FormControl>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { Box, FormHelperText, makeStyles } from '@material-ui/core';\nimport type { TQuestion } from '../../../types';\nimport { TextField } from '../../Elements/TextField';\nimport { useFormikContext } from 'formik';\n\nconst useStyles = makeStyles(theme => ({\n  after: {\n    ...theme.typography.subtitle,\n  },\n}));\n\ntype Props = {\n  question: TQuestion,\n};\n\nexport const SimpleField = ({ question }: Props): Element<typeof Box> => {\n  const classes = useStyles();\n  const { code, before, after, required } = question;\n  const { values, handleChange } = useFormikContext();\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', my: 1 }}>\n      <TextField\n        name={code}\n        variant=\"outlined\"\n        placeholder=\"\"\n        label={before}\n        value={values[code]}\n        onChange={handleChange}\n        required={required}\n      />\n      {Boolean(after) && (\n        <FormHelperText className={classes.after}>{after}</FormHelperText>\n      )}\n    </Box>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport {\n  FormControl,\n  MenuItem,\n  Select as MuiSelect,\n  FormLabel,\n  makeStyles,\n} from '@material-ui/core';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    '& .MuiOutlinedInput-notchedOutline>legend>span': {\n      display: 'none',\n    },\n  },\n  label: {\n    '&&': {\n      color: theme.palette.primary.dark,\n      ...theme.typography.h4,\n    },\n  },\n  select: {\n    ...theme.typography.h5,\n    padding: theme.spacing(1, 1.5),\n  },\n  item: {\n    ...theme.typography.h5,\n  },\n}));\n\ntype Props = {\n  name?: string,\n  value: string,\n  onChange: Function,\n  label: string,\n  variant?: string,\n  required?: boolean,\n  options: string[],\n  classes?: Object,\n};\n\nexport const Select = (props: Props): Element<typeof FormControl> => {\n  const styleClasses = useStyles();\n  const {\n    name,\n    value,\n    onChange,\n    label,\n    variant,\n    required,\n    options,\n    classes = {},\n  } = props;\n\n  return (\n    <FormControl required={required} classes={{ root: styleClasses.wrapper }}>\n      <FormLabel className={styleClasses.label}>{label}</FormLabel>\n      <MuiSelect\n        name={name}\n        classes={{ root: clsx(styleClasses.select, classes.select) }}\n        value={value}\n        onChange={onChange}\n        label=\"\"\n        variant={variant}\n        MenuProps={{\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left',\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'left',\n          },\n          getContentAnchorEl: null,\n        }}\n      >\n        <MenuItem\n          classes={{ root: clsx(styleClasses.item, classes.item) }}\n          value=\"\"\n        >\n          <em>None</em>\n        </MenuItem>\n        {options.map((option: string) => (\n          <MenuItem\n            key={option}\n            value={option}\n            classes={{ root: clsx(styleClasses.item, classes.item) }}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </MuiSelect>\n    </FormControl>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport {\n  Checkbox as MuiCheckbox,\n  FormControlLabel,\n  FormControl,\n  makeStyles,\n} from '@material-ui/core';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n  label: {\n    ...theme.typography.h5,\n  },\n  checkbox: {},\n}));\n\ntype Props = {\n  name?: string,\n  required?: boolean,\n  checked: boolean,\n  onChange: Function,\n  label: string,\n  color?: string,\n  classes?: Object,\n};\n\nexport const Checkbox = (props: Props): Element<typeof FormControl> => {\n  const styleClasses = useStyles();\n  const {\n    name,\n    required,\n    checked,\n    onChange,\n    label,\n    color = 'primary',\n    classes = {},\n  } = props;\n  return (\n    <FormControl required={required}>\n      <FormControlLabel\n        classes={{ label: clsx(styleClasses.label, classes.label) }}\n        control={\n          <MuiCheckbox\n            classes={{ root: clsx(styleClasses.checkbox, classes.checkbox) }}\n            checked={checked}\n            onChange={onChange}\n            name={name}\n            color={color}\n          />\n        }\n        label={label}\n      />\n    </FormControl>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { Box, FormHelperText, makeStyles } from '@material-ui/core';\nimport type { TQuestion } from '../../../types';\nimport { Checkbox } from '../../Elements';\nimport { useFormikContext } from 'formik';\n\nconst useStyles = makeStyles(theme => ({\n  after: {\n    ...theme.typography.subtitle,\n  },\n}));\n\ntype Props = {\n  question: TQuestion,\n};\n\nexport const CheckboxField = ({ question }: Props): Element<typeof Box> => {\n  const classes = useStyles();\n  const { after, before, required, code } = question;\n  const { values, handleChange } = useFormikContext();\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', my: 1 }}>\n      <Checkbox\n        checked={values[code]}\n        onChange={handleChange}\n        name={code}\n        color=\"primary\"\n        label={before}\n        required={required}\n      />\n      {Boolean(after) && (\n        <FormHelperText className={classes.after}>{after}</FormHelperText>\n      )}\n    </Box>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { SimpleField } from './SimpleField';\nimport { CheckboxField } from './CheckboxField';\nimport { DropdownField } from './DropdownField';\nimport type { TQuestion } from '../../../types';\nimport { TYPES } from '../constants';\n\nconst components = {\n  [TYPES.SIMPLE]: SimpleField,\n  [TYPES.CHECKBOX]: CheckboxField,\n  [TYPES.MULTI_DROPDOWN]: DropdownField,\n};\n\ntype Props = {\n  questions: TQuestion[],\n};\n\nexport const Fields = ({\n  questions,\n}: Props): Element<typeof React.Fragment> => {\n  return (\n    <>\n      {questions.map(question => {\n        const Component = components[question.type];\n        return <Component key={question.code} question={question} />;\n      })}\n    </>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { Box } from '@material-ui/core';\nimport type { TQuestion } from '../../../types';\nimport { Select } from '../../Elements';\nimport { useFormikContext } from 'formik';\n\ntype Props = {\n  question: TQuestion,\n};\n\nexport const DropdownField = ({ question }: Props): Element<typeof Box> => {\n  const { code, after, before, required, options = [] } = question;\n  const { values, handleChange } = useFormikContext();\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', my: 1 }}>\n      <Select\n        name={code}\n        value={values[code]}\n        onChange={handleChange}\n        label={before}\n        variant=\"outlined\"\n        required={required}\n        options={options}\n      />\n      {Boolean(after) && <Box sx={{ mt: 1 }}>{after}</Box>}\n    </Box>\n  );\n};\n","// @flow\nimport type { Element, AbstractComponent } from 'react';\nimport React from 'react';\nimport { Box, Button, Divider } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport { generateInitialValues, prepareBookingData } from './helpers';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash/get';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { AppointmentData } from './AppointmentData';\nimport { AppointmentTypes } from './AppointmentTypes';\nimport { BookingsService } from '../../services/YouCanBook';\nimport {\n  setIsLoading,\n  setError,\n  setNeedRefetch,\n} from '../Calendar/redux/Actions';\nimport { Fields } from './Fields';\n\ntype Props = {\n  profileId: string | typeof undefined,\n  config: Object,\n  appointmentData: Object,\n  setIsLoading: Function,\n  setError: Function,\n  setNeedRefetch: Function,\n};\n\nconst BookingForm = ({\n  profileId,\n  config,\n  appointmentData,\n  setIsLoading,\n  setError,\n  setNeedRefetch,\n}: Props): Element<typeof Box> => {\n  const questions = _get(config, 'questions', []);\n  const appointmentTypes = _get(config, 'services.items', []);\n  const initialValues = generateInitialValues(questions);\n\n  const onSubmit = async (values: Object) => {\n    try {\n      setIsLoading(true);\n      const data = prepareBookingData({ appointmentData, values, config });\n      await BookingsService.createBooking({ profileId, data });\n      setNeedRefetch(true);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error);\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\n        <Form>\n          <AppointmentTypes appointmentTypes={appointmentTypes} />\n          <AppointmentData appointmentData={appointmentData} />\n          <Divider />\n          <Box sx={{ mt: 4 }}>\n            <Fields questions={questions} />\n          </Box>\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            disableElevation\n            fullWidth\n            variant=\"contained\"\n          >\n            Confirm Booking\n          </Button>\n        </Form>\n      </Formik>\n    </Box>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  profileId: state => _get(state, 'calendar.profileId'),\n  config: state => _get(state, 'calendar.config'),\n});\n\nconst mapDispatchToProps = {\n  setIsLoading,\n  setError,\n  setNeedRefetch,\n};\n\ntype PropsWithoutRedux = {\n  appointmentData: Object,\n};\nexport default (connect(\n  structuredSelector,\n  mapDispatchToProps,\n)(withErrorBoundary(BookingForm)): AbstractComponent<PropsWithoutRedux>);\n","// @flow\nimport * as React from 'react';\nimport type { Element } from 'react';\nimport BookingForm from '../../BookingForm';\n\nexport const BasicLayout = (props: Object): Element<typeof BookingForm> => {\n  const { appointmentData } = props;\n\n  return <BookingForm appointmentData={appointmentData} />;\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    background: theme.palette.common.white,\n  },\n  content: {\n    padding: theme.spacing(4),\n  },\n}));\n\nexport const Layout = (props: Object): Element<'div'> => {\n  const {\n    basicLayoutComponent: BasicLayout,\n    commandLayoutComponent: CommandLayout,\n    recurrenceLayoutComponent: RecurrenceLayout,\n    isRecurrence,\n    children,\n    ...restProps\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.layout} {...restProps}>\n      {/* <CommandLayout /> */}\n      <div className={classes.content}>\n        <BasicLayout />\n        <RecurrenceLayout />\n      </div>\n      {children}\n    </div>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { AppointmentForm as SchedulerAppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\nimport { BasicLayout } from './BasicLayout';\nimport { Layout } from './Layout';\n\nexport const AppointmentForm = (): Element<typeof SchedulerAppointmentForm> => {\n  return (\n    <SchedulerAppointmentForm\n      layoutComponent={Layout}\n      basicLayoutComponent={BasicLayout}\n    />\n  );\n};\n","// @flow\nimport React, { Fragment } from 'react';\nimport type { Element, AbstractComponent } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler';\nimport {\n  Scheduler,\n  WeekView,\n  Appointments,\n  AppointmentTooltip,\n  Toolbar,\n  DateNavigator,\n  TodayButton,\n} from '@devexpress/dx-react-scheduler-material-ui';\nimport _get from 'lodash/get';\nimport DayScaleCell from './DayScaleCell';\nimport TimeTableCell from './TimeTableCell';\nimport Appointment from './Appointment';\nimport TooltipContent from './TooltipContent';\nimport { DEFAULT_DURATION } from './helpers';\nimport { connect } from 'react-redux';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { createStructuredSelector } from 'reselect';\nimport _isEmpty from 'lodash/isEmpty';\nimport IntegratedDates from './IntegratedDates';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Loader } from 'react-loaders';\nimport BlockUi from 'react-block-ui';\nimport useConfig from './hooks/useConfig';\nimport useAppointments from './hooks/useAppointments';\nimport useError from './hooks/useError';\nimport { AppointmentForm } from './AppointmentForm';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    minHeight: '100px',\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(3),\n    fontFamily: theme.typography.fontFamily.avenirLT,\n  },\n  loading: {\n    border: '1px solid #E0E0E0',\n    backgroundColor: theme.palette.common.white,\n  },\n}));\n\ntype Props = {\n  config: Object,\n  profileId: string,\n  isLoading: boolean,\n};\n\nconst Calendar = ({\n  config,\n  profileId,\n  isLoading,\n}: Props): Element<'div' | typeof Fragment> => {\n  const classes = useStyles();\n\n  useConfig({ profileId });\n\n  const [appointments] = useAppointments({ profileId });\n\n  useError();\n\n  if (_isEmpty(config) && !isLoading) return <></>;\n\n  return (\n    <BlockUi\n      tag=\"div\"\n      blocking={isLoading}\n      loader={<Loader active type=\"ball-pulse\" color=\"rgba(231,28,99,1)\" />}\n      className={clsx(classes.container, {\n        [classes.loading]: isLoading,\n      })}\n    >\n      <Paper elevation={3}>\n        <Scheduler data={appointments}>\n          <ViewState />\n          <WeekView\n            timeTableCellComponent={TimeTableCell}\n            dayScaleCellComponent={DayScaleCell}\n            cellDuration={\n              _get(config, 'times.slotLengthMinutes') || DEFAULT_DURATION\n            }\n          />\n          <EditingState />\n          <IntegratedDates />\n          <Toolbar />\n          <DateNavigator />\n          <TodayButton />\n          <Appointments appointmentComponent={Appointment} />\n          <AppointmentTooltip\n            showCloseButton\n            contentComponent={TooltipContent}\n          />\n          <AppointmentForm />\n        </Scheduler>\n      </Paper>\n    </BlockUi>\n  );\n};\n\ntype PropsWithoutRedux = {};\n\nconst structuredSelector = createStructuredSelector({\n  config: state => _get(state, ['calendar', 'config']),\n  isLoading: state => _get(state, ['calendar', 'isLoading']),\n});\n\nexport default (connect(\n  structuredSelector,\n  undefined,\n)(withErrorBoundary(Calendar)): AbstractComponent<PropsWithoutRedux>);\n"],"sourceRoot":""}