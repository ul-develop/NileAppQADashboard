{"version":3,"sources":["utils/RenderComponent.js","locales/Messages.js","components/Table/index.js","helpers/Offer.js","components/OfferList/ActionButtons.js","components/OfferList/index.js","containers/Seller/Offer/OfferList/index.js"],"names":["isValidProps","OFFER_STEP_MESSAGES","1","100","150","200","300","400","500","900","hideIfInvalidProps","columns","data","isArray","length","WrappedComponent","props","dataMemo","useMemo","useTable","getTableProps","getTableBodyProps","headers","rows","prepareRow","className","map","header","getHeaderProps","key","restHeaderProps","render","row","getRowProps","restRowProps","cells","cell","getCellProps","restCellProps","isWaitingSellerApproval","CurrentStep","OFFER_STEPS","awaitingSellerAction","ActionButtons","handleApproval","useState","anchorEl","setAnchorEl","offer","_get","handleClose","type","onClick","event","currentTarget","disabled","Menu","keepMounted","open","Boolean","onClose","MenuItem","OfferList","offers","isLoading","renderItem","value","Header","accessor","Cell","Loader","structuredSelector","createStructuredSelector","state","mapDispatchToProps","fetchOffers","saveOfferStep","connect","withErrorBoundary","useEffect","id","new_step"],"mappings":"0IAIEA,E,gBCJWC,EAAsB,CACjCC,EAAG,IACHC,IAAK,IACLC,IAAK,IACLC,IAAK,0BACLC,IAAK,kDACLC,IAAK,2BACLC,IAAK,mBACLC,IAAK,gB,qCC+DSC,G,SFnEdV,EESiB,SAAC,GAAD,IAAGW,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAZ,OACjBC,IAAQF,IAAYA,EAAQG,QAAUD,IAAQD,IAASA,EAAKE,QFT/C,SAAAC,GAOb,OANsB,SAAAC,GACpB,OAAKhB,EAAagB,GAEX,kBAACD,EAAqBC,GAFI,SESvB,SAACA,GAAoC,IACzCL,EAAkBK,EAAlBL,QAASC,EAASI,EAATJ,KAEXK,EAAWC,mBAAQ,kBAAMN,IAAM,CAACA,IAHU,EAW5CO,mBAAS,CACXR,UACAC,KAAMK,IAPNG,EAN8C,EAM9CA,cACAC,EAP8C,EAO9CA,kBACAC,EAR8C,EAQ9CA,QACAC,EAT8C,EAS9CA,KACAC,EAV8C,EAU9CA,WAMF,OACE,2CAAWJ,IAAX,CAA4BK,UAAU,eACpC,+BACE,4BACGH,EAAQI,KAAI,SAAAC,GAAW,IAAD,EACeA,EAAOC,iBAAnCC,EADa,EACbA,IAAQC,EADK,uBAGrB,OACE,sCAAID,IAAKA,GAASC,GACfH,EAAOI,OAAO,gBAMzB,0BAAWV,IACRE,EAAKG,KAAI,SAAAM,GACRR,EAAWQ,GADI,MAEkBA,EAAIC,cAA7BJ,EAFO,EAEPA,IAAQK,EAFD,uBAIf,OACE,sCAAIL,IAAKA,GAASK,GACfF,EAAIG,MAAMT,KAAI,SAAAU,GAAS,IAAD,EACaA,EAAKC,eAA/BR,EADa,EACbA,IAAQS,EADK,uBAGrB,OACE,sCAAIT,IAAKA,GAASS,GACfF,EAAKL,OAAO,sB,4DCxDpBQ,EAA0B,SAAC,GAKtC,OADa,EAHbC,cAIgBC,KAAYC,sBCKjBC,EAAgB,SAAC,GAGU,IAFtCP,EAEqC,EAFrCA,KACAQ,EACqC,EADrCA,eACqC,EACLC,mBAAS,MADJ,mBAC9BC,EAD8B,KACpBC,EADoB,KAE/BC,EAAQC,IAAKb,EAAM,gBAMnBc,EAAc,WAClBH,EAAY,OAQd,OACE,oCACE,4BACEI,KAAK,SACL1B,UAAS,uCACPc,EAAwBS,GAAS,GAAK,YAExCI,QApBc,SAAAC,GAClBN,EAAYM,EAAMC,gBAoBdC,UAAWhB,EAAwBS,IAEnC,uBAAGvB,UAAU,sBAEf,kBAAC+B,EAAA,EAAD,CACEV,SAAUA,EACVW,aAAW,EACXC,KAAMC,QAAQb,GACdc,QAASV,GAET,kBAACW,EAAA,EAAD,CAAUT,QAvBe,WAC7BR,EAAeK,IAAKD,EAAO,OAC3BE,MAqBI,cCmBOY,EAxDG,SAAC9C,GAAkC,IAC3C+C,EAAsC/C,EAAtC+C,OAAQC,EAA8BhD,EAA9BgD,UAAWpB,EAAmB5B,EAAnB4B,eAErBqB,EAAa,SAAC,GAAD,IAAWC,EAAX,EAAG9B,KAAQ8B,MAAX,OAAyB,8BAAOA,IAW7CvD,EAAU,CACd,CACEwD,OAAQ,KACRC,SAAU,KACVC,KAAMJ,GAER,CACEE,OAAQ,cACRC,SAAU,aACVC,KAAMJ,GAER,CACEE,OAAQ,UACRC,SAAU,UACVC,KAAMJ,GAER,CACEE,OAAQ,iBACRC,SAAU,gBACVC,KAAMJ,GAER,CACEE,OAAQ,iBACRC,SAAU,cACVC,KAjCiB,SAAC,GAAyB,IAAfH,EAAc,EAAtB9B,KAAQ8B,MAE9B,OAAO,8BAAOjE,EAAoBiE,MAiClC,CACEC,OAAQ,UACRE,KAhCkB,SAAC,GAAD,IAAGjC,EAAH,EAAGA,KAAH,OACpB,kBAAC,EAAD,CAAeA,KAAMA,EAAMQ,eAAgBA,OAmC7C,OACE,yBAAKnB,UAAU,eACb,yBAAKA,UAAU,mBACZuC,GAAa,kBAACM,EAAA,EAAD,MACd,kBAAC,EAAD,CAAO3D,QAASA,EAASC,KAAMmD,O,mCCvBjCQ,EAAqBC,YAAyB,CAClDT,OAAQ,SAAAU,GAAK,OAAIxB,IAAKwB,EAAO,gBAC7BT,UAAW,SAAAS,GAAK,OAAIxB,IAAKwB,EAAO,uBAG5BC,EAAqB,CACzBC,gBACAC,mBAGcC,4BACdN,EACAG,EAFcG,CAGdC,aAlCgB,SAAC9D,GAAwC,IACjD2D,EAAkD3D,EAAlD2D,YAAaZ,EAAqC/C,EAArC+C,OAAQC,EAA6BhD,EAA7BgD,UAAWY,EAAkB5D,EAAlB4D,cAExCG,qBAAU,WACRJ,MAEC,IAMH,OACE,kBAAC,EAAD,CACEZ,OAAQA,EACRC,UAAWA,EACXpB,eARmB,SAAAoC,GACrBJ,EAAcI,EAAI,CAAEC,SAAUxC,KAAYC","file":"static/js/11.08ddd740.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\n\nexport const hideIfInvalidProps = (\n  isValidProps: Function,\n): Function => WrappedComponent => {\n  const renderWrapped = props => {\n    if (!isValidProps(props)) return null;\n\n    return <WrappedComponent {...props} />;\n  };\n\n  return renderWrapped;\n};\n","export const OFFER_STEP_MESSAGES = {\n  1: '-',\n  100: '-',\n  150: '-',\n  200: 'Please review the offer',\n  300: 'PA being created, Nile Advisor will contact you',\n  400: 'PA being signed by Buyer',\n  500: 'Awaiting Wire 3%',\n  900: 'Offer Closed',\n};\n","// @flow\nimport React, { useMemo } from 'react';\nimport type { Element, AbstractComponent } from 'react';\nimport { useTable } from 'react-table';\nimport { hideIfInvalidProps } from 'utils/RenderComponent';\nimport isArray from 'lodash/isArray';\nimport './Style.css';\n\ntype Props = {\n  columns: Array<Object>,\n  data: Array<Object>,\n};\n\nconst checkProps = ({ columns, data }) =>\n  isArray(columns) && columns.length && isArray(data) && data.length;\n\nconst Table = (props: Props): Element<'table'> => {\n  const { columns, data } = props;\n\n  const dataMemo = useMemo(() => data, [data]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headers,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data: dataMemo,\n  });\n\n  return (\n    <table {...getTableProps()} className=\"nile-table\">\n      <thead>\n        <tr>\n          {headers.map(header => {\n            const { key, ...restHeaderProps } = header.getHeaderProps();\n\n            return (\n              <th key={key} {...restHeaderProps}>\n                {header.render('Header')}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map(row => {\n          prepareRow(row);\n          const { key, ...restRowProps } = row.getRowProps();\n\n          return (\n            <tr key={key} {...restRowProps}>\n              {row.cells.map(cell => {\n                const { key, ...restCellProps } = cell.getCellProps();\n\n                return (\n                  <td key={key} {...restCellProps}>\n                    {cell.render('Cell')}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default (hideIfInvalidProps(checkProps)(Table): AbstractComponent<{}>);\n","// @flow\nimport { OFFER_STEPS } from 'shared/Consts';\n\nexport const isWaitingSellerApproval = ({\n  CurrentStep: step,\n}: {\n  CurrentStep: number,\n}): boolean => {\n  return step === OFFER_STEPS.awaitingSellerAction;\n};\n","// @flow\nimport React, { useState, Fragment } from 'react';\nimport type { Element } from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport _get from 'lodash/get';\nimport { isWaitingSellerApproval } from 'helpers/Offer';\n\ntype Props = {\n  cell: Object,\n  handleApproval: Function,\n};\n\nexport const ActionButtons = ({\n  cell,\n  handleApproval,\n}: Props): Element<typeof Fragment> => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const offer = _get(cell, 'row.original');\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onClickApprovalHandler = () => {\n    handleApproval(_get(offer, 'id'));\n    handleClose();\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className={`minimal-btn animated_fastest ${\n          isWaitingSellerApproval(offer) ? '' : 'disabled'\n        }`}\n        onClick={handleClick}\n        disabled={!isWaitingSellerApproval(offer)}\n      >\n        <i className=\"fa fa-ellipsis-h\"></i>\n      </button>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={onClickApprovalHandler}>Approve</MenuItem>\n      </Menu>\n    </>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { OFFER_STEP_MESSAGES } from 'locales/Messages';\nimport Table from 'components/Table';\nimport Loader from 'components/Loader';\nimport { ActionButtons } from './ActionButtons';\n\ntype Props = {\n  offers: Array<Object>,\n  isLoading: boolean,\n  handleApproval: Function,\n};\n\nconst OfferList = (props: Props): Element<'div'> => {\n  const { offers, isLoading, handleApproval } = props;\n\n  const renderItem = ({ cell: { value } }) => <span>{value}</span>;\n\n  const renderStatus = ({ cell: { value } }) => {\n    // TODO: use API fetch all steps\n    return <span>{OFFER_STEP_MESSAGES[value]}</span>;\n  };\n\n  const renderActions = ({ cell }) => (\n    <ActionButtons cell={cell} handleApproval={handleApproval} />\n  );\n\n  const columns = [\n    {\n      Header: 'ID',\n      accessor: 'id',\n      Cell: renderItem,\n    },\n    {\n      Header: 'Offer Price',\n      accessor: 'OfferPrice',\n      Cell: renderItem,\n    },\n    {\n      Header: 'Funding',\n      accessor: 'Funding',\n      Cell: renderItem,\n    },\n    {\n      Header: 'Closing Period',\n      accessor: 'ClosingPeriod',\n      Cell: renderItem,\n    },\n    {\n      Header: 'Current Status',\n      accessor: 'CurrentStep',\n      Cell: renderStatus,\n    },\n    {\n      Header: 'Actions',\n      Cell: renderActions,\n    },\n  ];\n\n  return (\n    <div className=\"offer_block\">\n      <div className=\"offer_container\">\n        {isLoading && <Loader />}\n        <Table columns={columns} data={offers} />\n      </div>\n    </div>\n  );\n};\n\nexport default OfferList;\n","// @flow\nimport React, { useEffect } from 'react';\nimport type { Element } from 'react';\nimport List from 'components/OfferList';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport _get from 'lodash/get';\nimport { fetchOffers, saveOfferStep } from '../redux/Actions';\nimport { OFFER_STEPS } from 'shared/Consts';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\n\ntype PropsWithoutRedux = {};\n\ntype Props = {\n  fetchOffers: Function,\n  offers: Array<Object>,\n  isLoading: boolean,\n  saveOfferStep: Function,\n};\n\nconst OfferList = (props: Props): Element<typeof List> => {\n  const { fetchOffers, offers, isLoading, saveOfferStep } = props;\n\n  useEffect(() => {\n    fetchOffers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleApproval = id => {\n    saveOfferStep(id, { new_step: OFFER_STEPS.awaitingSellerAction });\n  };\n\n  return (\n    <List\n      offers={offers}\n      isLoading={isLoading}\n      handleApproval={handleApproval}\n    />\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  offers: state => _get(state, 'offers.list'),\n  isLoading: state => _get(state, 'offers.isLoading'),\n});\n\nconst mapDispatchToProps = {\n  fetchOffers,\n  saveOfferStep,\n};\n\nexport default (connect(\n  structuredSelector,\n  mapDispatchToProps,\n)(withErrorBoundary(OfferList)): Element<PropsWithoutRedux>);\n"],"sourceRoot":""}