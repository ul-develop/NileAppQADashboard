{"version":3,"sources":["utils/RenderComponent.js","components/Widget/Widget.js","components/Widget/index.js","../node_modules/@material-ui/icons/esm/CheckCircleOutline.js","../node_modules/@material-ui/icons/esm/RadioButtonUnchecked.js","../node_modules/@material-ui/icons/esm/ArrowForwardIos.js","components/SellerProperty/QuestionList/QuestionItem.js","components/SellerProperty/QuestionList/helpers.js","components/SellerProperty/QuestionList/QuestionListWidget.js","components/SellerProperty/QuestionList/QuestionList.js"],"names":["hideIfInvalidProps","isValidProps","WrappedComponent","props","useStyles","makeStyles","theme","title","typography","h3","color","palette","text","secondaryDark","marginBottom","spacing","widget","border","backgroundColor","common","white","padding","Widget","className","children","classes","clsx","data-testid","createSvgIcon","d","link","fontFamily","avenirLT","background","lightGray","display","alignItems","name","h5","marginLeft","dark","flex","linkHighlight","fontWeight","disabledLink","pointerEvents","opacity","selectIcon","float","width","height","primary","main","checkIcon","disabledIcon","gray","loopIcon","QuestionItem","propertyId","form","formId","FormId","Name","formStatus","DataStatus","isEnabled","isSubmitted","FORM_STATUS","submitted","to","CheckCircleOutline","RadioButtonUnchecked","ArrowForwardIos","isListDetailsForm","_get","FORM_TYPE_IDS","listingDetails","mapForms","forms","listDetailsForm","find","isListDetailsFormSubmitted","map","shortForm","sort","formA","formB","description","QuestionListWidget","property","propertyData","Property","PropertyId","preparedForms","sortedForms","prepareForms","ConvertDTPropertyAddress","key","_isEmpty","container","minHeight","loading","QuestionList","properties","isLoading","fetchSellerPropertyForms","error","useEffect","toastr","orderedProperties","itemA","itemB","moment","CreatedAt","tag","blocking","loader","active","type","Forms","structuredSelector","createStructuredSelector","state","mapDispatchToProps","connect"],"mappings":"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","file":"static/js/11.7622f837.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\n\nexport const hideIfInvalidProps = (\n  isValidProps: Function,\n): Function => WrappedComponent => {\n  const renderWrapped = props => {\n    if (!isValidProps(props)) return null;\n\n    return <WrappedComponent {...props} />;\n  };\n\n  return renderWrapped;\n};\n","// @flow\nimport React from 'react';\nimport clsx from 'clsx';\nimport type { Element, Node } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\ntype Props = {\n  title: string,\n  children: Node,\n  className?: string,\n};\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    ...theme.typography.h3,\n    color: theme.palette.text.secondaryDark,\n    marginBottom: theme.spacing(1.5),\n  },\n  widget: {\n    border: '1px solid #E0E0E0',\n    backgroundColor: theme.palette.common.white,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport const Widget = ({\n  className,\n  title,\n  children,\n}: Props): Element<'div'> => {\n  const classes = useStyles();\n  return (\n    <div className={clsx(classes.widget, className)} data-testid=\"widget\">\n      <div className={classes.title}>{title}</div>\n      {children}\n    </div>\n  );\n};\n","export { Widget } from './Widget';\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 7.58L10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'CheckCircleOutline');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.88 4.12L13.76 12l-7.88 7.88L8 22l10-10L8 2z\"\n}), 'ArrowForwardIos');","// @flow\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { FORM_STATUS } from 'components/FormBuilder/Constants';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  CheckCircleOutline,\n  RadioButtonUnchecked,\n  ArrowForwardIos,\n} from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  propertyId: number,\n  form: Object,\n};\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    fontFamily: theme.typography.fontFamily.avenirLT,\n    border: '1px solid #E0E0E0',\n    backgroundColor: theme.palette.background.lightGray,\n    padding: theme.spacing(2.125),\n    marginBottom: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center',\n  },\n  name: {\n    ...theme.typography.h5,\n    marginLeft: theme.spacing(1),\n    color: theme.palette.text.dark,\n    flex: 1,\n  },\n  linkHighlight: {\n    fontWeight: '900',\n  },\n  disabledLink: {\n    pointerEvents: 'none',\n    opacity: 0.5,\n  },\n  selectIcon: {\n    float: 'right',\n    width: '14px',\n    height: '14px',\n    color: theme.palette.primary.main,\n  },\n  checkIcon: {\n    color: theme.palette.primary.main,\n  },\n  disabledIcon: {\n    color: theme.palette.primary.gray,\n  },\n  loopIcon: {\n    color: theme.palette.primary.gray,\n  },\n}));\n\nexport const QuestionItem = (props: Props): React.Element<'div'> => {\n  const { propertyId, form } = props;\n  const {\n    FormId: formId,\n    Name: name,\n    DataStatus: formStatus,\n    isEnabled = false,\n  } = form;\n  const isSubmitted = formStatus === FORM_STATUS.submitted;\n  const classes = useStyles();\n  return (\n    <div data-testid=\"question-item\">\n      <Link\n        className={clsx(classes.link, {\n          [classes.disabledLink]: !isEnabled,\n        })}\n        to={`/property?propertyId=${propertyId}&formId=${formId}`}\n      >\n        {isSubmitted ? (\n          <CheckCircleOutline className={classes.checkIcon} />\n        ) : (\n          <RadioButtonUnchecked className={classes.loopIcon} />\n        )}\n        <span\n          className={clsx(classes.name, {\n            [classes.linkHighlight]: isSubmitted,\n          })}\n        >\n          {name}\n        </span>\n        <ArrowForwardIos\n          className={clsx(classes.selectIcon, {\n            [classes.disabledIcon]: !isEnabled,\n          })}\n        />\n      </Link>\n    </div>\n  );\n};\n","import _get from 'lodash/get';\nimport { FORM_STATUS, FORM_TYPE_IDS } from 'shared/Consts';\n\nconst isListDetailsForm = (form = {}) =>\n  _get(form, ['FormTypeId']) === FORM_TYPE_IDS.listingDetails;\n\nconst mapForms = (forms = []) => {\n  const listDetailsForm = forms.find(form => isListDetailsForm(form));\n\n  if (!listDetailsForm) return forms;\n\n  const isListDetailsFormSubmitted =\n    _get(listDetailsForm, ['DataStatus']) === FORM_STATUS.submitted;\n  return forms.map(form => ({\n    ...form,\n    isEnabled: isListDetailsForm(form) || isListDetailsFormSubmitted,\n  }));\n};\n\nconst shortForm = (forms = []) =>\n  forms.sort(\n    (formA, formB) => _get(formA, ['Order'], 0) - _get(formB, ['Order'], 0),\n  );\n\nconst prepareForms = (forms = []) => {\n  const sortedForms = shortForm(forms);\n  return mapForms(sortedForms);\n};\n\nexport { mapForms, prepareForms };\n","// @flow\nimport React from 'react';\nimport type { AbstractComponent, Element } from 'react';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport { hideIfInvalidProps } from 'utils/RenderComponent';\nimport { QuestionItem } from './QuestionItem';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Widget } from 'components/Widget';\nimport { ConvertDTPropertyAddress } from 'shared/Consts';\n\nimport { prepareForms } from './helpers';\n\ntype Props = {\n  forms: Object,\n  property: Object,\n};\n\nconst useStyles = makeStyles(theme => ({\n  widget: {\n    marginBottom: theme.spacing(3),\n  },\n  description: {\n    ...theme.typography.h5,\n    marginBottom: theme.spacing(3),\n    color: theme.palette.primary.gray,\n  },\n}));\n\nconst checkValidProps = ({ forms, property }) =>\n  !_isEmpty(forms) && !_isEmpty(property);\n\nexport const QuestionListWidget = ({\n  property,\n  forms,\n}: Props): Element<typeof Widget> => {\n  const { Property: propertyData, PropertyId: propertyId } = property;\n  const classes = useStyles();\n  const preparedForms = prepareForms(forms);\n\n  return (\n    <Widget title=\"Question List\" className={classes.widget}>\n      <div className={classes.description}>\n        To publish your properties (\n        <strong>{ConvertDTPropertyAddress(propertyData)}</strong>) to our\n        system, you need to complete the list of questions below:\n      </div>\n      {preparedForms.map(form => (\n        <QuestionItem\n          form={form}\n          propertyId={propertyId}\n          key={_get(form, ['FormId'])}\n        />\n      ))}\n    </Widget>\n  );\n};\n\nexport default (hideIfInvalidProps(checkValidProps)(\n  QuestionListWidget,\n): AbstractComponent<{}>);\n","// @flow\nimport React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport type { Element, AbstractComponent } from 'react';\nimport { fetchSellerPropertyForms } from 'components/SellerProperty/Listing/Form/redux/Actions';\nimport { toastr } from 'react-redux-toastr';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport moment from 'moment';\nimport { QuestionListWidget } from './QuestionListWidget';\nimport BlockUi from 'react-block-ui';\nimport { Loader } from 'react-loaders';\nimport { makeStyles } from '@material-ui/core/styles';\n\ntype Props = {\n  properties: Array<Object>,\n  fetchSellerPropertyForms: Function,\n  error: string,\n  isLoading: boolean,\n};\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    minHeight: '100px',\n  },\n  loading: {\n    border: '1px solid #E0E0E0',\n    backgroundColor: theme.palette.common.white,\n  },\n}));\n\nexport const QuestionList = (props: Props): Element<'div' | 'p'> => {\n  const { properties, isLoading, fetchSellerPropertyForms, error } = props;\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetchSellerPropertyForms();\n    // eslint-disable-next-line react-hooks/exhaustive-deps,\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      toastr.error('Something went wrong');\n    }\n  }, [error]);\n\n  if (process.env.REACT_APP_SELL_SIDE_ENABLED !== '1') {\n    return <p className=\"incorrect_parameter\">Coming Soon</p>;\n  }\n\n  if (_isEmpty(properties) && !isLoading) {\n    return <p className=\"incorrect_parameter\">Property Not Found</p>;\n  }\n\n  const orderedProperties = properties.sort((itemA, itemB) => {\n    return moment(itemA.CreatedAt) - moment(itemB.CreatedAt);\n  });\n\n  return (\n    <BlockUi\n      tag=\"div\"\n      blocking={isLoading}\n      loader={<Loader active type=\"ball-pulse\" color=\"rgba(231,28,99,1)\" />}\n      className={clsx(classes.container, { [classes.loading]: isLoading })}\n    >\n      {orderedProperties.map(property => {\n        const { Forms: forms, PropertyId: propertyId } = property;\n        return (\n          <QuestionListWidget\n            property={property}\n            forms={forms}\n            key={propertyId}\n          />\n        );\n      })}\n    </BlockUi>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  properties: state =>\n    _get(state, ['sellerPropertyForms', 'propertyForms', 'Properties'], []),\n  isLoading: state => _get(state, ['sellerPropertyForms', 'isLoading']),\n  error: state => _get(state, ['sellerPropertyForms', 'error']),\n});\n\nconst mapDispatchToProps = { fetchSellerPropertyForms };\n\nexport default (connect(\n  structuredSelector,\n  mapDispatchToProps,\n)(QuestionList): AbstractComponent<Props>);\n"],"sourceRoot":""}