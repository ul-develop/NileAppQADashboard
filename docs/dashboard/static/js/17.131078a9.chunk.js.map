{"version":3,"sources":["components/BuyerOfferStep/Step220/ActionButton.js"],"names":["ActionButton","offer","updateOfferStep","isLoading","useState","anchorEl","setAnchorEl","offerId","_get","formId","handleClose","onClickAccept","a","newStep","OFFER_STEPS","buyerAcceptCounterOffer","counterUrl","APP_BASE_URL","awaitingSellerAction","type","className","onClick","event","currentTarget","disabled","keepMounted","open","Boolean","onClose","component","href","structuredSelector","createStructuredSelector","state","mapDispatchToProps","connect"],"mappings":"uRAsBaA,EAAe,SAAC,GAIW,IAHtCC,EAGqC,EAHrCA,MACAC,EAEqC,EAFrCA,gBACAC,EACqC,EADrCA,UACqC,EACLC,mBAAS,MADJ,mBAC9BC,EAD8B,KACpBC,EADoB,KAE/BC,EAAUC,IAAKP,EAAO,CAAC,YACvBQ,EAASD,IAAKP,EAAO,CAAC,eAAgB,QAAS,EAAG,WAMlDS,EAAc,WAClBJ,EAAY,OAGRK,EAAa,uCAAG,sBAAAC,EAAA,sEACdV,EAAgB,CACpBK,UACAM,QAASC,KAAYC,0BAHH,OAKpBL,IALoB,2CAAH,qDAQbM,EAAU,UAAMC,IAAN,0BAAoCV,EAApC,iBAAoDO,KAAYI,qBAAhE,mBAA+FT,GAE/G,OACE,oCACE,4BACEU,KAAK,SACLC,UAAU,+BACVC,QAvBc,SAAAC,GAClBhB,EAAYgB,EAAMC,gBAuBdC,SAAUrB,GAEV,uBAAGiB,UAAU,sBAEf,kBAAC,IAAD,CACEf,SAAUA,EACVoB,aAAW,EACXC,KAAMC,QAAQtB,GACduB,QAASlB,GAET,kBAAC,IAAD,CAAUmB,UAAU,SAASR,QAASV,GAAtC,wBAGA,kBAAC,IAAD,CAAUkB,UAAU,IAAIC,KAAMd,GAA9B,oBAQFe,EAAqBC,YAAyB,CAClD7B,UAAW,SAAA8B,GAAK,OAAIzB,IAAKyB,EAAO,CAAC,aAAc,iBAG3CC,EAAqB,CACzBhC,qBAGciC,4BACdJ,EACAG,EAFcC,CAGdnC","file":"static/js/17.131078a9.chunk.js","sourcesContent":["// @flow\nimport React, { useState, Fragment } from 'react';\nimport type { Element, AbstractComponent } from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport _get from 'lodash/get';\nimport { APP_BASE_URL, OFFER_STEPS } from 'shared/Consts';\nimport { createStructuredSelector } from 'reselect';\nimport { updateOfferStep } from 'containers/BuyerOffer/redux/Actions';\nimport { connect } from 'react-redux';\nimport type { Offer } from 'types/Offer';\n\ntype PropsWithoutRedux = {\n  offer: Offer,\n};\n\ntype Props = {\n  ...PropsWithoutRedux,\n  updateOfferStep: Function,\n  isLoading: boolean,\n};\n\nexport const ActionButton = ({\n  offer,\n  updateOfferStep,\n  isLoading,\n}: Props): Element<typeof Fragment> => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const offerId = _get(offer, ['OfferId']);\n  const formId = _get(offer, ['CounterOffer', 'Forms', 0, 'FormId']);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onClickAccept = async () => {\n    await updateOfferStep({\n      offerId,\n      newStep: OFFER_STEPS.buyerAcceptCounterOffer,\n    });\n    handleClose();\n  };\n\n  const counterUrl = `${APP_BASE_URL}/offer?offerId=${offerId}&step=${OFFER_STEPS.awaitingSellerAction}&formId=${formId}`;\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"minimal-btn animated_fastest\"\n        onClick={handleClick}\n        disabled={isLoading}\n      >\n        <i className=\"fa fa-ellipsis-h\"></i>\n      </button>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem component=\"button\" onClick={onClickAccept}>\n          Accept Counter Offer\n        </MenuItem>\n        <MenuItem component=\"a\" href={counterUrl}>\n          Counter Offer\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  isLoading: state => _get(state, ['buyerOffer', 'isLoading']),\n});\n\nconst mapDispatchToProps = {\n  updateOfferStep,\n};\n\nexport default (connect(\n  structuredSelector,\n  mapDispatchToProps,\n)(ActionButton): AbstractComponent<PropsWithoutRedux>);\n"],"sourceRoot":""}