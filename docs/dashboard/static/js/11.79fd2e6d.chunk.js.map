{"version":3,"sources":["utils/RenderComponent.js","components/Table/index.js","helpers/Offer.js","helpers/Table.js","configs/locate.js","components/SellerOfferList/ActionButtons.js","components/SellerOfferList/index.js","containers/SellerOffer/OfferList/index.js"],"names":["hideIfInvalidProps","isValidProps","WrappedComponent","props","columns","data","isArray","length","dataMemo","useMemo","useTable","getTableProps","getTableBodyProps","headers","rows","prepareRow","className","map","header","getHeaderProps","key","restHeaderProps","render","row","getRowProps","restRowProps","cells","cell","getCellProps","restCellProps","getCounterData","offer","pathData","reduce","result","name","_get","concat","mappingCounterData","OFFER_STEPS","counteredBySeller","MappingCounter","renderPrice","prop","value","Intl","NumberFormat","style","currency","format","ActionButtons","handleApproval","isSubmitting","handleDecline","useState","anchorEl","setAnchorEl","offerId","stepId","formId","counterOfferId","handleClose","isInvalidSubmission","STEPS_AWAITING_SELLER_ACTION","includes","counterUrl","APP_BASE_URL","type","onClick","event","currentTarget","disabled","Menu","keepMounted","open","Boolean","onClose","MenuItem","component","buyerAcceptCounterOffer","href","offers","memo","isLoading","mappingOffers","renderItem","Header","accessor","Cell","Loader","Table","structuredSelector","createStructuredSelector","state","isUpdatedStep","error","mapDispatchToProps","fetchOffers","saveOfferStep","getBuyerOffers","connect","withErrorBoundary","useEffect","message","toastr","OFFER_ERROR_MESSAGES","saveFailure","a","new_step","paBeingCreated","sellerDecline"],"mappings":"wGACA,sDAEaA,EAAqB,SAChCC,GADgC,OAEnB,SAAAC,GAOb,OANsB,SAAAC,GACpB,OAAKF,EAAaE,GAEX,kBAACD,EAAqBC,GAFI,S,6GCgErBH,iBA1DG,SAAC,GAAD,IAAGI,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAZ,OACjBC,IAAQF,IAAYA,EAAQG,QAAUD,IAAQD,IAASA,EAAKE,SAyD9CP,EAvDF,SAACG,GAAoC,IACzCC,EAAkBD,EAAlBC,QAASC,EAASF,EAATE,KAEXG,EAAWC,mBAAQ,kBAAMJ,IAAM,CAACA,IAHU,EAW5CK,mBAAS,CACXN,UACAC,KAAMG,IAPNG,EAN8C,EAM9CA,cACAC,EAP8C,EAO9CA,kBACAC,EAR8C,EAQ9CA,QACAC,EAT8C,EAS9CA,KACAC,EAV8C,EAU9CA,WAMF,OACE,2CAAWJ,IAAX,CAA4BK,UAAU,eACpC,+BACE,4BACGH,EAAQI,KAAI,SAAAC,GAAW,IAAD,EACeA,EAAOC,iBAAnCC,EADa,EACbA,IAAQC,EADK,uBAGrB,OACE,sCAAID,IAAKA,GAASC,GACfH,EAAOI,OAAO,gBAMzB,0BAAWV,IACRE,EAAKG,KAAI,SAAAM,GACRR,EAAWQ,GADI,MAEkBA,EAAIC,cAA7BJ,EAFO,EAEPA,IAAQK,EAFD,uBAIf,OACE,sCAAIL,IAAKA,GAASK,GACfF,EAAIG,MAAMT,KAAI,SAAAU,GAAS,IAAD,EACaA,EAAKC,eAA/BR,EADa,EACbA,IAAQS,EADK,uBAGrB,OACE,sCAAIT,IAAKA,GAASS,GACfF,EAAKL,OAAO,sB,sICtD3BQ,EAAiB,SAACC,EAAcC,GASpC,MARmB,CACjB,aACA,wBACA,wBACA,gBACA,aAGgBC,QAAO,SAACC,EAAoBC,GAC5C,OAAO,2BACFD,GADL,kBAEGC,EAAOC,IAAKL,EAAOC,EAASK,OAAOF,QAErC,KAGQG,EAAqB,SAACP,GAGjC,OAFeK,IAAKL,EAAO,CAAC,aAEbQ,KAAYC,kBAClB,2BACFT,GADL,IAEEU,eAAgBX,EAAeC,EAAO,CAAC,eAAgB,oBAIpD,2BACFA,GADL,IAEEU,eAAgBX,EAAeC,EAAO,CAAC,eAAgB,qB,uDClC3D,kCAGO,IAAMW,EAAc,SAAAC,GACzB,IAAMC,EAAQR,IAAKO,EAAM,QAAS,IAClC,MAAM,GAAN,OACEC,EACI,IAAIC,KAAKC,aCPK,QDOgB,CAC5BC,MAAO,WACPC,SCRc,QDSbC,OAAOL,GACV,O,2JESKM,EAAgB,SAAC,GAKU,IAJtCnB,EAIqC,EAJrCA,MACAoB,EAGqC,EAHrCA,eACAC,EAEqC,EAFrCA,aACAC,EACqC,EADrCA,cACqC,EACLC,mBAAS,MADJ,mBAC9BC,EAD8B,KACpBC,EADoB,KAE/BC,EAAUrB,IAAKL,EAAO,CAAC,YACvB2B,EAAStB,IAAKL,EAAO,CAAC,WACtB4B,EAASvB,IAAKL,EAAO,CAAC,eAAgB,QAAS,EAAG,WAClD6B,EAAiBxB,IACrBL,EACA,CAAC,eAAgB,kBACjB0B,GAMII,EAAc,WAClBL,EAAY,OAGRM,EACJV,IAAiBW,KAA6BC,SAASN,GAgBnDO,EAAU,UAAMC,IAAN,0BAAoCN,EAApC,iBAA2DrB,KAAYC,kBAAvE,mBAAmGmB,GAEnH,OACE,oCACE,4BACEQ,KAAK,SACLnD,UAAU,+BACVoD,QAhCc,SAAAC,GAClBb,EAAYa,EAAMC,gBAgCdC,SAAUT,GAEV,uBAAG9C,UAAU,sBAEf,kBAACwD,EAAA,EAAD,CACEjB,SAAUA,EACVkB,aAAW,EACXC,KAAMC,QAAQpB,GACdqB,QAASf,GAET,kBAACgB,EAAA,EAAD,CAAUC,UAAU,SAASV,QAhCJ,WACzBN,IAEJX,EAAeM,GACfI,OA4BI,UAGA,kBAACgB,EAAA,EAAD,CAAUC,UAAU,SAASV,QA5BL,WACxBN,IAEJT,EAAcI,GACdI,OAwBI,WAGCH,IAAWnB,KAAYwC,yBACtB,kBAACF,EAAA,EAAD,CAAUC,UAAU,IAAIE,KAAMf,GAA9B,oB,8BCyBMjE,eA3FG,SAAC,GAAD,IAAGiF,EAAH,EAAGA,OAAH,OAAgBA,GAAUA,EAAO1E,SA2FpCP,CACdkF,gBA1FsB,SAAC/E,GAAkC,IAEvD8E,EAKE9E,EALF8E,OACAE,EAIEhF,EAJFgF,UACAhC,EAGEhD,EAHFgD,eACAC,EAEEjD,EAFFiD,aACAC,EACElD,EADFkD,cAGI+B,EAAgBH,EAAOhE,IAAIqB,KAE3B+C,EAAa,SAAC,GAAD,IAAGzC,EAAH,EAAGA,MAAH,OAAe,8BAAOA,GAAS,MAW5CxC,EAAU,CACd,CACEkF,OAAQ,KACRC,SAAU,UACVC,KAAMH,GAER,CACEC,OAAQ,cACRC,SAAU,4BACVC,KAAM9C,KAER,CACE4C,OAAQ,UACRC,SAAU,uBACVC,KAAMH,GAER,CACEC,OAAQ,YACRC,SAAU,mBACVC,KAAMH,GAER,CACEC,OAAQ,eACRC,SAAU,sBACVC,KAAM9C,KAER,CACE4C,OAAQ,4BACRC,SAAU,uCACVC,KAAMH,GAER,CACEC,OAAQ,2BACRC,SAAU,uCACVC,KAAMH,GAER,CACEC,OAAQ,iBACRC,SAAU,+BACVC,KAAMH,GAER,CACEC,OAAQ,YACRC,SAAU,2BACVC,KAAMH,GAER,CACEC,OAAQ,iBACRC,SAAU,uBACVC,KAAMH,GAER,CACEC,OAAQ,UACRE,KA9DkB,SAAC,GAAD,IAAGjE,EAAH,EAAGA,IAAH,OACpB,kBAAC,EAAD,CACEQ,MAAOK,IAAKb,EAAK,CAAC,aAClB4B,eAAgBA,EAChBC,aAAcA,EACdC,cAAeA,OA6DnB,OACE,yBAAKrC,UAAU,eACb,yBAAKA,UAAU,mBACZmE,GAAa,kBAACM,EAAA,EAAD,MACd,kBAACC,EAAA,EAAD,CAAOtF,QAASA,EAASC,KAAM+E,U,8DCzBjCO,EAAqBC,YAAyB,CAClDX,OAAQ,SAAAY,GAAK,OAAIzD,IAAKyD,EAAO,CAAC,eAAgB,OAAQ,EAAG,YACzDV,UAAW,SAAAU,GAAK,OAAIzD,IAAKyD,EAAO,CAAC,eAAgB,eACjDzC,aAAc,SAAAyC,GAAK,OAAIzD,IAAKyD,EAAO,CAAC,cAAe,eACnDC,cAAe,SAAAD,GAAK,OAAIzD,IAAKyD,EAAO,CAAC,cAAe,mBACpDE,MAAO,SAAAF,GAAK,OAAIzD,IAAKyD,EAAO,CAAC,cAAe,aAGxCG,EAAqB,CACzBC,gBACAC,kBACAC,oBAGcC,4BACdT,EACAK,EAFcI,CAGdC,aArEgB,SAAClG,GAAwC,IAEvD8F,EAQE9F,EARF8F,YACAhB,EAOE9E,EAPF8E,OACAE,EAMEhF,EANFgF,UACAe,EAKE/F,EALF+F,cACA9C,EAIEjD,EAJFiD,aACA0C,EAGE3F,EAHF2F,cACAC,EAEE5F,EAFF4F,MACAI,EACEhG,EADFgG,eAGFG,qBAAU,WACRL,MAEC,IAEHK,qBAAU,WACJR,IACFG,IACAE,OAGD,CAACL,IAEJQ,qBAAU,WAAO,IACPC,GAAYR,GAAS,IAArBQ,QAEJA,GACFC,SAAOT,MAAMU,IAAqBC,YAAaH,KAEhD,CAACR,IAEJ,IAAM5C,EAAc,uCAAG,WAAMM,GAAN,SAAAkD,EAAA,sDACrBT,EAAczC,EAAS,CAAEmD,SAAUrE,KAAYsE,iBAD1B,2CAAH,sDAQpB,OACE,kBAAC,EAAD,CACE5B,OAAQA,EACRE,UAAWA,EACXhC,eAAgBA,EAChBC,aAAcA,EACdC,cAVkB,SAAAI,GACpByC,EAAczC,EAAS,CAAEmD,SAAUrE,KAAYuE","file":"static/js/11.79fd2e6d.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\n\nexport const hideIfInvalidProps = (\n  isValidProps: Function,\n): Function => WrappedComponent => {\n  const renderWrapped = props => {\n    if (!isValidProps(props)) return null;\n\n    return <WrappedComponent {...props} />;\n  };\n\n  return renderWrapped;\n};\n","// @flow\nimport React, { useMemo } from 'react';\nimport type { Element, AbstractComponent } from 'react';\nimport { useTable } from 'react-table';\nimport { hideIfInvalidProps } from 'utils/RenderComponent';\nimport isArray from 'lodash/isArray';\nimport './Style.css';\n\ntype Props = {\n  columns: Array<Object>,\n  data: Array<Object>,\n};\n\nconst checkProps = ({ columns, data }) =>\n  isArray(columns) && columns.length && isArray(data) && data.length;\n\nconst Table = (props: Props): Element<'table'> => {\n  const { columns, data } = props;\n\n  const dataMemo = useMemo(() => data, [data]);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headers,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data: dataMemo,\n  });\n\n  return (\n    <table {...getTableProps()} className=\"nile-table\">\n      <thead>\n        <tr>\n          {headers.map(header => {\n            const { key, ...restHeaderProps } = header.getHeaderProps();\n\n            return (\n              <th key={key} {...restHeaderProps}>\n                {header.render('Header')}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map(row => {\n          prepareRow(row);\n          const { key, ...restRowProps } = row.getRowProps();\n\n          return (\n            <tr key={key} {...restRowProps}>\n              {row.cells.map(cell => {\n                const { key, ...restCellProps } = cell.getCellProps();\n\n                return (\n                  <td key={key} {...restCellProps}>\n                    {cell.render('Cell')}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default (hideIfInvalidProps(checkProps)(Table): AbstractComponent<{}>);\n","// @flow\nimport _get from 'lodash/get';\nimport { OFFER_STEPS } from 'shared/Consts';\nimport type { Offer, OfferTable } from 'types/Offer';\n\nconst getCounterData = (offer: Offer, pathData: Array<string>): OfferTable => {\n  const fieldNames = [\n    'OfferPrice',\n    'InspectionContingency',\n    'SaleOfHomeContingency',\n    'ClosingPeriod',\n    'Furniture',\n  ];\n\n  return fieldNames.reduce((result: OfferTable, name: string) => {\n    return {\n      ...result,\n      [name]: _get(offer, pathData.concat(name)),\n    };\n  }, {});\n};\n\nexport const mappingCounterData = (offer: Offer): Object => {\n  const stepId = _get(offer, ['StepId']);\n\n  if (stepId === OFFER_STEPS.counteredBySeller) {\n    return {\n      ...offer,\n      MappingCounter: getCounterData(offer, ['CounterOffer', 'SellerCounter']),\n    };\n  }\n\n  return {\n    ...offer,\n    MappingCounter: getCounterData(offer, ['CounterOffer', 'BuyerCounter']),\n  };\n};\n","import _get from 'lodash/get';\nimport { LOCATE, CURRENCY } from 'configs/locate';\n\nexport const renderPrice = prop => {\n  const value = _get(prop, 'value', '');\n  return `${\n    value\n      ? new Intl.NumberFormat(LOCATE, {\n          style: 'currency',\n          currency: CURRENCY,\n        }).format(value)\n      : '-'\n  }`;\n};\n","export const LOCATE = 'en-US';\nexport const CURRENCY = 'USD';\n","// @flow\nimport React, { useState, Fragment } from 'react';\nimport type { Element } from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport _get from 'lodash/get';\nimport {\n  APP_BASE_URL,\n  OFFER_STEPS,\n  STEPS_AWAITING_SELLER_ACTION,\n} from 'shared/Consts';\nimport type { Offer } from 'types/Offer';\n\ntype Props = {\n  offer: Offer,\n  handleApproval: Function,\n  isSubmitting: boolean,\n  handleDecline: Function,\n};\n\nexport const ActionButtons = ({\n  offer,\n  handleApproval,\n  isSubmitting,\n  handleDecline,\n}: Props): Element<typeof Fragment> => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const offerId = _get(offer, ['OfferId']);\n  const stepId = _get(offer, ['StepId']);\n  const formId = _get(offer, ['CounterOffer', 'Forms', 0, 'FormId']);\n  const counterOfferId = _get(\n    offer,\n    ['CounterOffer', 'CounterOfferId'],\n    offerId,\n  );\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const isInvalidSubmission =\n    isSubmitting || !STEPS_AWAITING_SELLER_ACTION.includes(stepId);\n\n  const onClickApprovalHandler = () => {\n    if (isInvalidSubmission) return;\n\n    handleApproval(offerId);\n    handleClose();\n  };\n\n  const onClickDeclineHandler = () => {\n    if (isInvalidSubmission) return;\n\n    handleDecline(offerId);\n    handleClose();\n  };\n\n  const counterUrl = `${APP_BASE_URL}/offer?offerId=${counterOfferId}&step=${OFFER_STEPS.counteredBySeller}&formId=${formId}`;\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"minimal-btn animated_fastest\"\n        onClick={handleClick}\n        disabled={isInvalidSubmission}\n      >\n        <i className=\"fa fa-ellipsis-h\"></i>\n      </button>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem component=\"button\" onClick={onClickApprovalHandler}>\n          Accept\n        </MenuItem>\n        <MenuItem component=\"button\" onClick={onClickDeclineHandler}>\n          Decline\n        </MenuItem>\n        {stepId !== OFFER_STEPS.buyerAcceptCounterOffer && (\n          <MenuItem component=\"a\" href={counterUrl}>\n            Counter Offer\n          </MenuItem>\n        )}\n      </Menu>\n    </>\n  );\n};\n","// @flow\nimport React, { memo } from 'react';\nimport type { Element } from 'react';\nimport Table from 'components/Table';\nimport Loader from 'components/Loader';\nimport { ActionButtons } from './ActionButtons';\nimport { hideIfInvalidProps } from 'utils/RenderComponent';\nimport { mappingCounterData } from 'helpers/Offer';\nimport _get from 'lodash/get';\nimport { renderPrice } from 'helpers/Table';\n\ntype Props = {\n  offers: Array<Object>,\n  isLoading: boolean,\n  handleApproval: Function,\n  isSubmitting: boolean,\n  handleDecline: Function,\n};\n\nconst checkProps = ({ offers }) => offers && offers.length;\n\nconst SellerOfferList = (props: Props): Element<'div'> => {\n  const {\n    offers,\n    isLoading,\n    handleApproval,\n    isSubmitting,\n    handleDecline,\n  } = props;\n\n  const mappingOffers = offers.map(mappingCounterData);\n\n  const renderItem = ({ value }) => <span>{value || '-'}</span>;\n\n  const renderActions = ({ row }) => (\n    <ActionButtons\n      offer={_get(row, ['original'])}\n      handleApproval={handleApproval}\n      isSubmitting={isSubmitting}\n      handleDecline={handleDecline}\n    />\n  );\n\n  const columns = [\n    {\n      Header: 'ID',\n      accessor: 'OfferNo',\n      Cell: renderItem,\n    },\n    {\n      Header: 'Offer Price',\n      accessor: 'MappingCounter.OfferPrice',\n      Cell: renderPrice,\n    },\n    {\n      Header: 'Funding',\n      accessor: 'Funding.PurchaseType',\n      Cell: renderItem,\n    },\n    {\n      Header: 'Loan Type',\n      accessor: 'Funding.LoanType',\n      Cell: renderItem,\n    },\n    {\n      Header: 'Down Payment',\n      accessor: 'Funding.DownPayment',\n      Cell: renderPrice,\n    },\n    {\n      Header: 'Due Diligence Contingency',\n      accessor: 'MappingCounter.InspectionContingency',\n      Cell: renderItem,\n    },\n    {\n      Header: 'Sale of Home Contingency',\n      accessor: 'MappingCounter.SaleOfHomeContingency',\n      Cell: renderItem,\n    },\n    {\n      Header: 'Closing Period',\n      accessor: 'MappingCounter.ClosingPeriod',\n      Cell: renderItem,\n    },\n    {\n      Header: 'Furniture',\n      accessor: 'MappingCounter.Furniture',\n      Cell: renderItem,\n    },\n    {\n      Header: 'Current Status',\n      accessor: 'Step.messages.seller',\n      Cell: renderItem,\n    },\n    {\n      Header: 'Actions',\n      Cell: renderActions,\n    },\n  ];\n\n  return (\n    <div className=\"offer_block\">\n      <div className=\"offer_container\">\n        {isLoading && <Loader />}\n        <Table columns={columns} data={mappingOffers} />\n      </div>\n    </div>\n  );\n};\n\nexport default (hideIfInvalidProps(checkProps)(\n  memo(SellerOfferList),\n): typeof SellerOfferList);\n","// @flow\nimport React, { useEffect } from 'react';\nimport type { Element } from 'react';\nimport List from 'components/SellerOfferList';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport _get from 'lodash/get';\nimport { fetchOffers, saveOfferStep } from '../redux/Actions';\nimport { getAllOffers as getBuyerOffers } from 'containers/BuyerOffer/redux/Actions';\nimport { OFFER_STEPS } from 'shared/Consts';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { toastr } from 'react-redux-toastr';\nimport { OFFER_ERROR_MESSAGES } from 'shared/Messages';\n\ntype PropsWithoutRedux = {};\n\ntype Props = {\n  fetchOffers: Function,\n  offers: Array<Object>,\n  isLoading: boolean,\n  saveOfferStep: Function,\n  isSubmitting: boolean,\n  isUpdatedStep: boolean,\n  error: Object,\n  getBuyerOffers: Function,\n};\n\nconst OfferList = (props: Props): Element<typeof List> => {\n  const {\n    fetchOffers,\n    offers,\n    isLoading,\n    saveOfferStep,\n    isSubmitting,\n    isUpdatedStep,\n    error,\n    getBuyerOffers,\n  } = props;\n\n  useEffect(() => {\n    fetchOffers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (isUpdatedStep) {\n      fetchOffers();\n      getBuyerOffers();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isUpdatedStep]);\n\n  useEffect(() => {\n    const { message } = error || {};\n\n    if (message) {\n      toastr.error(OFFER_ERROR_MESSAGES.saveFailure, message);\n    }\n  }, [error]);\n\n  const handleApproval = async offerId => {\n    saveOfferStep(offerId, { new_step: OFFER_STEPS.paBeingCreated });\n  };\n\n  const handleDecline = offerId => {\n    saveOfferStep(offerId, { new_step: OFFER_STEPS.sellerDecline });\n  };\n\n  return (\n    <List\n      offers={offers}\n      isLoading={isLoading}\n      handleApproval={handleApproval}\n      isSubmitting={isSubmitting}\n      handleDecline={handleDecline}\n    />\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  offers: state => _get(state, ['sellerOffers', 'list', 0, 'Offers']),\n  isLoading: state => _get(state, ['sellerOffers', 'isLoading']),\n  isSubmitting: state => _get(state, ['sellerOffer', 'isLoading']),\n  isUpdatedStep: state => _get(state, ['sellerOffer', 'isUpdatedStep']),\n  error: state => _get(state, ['sellerOffer', 'error']),\n});\n\nconst mapDispatchToProps = {\n  fetchOffers,\n  saveOfferStep,\n  getBuyerOffers,\n};\n\nexport default (connect(\n  structuredSelector,\n  mapDispatchToProps,\n)(withErrorBoundary(OfferList)): Element<PropsWithoutRedux>);\n"],"sourceRoot":""}