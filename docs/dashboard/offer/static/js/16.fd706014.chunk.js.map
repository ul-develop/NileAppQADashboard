{"version":3,"sources":["components/Calendar/DayScaleCell.js","components/Calendar/helpers.js","components/Calendar/TimeTableCell.js","components/Calendar/Appointment.js","components/Calendar/TooltipContent.js","components/Calendar/IntegratedDates.js","services/YouCanBook/Request.js","services/YouCanBook/ProfilesService.js","services/YouCanBook/BookingsService.js","components/Calendar/hooks/useConfig.js","components/Calendar/hooks/useAppointments.js","components/Calendar/hooks/useError.js","components/BookingForm/constants.js","components/BookingForm/helpers.js","components/BookingForm/AppointmentData/index.jsx","components/BookingForm/AppointmentTypes/index.jsx","components/Elements/TextField/index.jsx","components/BookingForm/Fields/SimpleField.jsx","components/Elements/Select/index.jsx","components/Elements/Checkbox/index.jsx","components/BookingForm/Fields/CheckboxField.jsx","components/BookingForm/Fields/index.jsx","components/BookingForm/Fields/DropdownField.jsx","components/BookingForm/BookingForm.jsx","components/BookingForm/RepeatSection/index.jsx","components/BookingForm/SellerBookingForm.jsx","components/Calendar/AppointmentForm/BasicLayout.jsx","components/Calendar/AppointmentForm/Layout.jsx","components/Calendar/AppointmentForm/CommandLayout.jsx","components/Calendar/AppointmentForm/AppointmentForm.jsx","components/Calendar/Calendar.js"],"names":["useStyles","makeStyles","theme","cell","paddingTop","spacing","today","backgroundColor","alpha","palette","primary","main","DayScaleCell","props","classes","className","clsx","ERROR_MESSAGES","MOMENT_FORMAT","getTimeConfig","config","dateString","key","fieldConfig","_get","moment","isCellActive","dateName","Date","toLocaleString","weekday","toLowerCase","mapDateToName","currentMoment","isSame","isMomentInToday","diff","isMomentInPast","isActivatedMoment","currentDate","format","startDate","endDate","isSameOrAfter","isSameOrBefore","isAvailableMoment","breakStart","breakEnd","isMomentInBreaking","formatTime","displayDate","displayTime","isBusyAppointment","data","busyAppointmentType","services","find","service","name","BUSY_APPOINTMENT_NAME","Boolean","disableCell","background","action","disabledBackground","backgroundSize","pointerEvents","structuredSelector","createStructuredSelector","timeConfig","state","connect","undefined","withErrorBoundary","TimeTableCell","appointment","busy","gray","Appointment","children","restProps","wrapper","padding","section","marginBottom","TooltipContent","appointmentData","Paper","Typography","variant","color","Event","AccessTime","mapDispatchToProps","setStartOfWeek","setEndOfWeek","computed","startViewDate","endViewDate","Request","this","baseURL","process","cancelToken","method","url","params","headers","needResHeaders","self","CancelToken","axios","Promise","resolve","reject","options","timeout","Authorization","PLACEHOLDER_AUTHORIZATION","c","request","then","res","JSON","parse","error","status","message","errors","id","fields","PATHS","PROFILES","BookingsService","a","profileId","booking","BOOKINGS","BOOKING_FIELDS","remapBookings","cur","bookings","length","push","from","to","needMore","nextPage","jumpToDate","resLink","tmpBookings","lastItemStartDate","isBefore","getEmail","emailField","filter","answer","code","map","title","cancelled","useConfig","dispatch","useDispatch","useEffect","setProfileId","setIsLoading","ProfilesService","getProfileById","setConfig","setError","cancel","useAppointments","startOfWeek","useSelector","endOfWeek","getBookings","filteredAppointments","setAppointments","useError","toastr","TYPES","defaultValues","REPEAT_TYPE","generateInitialValues","questions","reduce","acc","type","appointmentType","prepareQuestionsAnswers","values","string","prepareBookingData","FNAME","startsAt","tentative","timeZone","units","answers","prepareSellerBookings","appointmentStartDate","repeat","repeatType","appointmentTypes","getBusyAppointmentType","startTime","mStartDate","module","Array","Math","floor","_","i","day","mDay","add","getErrorMessages","bookingDates","join","typography","h4","textAlign","AppointmentData","Box","sx","mt","group","width","margin","button","textTransform","buttonLabel","display","justifyContent","alignItems","duration","selected","AppointmentTypes","useFormikContext","setFieldValue","value","ToggleButtonGroup","orientation","exclusive","onChange","event","newTypeId","newType","root","ToggleButton","label","fontSize","ml","numberOfSlots","slotLengthMinutes","getAppointmentTypeDuration","textField","marginTop","dark","input","h5","TextField","styleClasses","placeholder","required","FormControl","FormLabel","InputProps","after","subtitle","select","item","Select","MenuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","MenuItem","option","checkbox","Checkbox","checked","FormControlLabel","control","components","question","before","handleChange","flexDirection","my","FormHelperText","Fields","Component","isLoading","addAppointments","onSave","buyerAppointmentTypes","initialValues","onSubmit","createBooking","newAppointments","Divider","Button","disableElevation","fullWidth","disabled","RepeatSection","handleDateChange","field","date","Switch","Collapse","in","RadioGroup","Radio","Grid","container","utils","MomentUtils","disableToolbar","inputVariant","property","address","email","Auth","EMAIL","generateSellerValues","createBookings","_isEmpty","mb","FormComponent","SellerBookingForm","BookingForm","layout","common","white","content","Layout","BasicLayout","basicLayoutComponent","CommandLayout","commandLayoutComponent","RecurrenceLayout","recurrenceLayoutComponent","isRecurrence","onCommitButtonClick","isSaving","setIsSaving","AppointmentForm","useState","BasicLayoutComponent","connectProps","CommandLayoutComponent","layoutComponent","minHeight","fontFamily","avenirLT","loading","border","appointments","tag","blocking","loader","active","elevation","timeTableCellComponent","dayScaleCellComponent","cellDuration","onCommitChanges","appointmentComponent","showCloseButton","contentComponent"],"mappings":"uNAMMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,WAAYF,EAAMG,QAAQ,IAE5BC,MAAO,CACLC,gBAAiBC,YAAMN,EAAMO,QAAQC,QAAQC,KAAM,UAkBxCC,EAdM,SAACC,GACpB,IAAMC,EAAUd,IACRM,EAAUO,EAAVP,MAER,OACE,gBAAC,IAASM,aAAV,iBACMC,EADN,CAEEE,UAAWC,YAAKF,EAAQX,KAAT,eACZW,EAAQR,MAAQA,Q,oDCfZW,EACI,uBAIXC,EAAa,UADC,aACD,aASbC,EAAgB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,WAAYC,EAAU,EAAVA,IACrCC,EAAcC,IAAKJ,EAAQE,IAAQ,GACzC,OAAOG,IAAO,GAAD,OAAIJ,EAAJ,YAAkBE,GAAeL,IAgDnCQ,EAAe,SAAC,GAGO,IAFlCL,EAEiC,EAFjCA,WACAD,EACiC,EADjCA,OAEMO,EA3Dc,SAAAN,GAAU,OAC9B,IAAIO,KAAKP,GACNQ,eAAe,QAAS,CAAEC,QAAS,UACnCC,cAwDcC,CAAcX,GACzBY,EAAgBR,IAAOJ,GAE7B,GAbsB,SAAAY,GAAa,OAAIR,MAASS,OAAOD,EAAe,OAalEE,CAAgBF,GAAgB,OAAO,EAC3C,GAjBqB,SAAAA,GAAa,OAClCR,MAASW,KAAKH,EAAe,SAAW,EAgBpCI,CAAeJ,GAAgB,OAAO,EAC1C,IAtDwB,SAAC,GAAD,IAAGN,EAAH,EAAGA,SAAUP,EAAb,EAAaA,OAAb,OACxBI,IAAKJ,EAAD,UAAYO,EAAZ,aAAiC,EAqDhCW,CAAkB,CAAEX,WAAUP,WAAW,OAAO,EAErD,IAAMmB,EAAcN,EAAcO,OAvEhB,cA+ElB,QA7DwB,SAAC,GAKpB,IAJLpB,EAII,EAJJA,OACAa,EAGI,EAHJA,cACaZ,EAET,EAFJkB,YACAZ,EACI,EADJA,SAEMc,EAAYtB,EAAc,CAC9BC,SACAC,aACAC,IAAI,GAAD,OAAKK,EAAL,WAECe,EAAUvB,EAAc,CAAEC,SAAQC,aAAYC,IAAI,GAAD,OAAKK,EAAL,SAEvD,OACEM,EAAcU,cAAcF,IAC5BR,EAAcW,eAAeF,GAwCXG,CAAkB,CACpCzB,SACAa,gBACAM,cACAZ,eAxCuB,SAAC,GAIrB,IAHLP,EAGI,EAHJA,OACAa,EAEI,EAFJA,cACaZ,EACT,EADJkB,YAEMO,EAAa3B,EAAc,CAAEC,SAAQC,aAAYC,IAAK,eACtDyB,EAAW5B,EAAc,CAAEC,SAAQC,aAAYC,IAAK,aAE1D,OACEW,EAAcU,cAAcG,IAC5Bb,EAAcW,eAAeG,GAkCNC,CAAmB,CAC1C5B,SACAa,gBACAM,iBAKSU,EAAa,SAAC,GAA4C,IAA1CR,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,QAKtC,MAAO,CAAEQ,YAJWzB,IAAOgB,GAAWD,OAxFZ,uBA4FJW,YAHL,UAAM1B,IAAOgB,GAAWD,OAxFf,WAwFT,cAEVf,IAAOiB,GAASF,OA1FG,cAqGfY,EAAoB,SAACC,GAChC,IACMC,EADeD,EAAbE,SAC6BC,MACnC,SAAAC,GAAO,OAAIA,EAAQC,KAAK3B,gBAAkB4B,OAE5C,OAAOC,QAAQN,IC7GXtD,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC2D,YAAa,CACXC,WAAW,0BAAD,OAA4B5D,EAAMO,QAAQsD,OAAOC,mBAAjD,gDAA2G9D,EAAMO,QAAQsD,OAAOC,mBAAhI,gBAA0J9D,EAAMO,QAAQsD,OAAOC,mBAA/K,qCACVC,eAAgB,UAChBC,cAAe,YAqBbC,EAAqBC,YAAyB,CAClDC,WAAY,SAAAC,GAAK,OAAI9C,IAAK8C,EAAO,CAAC,WAAY,SAAU,aAI1CC,oBACdJ,OACAK,EAFcD,CAGdE,aAzBoB,SAAC5D,GACrB,IAAMC,EAAUd,IACGqB,EAA2BR,EAAtC4B,UAAuB4B,EAAexD,EAAfwD,WAE/B,OACE,gBAAC,IAASK,cAAV,iBACM7D,EADN,CAEEE,UAAWC,YAAK,eACbF,EAAQ+C,aAAenC,EAAa,CACnCL,aACAD,OAAQiD,a,wBCvBZrE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCyE,YAAa,CACXpE,gBAAiBL,EAAMO,QAAQC,QAAQC,KAEvC,UAAW,CACTJ,gBAAiBL,EAAMO,QAAQC,QAAQC,OAG3CiE,KAAM,CACJrE,gBAAiBL,EAAMO,QAAQC,QAAQmE,KACvC,UAAW,CACTtE,gBAAiBL,EAAMO,QAAQC,QAAQmE,WAwB9BC,EAnBK,SAAC,GAGgB,IAFnCC,EAEkC,EAFlCA,SACGC,EAC+B,iBAC1B3B,EAAS2B,EAAT3B,KACFvC,EAAUd,IAEhB,OACE,gBAAC,IAAa8E,YAAd,iBACME,EADN,CAEEjE,UAAWC,YAAKF,EAAQ6D,YAAT,eACZ7D,EAAQ8D,KAAOxB,EAAkBC,OAGnC0B,I,6BCzBD/E,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC+E,QAAS,CACPC,QAAShF,EAAMG,QAAQ,GACvBD,WAAY,GAEd+E,QAAS,CACPC,aAAclF,EAAMG,QAAQ,QA0BjBgF,EAtBQ,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,gBAClBxE,EAAUd,IAChB,EAAqCiD,EAAWqC,GAAxCpC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,YAErB,OACE,gBAACoC,EAAA,EAAD,CAAOxE,UAAWD,EAAQmE,SACxB,gBAACO,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAAU3E,UAAWD,EAAQqE,SACzD3D,IAAK8D,EAAiB,QAAS,KAElC,uBAAKvE,UAAWD,EAAQqE,SACtB,gBAACK,EAAA,EAAD,CAAYC,QAAQ,MAClB,gBAACE,EAAA,EAAD,MADF,IACiBzC,IAGnB,2BACE,gBAACsC,EAAA,EAAD,CAAYC,QAAQ,MAClB,gBAACG,EAAA,EAAD,MADF,IACsBzC,M,oCCTxB0C,EAAqB,CACzBC,mBACAC,kBAGcxB,yBACdC,EACAqB,EAFctB,CAGdE,aA7BsB,SAAC,GAAsC,IAApCqB,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aAWzC,OACE,kBAAC,IAAD,CAAQrC,KAAK,mBACX,kBAAC,IAAD,CAAQA,KAAK,gBAAgBsC,SAZH,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE/B,OADAH,EAAeG,GACRA,KAWL,kBAAC,IAAD,CAAQvC,KAAK,cAAcsC,SARH,SAAC,GAAqB,IAAnBE,EAAkB,EAAlBA,YAE7B,OADAH,EAAaG,GACNA,U,mHCZUC,G,WACnB,aAAe,oBACbC,KAAKC,QAAL,UAAkBC,+BAAlB,YAAgEA,uCAAhE,KACAF,KAAKG,YAAc,K,2CAGrB,WAC2B,OAArBH,KAAKG,aAAsBH,KAAKG,gB,mBAGtC,YAQI,IAPFC,EAOC,EAPDA,OAOC,IANDH,eAMC,MANSD,KAAKC,QAMd,EALDI,EAKC,EALDA,IACApD,EAIC,EAJDA,KACAqD,EAGC,EAHDA,OAGC,IAFDC,eAEC,MAFS,GAET,MADDC,sBACC,SACKC,EAAOT,KACLU,EAAgBC,KAAhBD,YAER,OAAO,IAAIE,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAU,CACdX,SACAC,MACAJ,UACAe,QAAS,IACTV,SACArD,OACAsD,QAAQ,6BAAMA,GAAP,IAAgBU,cAAeC,OACtCf,YAAa,IAAIO,GAAY,SAAkBS,GAC7CV,EAAKN,YAAcgB,MAIvBR,KAAMS,QAAQL,GAASM,MACrB,SAAAC,GACE,IAAMrE,EACgB,kBAAbqE,EAAIrE,KAAoBqE,EAAIrE,KAAOsE,KAAKC,MAAMF,EAAIrE,MAE3D4D,EAAQL,EAAiB,CAAEvD,OAAMsD,QAASe,EAAIf,SAAYtD,MAE5D,SAAAwE,GACE,IAAMC,EAAStG,IAAKqG,EAAO,CAAC,WAAY,WAClCE,EAAUvG,IAAKqG,EAAO,CAAC,WAAY,OAAQ,YAC3CG,EAASxG,IAAKqG,EAAO,CAAC,WAAY,OAAQ,WAEhDX,EADiB,CAAEY,SAAQC,UAASC,qB,KClC/B,O,uKAbb,YAAgC,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,OACnB,OAAKD,EAEE7B,KAAKW,MAAM,CAChBP,OAAQ,MACRC,IAAI,GAAD,OAAK0B,KAAMC,SAAX,YAAuBH,GAC1BvB,OAAQ,CACNwB,YANY,O,GAFU/B,K,gCCGxBkC,G,6MACJ,iCAAAC,EAAA,6DAAsBC,EAAtB,EAAsBA,UAAWlF,EAAjC,EAAiCA,KACzBmF,EAAUpC,KAAKW,MAAM,CACzBP,OAAQ,OACRC,IAAI,GAAD,OAAK0B,KAAMC,SAAX,YAAuBG,EAAvB,YAAoCJ,KAAMM,UAC7C/B,OAAQ,CACNwB,OAAQQ,MAEVrF,KAAK,gBACAA,KART,kBAWSsF,GAAc,CAACH,KAXxB,gD,0HAcA,uCAAAF,EAAA,sDAAuBC,EAAvB,EAAuBA,UAAWlF,EAAlC,EAAkCA,KAC5BuF,EAAM,EACNZ,EAAS,GACTa,EAAW,GAHjB,UAISD,IAAQvF,EAAKyF,OAJtB,0CAMwB1C,KAAKW,MAAM,CAC3BP,OAAQ,OACRC,IAAI,GAAD,OAAK0B,KAAMC,SAAX,YAAuBG,EAAvB,YAAoCJ,KAAMM,UAC7C/B,OAAQ,CAAEwB,OAAQQ,MAClBrF,KAAMA,EAAKuF,KAVnB,OAMYlB,EANZ,OAYMmB,EAASE,KAAKrB,GAZpB,kDAcMM,EAAOe,KAAK1F,EAAKuF,IAdvB,QAiBIA,GAAY,EAjBhB,gDAmBS,CAAEC,SAAUF,GAAcE,GAAWb,WAnB9C,0D,uHAsBA,+CAAAM,EAAA,yDAAoBC,EAApB,EAAoBA,UAAWS,EAA/B,EAA+BA,KAAMC,EAArC,EAAqCA,GAC9BV,EADP,yCACyB,IADzB,OAGMW,GAAW,EACXC,EAAW,GACXN,EAAW,GALjB,WAOSK,EAPT,oBAQiBC,EARjB,kCASc/C,KAAKW,MAAM,CACfP,OAAQ,MACRC,IAAI,GAAD,OAAK0B,KAAMC,SAAX,YAAuBG,EAAvB,YAAoCJ,KAAMM,UAC7C/B,OAAQ,CACNwB,OAAQQ,KACRU,WAAY3H,IAAOuH,GAAMxG,OAAO,eAElCoE,gBAAgB,IAhB1B,6DAkBcR,KAAKW,MAAM,CACfP,OAAQ,MACRC,IAAK0C,EACLvC,gBAAgB,IArB1B,4BAQUc,EARV,KAwBU2B,EAAU7H,IAAKkG,EAAK,CAAC,UAAW,QAAS,IAC/CyB,EAAW3H,IAAKoG,KAAMyB,GAAU,CAAC,OAAQ,OAAQ,IAE3CC,EAAc9H,IAAKkG,EAAK,CAAC,SAC/BmB,EAAQ,uBAAOA,GAAP,aAAoBS,IACtBC,EAAoB/H,IACxB8H,EACA,CAACA,EAAYR,OAAS,EAAG,YACzB,IAGFI,EAAWC,GAAY1H,IAAO8H,GAAmBC,SAASP,GAnC9D,gDAsCSN,GAAcE,IAtCvB,iD,4DArC4B1C,IA+ExBsD,GAAW,SAAAjB,GACf,IAAMkB,EAAalI,IAAKgH,EAAS,CAAC,WAAY,IAAImB,QAChD,SAAAC,GAAM,MAAoB,UAAhBA,EAAOC,QACjB,GAEF,OAAOrI,IAAKkI,EAAY,SAAU,KAG9Bf,GAAgB,SAAAE,GAAQ,OAC5BA,EAASiB,KAAI,SAAAtB,GACX,MAAO,CACLuB,MAAON,GAASjB,GAChBP,GAAIzG,IAAKgH,EAAS,MAClB/F,UAAWjB,IAAKgH,EAAS,YACzB9F,QAASlB,IAAKgH,EAAS,UACvBjF,SAAU/B,IAAKgH,EAAS,WAAY,IACpCwB,UAAWxI,IAAKgH,EAAS,kBAIhB,OAAIH,GCjEJ4B,GA3BG,SAAC,GAAoC,IAAlC1B,EAAiC,EAAjCA,UACb2B,EAAWC,wBAEjBC,qBAAU,WAiBR,OAhBAF,EAASG,YAAa9B,IAEtB,sBAAC,4BAAAD,EAAA,6DACC4B,EAASI,aAAa,IADvB,kBAGsBC,GAAgBC,eAAe,CAChDvC,GAAIM,EACJL,ORjBR,sGQYG,OAGS7E,EAHT,OAOG6G,EAASO,YAAUpH,GAAQ,KAP9B,gDASG6G,EAASQ,YAAS,EAAD,KATpB,QAWCR,EAASI,aAAa,IAXvB,wDAAD,GAcO,WACLC,GAAgBI,YAGjB,KCOUC,GApCS,SAAC,GAAoC,IAAlCrC,EAAiC,EAAjCA,UACnB2B,EAAWC,wBACXU,EAAcC,uBAAY,SAAAxG,GAAK,OACnC9C,IAAK8C,EAAO,CAAC,WAAY,mBAErByG,EAAYD,uBAAY,SAAAxG,GAAK,OACjC9C,IAAK8C,EAAO,CAAC,WAAY,iBAG3B8F,qBAAU,WAoBR,OAnBA,sBAAC,8BAAA9B,EAAA,yDACMyC,EADN,iEAGGb,EAASI,aAAa,IAHzB,SAIiCjC,GAAgB2C,YAAY,CACxDzC,YACAS,KAAM6B,EACN5B,GAAI8B,IAPT,OAISzF,EAJT,OASS2F,EAAuB3F,EAAgBqE,QAC3C,SAAAhF,GAAW,OAAKA,EAAYqF,aAE9BE,EAASgB,YAAgBD,IAZ5B,kDAcGf,EAASQ,YAAS,EAAD,KAdpB,QAgBCR,EAASI,aAAa,IAhBvB,yDAAD,GAmBO,WACLjC,GAAgBsC,YAGjB,CAACI,K,SCpBSI,GAdE,WACf,IAAMtD,EAAQiD,uBAAY,SAAAxG,GAAK,OAAI9C,IAAK8C,EAAO,CAAC,WAAY,aAE5D8F,qBAAU,WACR,GAAKvC,EAAL,CAEA,IAAQE,GAAYF,GAAS,IAArBE,QAEJA,GACFqD,UAAOvD,MAAM5G,EAA8B8G,MAE5C,CAACF,K,6DCjBOwD,GACH,SADGA,GAED,WAFCA,GAGK,iB,oBCSZC,IAAa,mBAChBD,GAAe,IADC,cAEhBA,IAAiB,GAFD,cAGhBA,GAAuB,IAHP,GAMbE,GACG,QADHA,GAEI,SAGGC,GAAwB,SAACC,GACpC,OAAOA,EAAUC,QACf,SAACC,EAAD,OAAQ9B,EAAR,EAAQA,KAAM+B,EAAd,EAAcA,KAAd,oBAAC,gBAA8BD,GAA/B,kBAAqC9B,EAAOyB,GAAcM,OAC1D,CACEC,qBAAiBrH,KA0BjBsH,GAA0B,SAACL,EAAwBM,GACvD,OAAON,EAAU3B,KAAI,gBAAGD,EAAH,EAAGA,KAAH,MAAe,CAAEA,OAAMmC,OAAQD,EAAOlC,QAGhDoC,GAAqB,SAAC,GAIZ,IAHrB3G,EAGoB,EAHpBA,gBACAyG,EAEoB,EAFpBA,OACA3K,EACoB,EADpBA,OAEQ2I,EAAqB3I,EAArB2I,MAAO0B,EAAcrK,EAAdqK,UACA/H,EAA0BqI,EAAjCG,MAAaL,EAAoBE,EAApBF,gBACbpJ,EAAc6C,EAAd7C,UAER,MAAO,CACLsH,MAAM,GAAD,OAAKrG,EAAL,gBAAiBqG,GACtBoC,SAAU1K,IAAOgB,GAAWD,OA9DT,uBA+DnB4J,UAAW,WACXC,SAAU,mBACVrC,WAAW,EACXsC,MAAO,EACP/I,SAAU,CAAC,CAAE0E,GAAI4D,EAAgB5D,GAAIvE,KAAMmI,EAAgBnI,OAC3D6I,QAAST,GAAwBL,EAAWM,KAYnCS,GAAwB,SAAC,GAIb,IAHvBlH,EAGsB,EAHtBA,gBACAyG,EAEsB,EAFtBA,OACA3K,EACsB,EADtBA,OAEQqK,EAAcrK,EAAdqK,UACWgB,EAAyBnH,EAApC7C,UACAiK,EAA2CX,EAA3CW,OAAQC,EAAmCZ,EAAnCY,WAAYlK,EAAuBsJ,EAAvBtJ,UAAWC,EAAYqJ,EAAZrJ,QAEjCY,EAf8B,SACpCsJ,GAEA,OAAOA,EAAiBpJ,MAAK,kBALC,SAKD,EAAGE,QAYJmJ,CADHrL,KAAKJ,EAAQ,iBAAkB,KAIxD,IAAKsL,EACH,MAAO,CACL,CACE3C,MALY,OAMZoC,SAAU1K,IAAOgL,GAAsBjK,OAhGxB,uBAiGf4J,UAAW,WACXC,SAAU,mBACVrC,WAAW,EACXsC,MAAO,EACP/I,SAAU,CAACD,GACXiJ,QAAST,GAAwBL,EAAWM,KAIlD,IAAMe,EAAYrL,IAAOgL,GAAsBjK,OAxGrB,YAyGpBuK,EAAatL,IAAOgB,GAEpBL,EADWX,IAAOiB,GACFN,KAAK2K,EAAY,OACjCC,EAASL,IAAepB,GA1Gd,EA0G+C,EAO/D,OALa0B,MAAMjE,KACjBiE,MAAMC,KAAKC,MAAM/K,EAAO4K,GAAU,IAClC,SAACI,EAAGC,GAAJ,OAAUA,EAAIL,KAGJlD,KAAI,SAAAwD,GACd,IAAMC,EAAO9L,IAAOgB,GAAW+K,IAAIF,EAAK,OACxC,MAAO,CACLvD,MA9Bc,OA+BdoC,SAAS,GAAD,OAAKoB,EAAK/K,OAxHI,cAwHd,YAAyCsK,GACjDV,UAAW,WACXC,SAAU,mBACVrC,WAAW,EACXsC,MAAO,EACP/I,SAAU,CAACD,GACXiJ,QAAST,GAAwBL,EAAWM,QAKrC0B,GAAmB,SAAC5E,GAC/B,IAAM6E,EAAe7E,EAASiB,KAAI,SAAAtB,GAAO,OAAIA,EAAQ2D,YAAUwB,KAAK,MACpE,MAAO,CAAE5F,QAAQ,yBAAD,OAA2B2F,KCvIvC1N,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC+E,QAAQ,6BACH/E,EAAM0N,WAAWC,IADf,IAEL3I,QAAShF,EAAMG,QAAQ,EAAG,GAC1BE,gBAAiBL,EAAMO,QAAQqD,WAAWe,KAC1CiJ,UAAW,eAIFC,GAAkB,SAAC,GAED,IAD7BzI,EAC4B,EAD5BA,gBAEQ7C,EAAuB6C,EAAvB7C,UAAWC,EAAY4C,EAAZ5C,QACb5B,EAAUd,KAChB,EAAqCiD,EAAW,CAAER,YAAWC,YAArDQ,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,YACrB,OACE,yBAAKpC,UAAWD,EAAQmE,SACtB,kBAACO,EAAA,EAAD,CAAYC,QAAQ,MAAMvC,GAC1B,kBAAC8K,GAAA,EAAD,CAAKC,GAAI,CAAEC,GAAI,IACb,kBAAC1I,EAAA,EAAD,CAAYC,QAAQ,MAAMtC,M,4CCf5BnD,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCiO,MAAO,CACLC,MAAO,OACPC,OAAQnO,EAAMG,QAAQ,EAAG,EAAG,EAAG,IAEjCiO,OAAQ,CACNpJ,QAAShF,EAAMG,QAAQ,IAAK,GAC5BkO,cAAe,QAEjBC,YAAa,CACXJ,MAAO,OACPK,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UAEdC,SAAU,CACRH,QAAS,OACTE,WAAY,UAEdE,SAAU,CACR,eAAgB,CACdtO,gBAAiBL,EAAMO,QAAQC,QAAQC,WAShCmO,GAAmB,SAAC,GAEa,IAD5ClC,EAC2C,EAD3CA,iBAEM9L,EAAUd,KAChB,EAAkC+O,eAA1BhD,EAAR,EAAQA,OAAQiD,EAAhB,EAAgBA,cACVC,EAAQzN,KAAKuK,EAAQ,uBAAyB,GAOpD,OACE,oCACE,kBAACvG,EAAA,EAAD,CAAYC,QAAQ,MAApB,8BACA,kBAACyJ,GAAA,EAAD,CACEC,YAAY,WACZF,MAAOA,EACPG,WAAS,EACTC,SAZe,SAACC,EAAOC,GAC3B,IAAMC,EAAU5C,EAAiBpJ,MAAK,SAAAoI,GAAI,OAAIA,EAAK3D,KAAOsH,KAC1DP,EAAc,kBAAmBQ,IAW7B1O,QAAS,CAAE2O,KAAM3O,EAAQqN,QAExBvB,EAAiB9C,KAAI,SAAA8B,GAAI,OACxB,kBAAC8D,GAAA,EAAD,CACET,MAAOrD,EAAK3D,GACZnH,QAAS,CACP2O,KAAM3O,EAAQwN,OACdqB,MAAO7O,EAAQ0N,YACfK,SAAU/N,EAAQ+N,UAEpBvN,IAAKsK,EAAK3D,IAEV,kBAACzC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,eAC5BkG,EAAKlI,MAER,kBAAC8B,EAAA,EAAD,CACEC,QAAQ,YACR3E,QAAS,CAAE2O,KAAM3O,EAAQ8N,WAEzB,kBAAC,KAAD,CAA0BgB,SAAS,UACnC,kBAAC5B,GAAA,EAAD,CAAKC,GAAI,CAAE4B,GAAI,GAAK3B,GAAI,Md6BI,SAAC,GAGpB,IAFrB4B,EAEoB,EAFpBA,cACAC,EACoB,EADpBA,kBAEA,MAAM,GAAN,OAAUD,EAAgBC,EAA1B,YchCeC,CAA2BpE,Y,4CCtEtC5L,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC+P,UAAW,CACTC,UAAWhQ,EAAMG,QAAQ,KAE3BsP,MAAM,cACJjK,MAAOxF,EAAMO,QAAQC,QAAQyP,MAC1BjQ,EAAM0N,WAAWC,IAEtBuC,MAAM,6BACDlQ,EAAM0N,WAAWyC,IADjB,IAEHnL,QAAShF,EAAMG,QAAQ,EAAG,WAejBiQ,GAAY,SAACzP,GACxB,IAAM0P,EAAevQ,KAEnB0D,EAQE7C,EARF6C,KACA+B,EAOE5E,EAPF4E,QAFF,EASI5E,EANF2P,mBAHF,MAGgB,GAHhB,EAIEb,EAKE9O,EALF8O,MACAV,EAIEpO,EAJFoO,MACAwB,EAGE5P,EAHF4P,SACApB,EAEExO,EAFFwO,SAPF,EASIxO,EADFC,eARF,MAQY,GARZ,EAWA,OACE,kBAAC4P,GAAA,EAAD,CAAaD,SAAUA,GACrB,kBAACE,GAAA,EAAD,CAAWjL,MAAM,YAAY3E,UAAWwP,EAAaZ,OAClDA,GAEH,kBAAC,KAAD,CACEjM,KAAMA,EACN+B,QAASA,EACT+K,YAAaA,EACbvB,MAAOA,EACPI,SAAUA,EACVvO,QAAS,CAAE2O,KAAMzO,YAAKuP,EAAaN,UAAWnP,EAAQmP,YACtDW,WAAY,CACV9P,QAAS,CACPsP,MAAOpP,YAAKuP,EAAaH,MAAOtP,EAAQsP,aCvD9CpQ,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC2Q,MAAM,gBACD3Q,EAAM0N,WAAWkD,c,sBCElB9Q,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC+E,QAAS,CACP,iDAAkD,CAChDwJ,QAAS,SAGbkB,MAAO,CACL,KAAK,cACHjK,MAAOxF,EAAMO,QAAQC,QAAQyP,MAC1BjQ,EAAM0N,WAAWC,KAGxBkD,OAAO,6BACF7Q,EAAM0N,WAAWyC,IADhB,IAEJnL,QAAShF,EAAMG,QAAQ,EAAG,OAE5B2Q,KAAK,gBACA9Q,EAAM0N,WAAWyC,QAeXY,GAAS,SAACpQ,GACrB,IAAM0P,EAAevQ,KAEnB0D,EAQE7C,EARF6C,KACAuL,EAOEpO,EAPFoO,MACAI,EAMExO,EANFwO,SACAM,EAKE9O,EALF8O,MACAlK,EAIE5E,EAJF4E,QACAgL,EAGE5P,EAHF4P,SACAtJ,EAEEtG,EAFFsG,QAPF,EASItG,EADFC,eARF,MAQY,GARZ,EAWA,OACE,kBAAC4P,GAAA,EAAD,CAAaD,SAAUA,EAAU3P,QAAS,CAAE2O,KAAMc,EAAatL,UAC7D,kBAAC0L,GAAA,EAAD,CAAW5P,UAAWwP,EAAaZ,OAAQA,GAC3C,kBAAC,KAAD,CACEjM,KAAMA,EACN5C,QAAS,CAAE2O,KAAMzO,YAAKuP,EAAaQ,OAAQjQ,EAAQiQ,SACnD9B,MAAOA,EACPI,SAAUA,EACVM,MAAM,GACNlK,QAASA,EACTyL,UAAW,CACTC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,QAEdE,mBAAoB,OAGtB,kBAACC,GAAA,EAAD,CACE1Q,QAAS,CAAE2O,KAAMzO,YAAKuP,EAAaS,KAAMlQ,EAAQkQ,OACjD/B,MAAM,IAEN,qCAED9H,EAAQ2C,KAAI,SAAC2H,GAAD,OACX,kBAACD,GAAA,EAAD,CACElQ,IAAKmQ,EACLxC,MAAOwC,EACP3Q,QAAS,CAAE2O,KAAMzO,YAAKuP,EAAaS,KAAMlQ,EAAQkQ,QAEhDS,S,sBChFPzR,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCyP,MAAM,gBACDzP,EAAM0N,WAAWyC,IAEtBqB,SAAU,OAaCC,GAAW,SAAC9Q,GACvB,IAAM0P,EAAevQ,KAEnB0D,EAOE7C,EAPF6C,KACA+M,EAME5P,EANF4P,SACAmB,EAKE/Q,EALF+Q,QACAvC,EAIExO,EAJFwO,SACAM,EAGE9O,EAHF8O,MALF,EAQI9O,EAFF6E,aANF,MAMU,UANV,IAQI7E,EADFC,eAPF,MAOY,GAPZ,EASA,OACE,kBAAC4P,GAAA,EAAD,CAAaD,SAAUA,GACrB,kBAACoB,GAAA,EAAD,CACE/Q,QAAS,CAAE6O,MAAO3O,YAAKuP,EAAaZ,MAAO7O,EAAQ6O,QACnDmC,QACE,kBAAC,KAAD,CACEhR,QAAS,CAAE2O,KAAMzO,YAAKuP,EAAamB,SAAU5Q,EAAQ4Q,WACrDE,QAASA,EACTvC,SAAUA,EACV3L,KAAMA,EACNgC,MAAOA,IAGXiK,MAAOA,MC5CT3P,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC2Q,MAAM,gBACD3Q,EAAM0N,WAAWkD,cCDlBiB,IAAU,mBACb1G,IJQwB,SAAC,GAA8C,IAA5C2G,EAA2C,EAA3CA,SACtBlR,EAAUd,KACR6J,EAAkCmI,EAAlCnI,KAAMoI,EAA4BD,EAA5BC,OAAQpB,EAAoBmB,EAApBnB,MAAOJ,EAAauB,EAAbvB,SAC7B,EAAiC1B,eAAzBhD,EAAR,EAAQA,OAAQmG,EAAhB,EAAgBA,aAEhB,OACE,kBAAClE,GAAA,EAAD,CAAKC,GAAI,CAAEQ,QAAS,OAAQ0D,cAAe,SAAUC,GAAI,IACvD,kBAAC,GAAD,CACE1O,KAAMmG,EACNpE,QAAQ,WACR+K,YAAY,GACZb,MAAOsC,EACPhD,MAAOlD,EAAOlC,GACdwF,SAAU6C,EACVzB,SAAUA,IAEX7M,QAAQiN,IACP,kBAACwB,GAAA,EAAD,CAAgBtR,UAAWD,EAAQ+P,OAAQA,OI1BnC,cAEbxF,IDO0B,SAAC,GAA8C,IAA5C2G,EAA2C,EAA3CA,SACxBlR,EAAUd,KACR6Q,EAAkCmB,EAAlCnB,MAAOoB,EAA2BD,EAA3BC,OAAQxB,EAAmBuB,EAAnBvB,SAAU5G,EAASmI,EAATnI,KACjC,EAAiCkF,eAAzBhD,EAAR,EAAQA,OAAQmG,EAAhB,EAAgBA,aAEhB,OACE,kBAAClE,GAAA,EAAD,CAAKC,GAAI,CAAEQ,QAAS,OAAQ0D,cAAe,SAAUC,GAAI,IACvD,kBAAC,GAAD,CACER,QAAS7F,EAAOlC,GAChBwF,SAAU6C,EACVxO,KAAMmG,EACNnE,MAAM,UACNiK,MAAOsC,EACPxB,SAAUA,IAEX7M,QAAQiN,IACP,kBAACwB,GAAA,EAAD,CAAgBtR,UAAWD,EAAQ+P,OAAQA,OCzBnC,cAGbxF,ICA0B,SAAC,GAA8C,IAA5C2G,EAA2C,EAA3CA,SACtBnI,EAAgDmI,EAAhDnI,KAAMgH,EAA0CmB,EAA1CnB,MAAOoB,EAAmCD,EAAnCC,OAAQxB,EAA2BuB,EAA3BvB,SAA7B,EAAwDuB,EAAjB7K,eAAvC,MAAiD,GAAjD,EACA,EAAiC4H,eAAzBhD,EAAR,EAAQA,OAAQmG,EAAhB,EAAgBA,aAEhB,OACE,kBAAClE,GAAA,EAAD,CAAKC,GAAI,CAAEQ,QAAS,OAAQ0D,cAAe,SAAUC,GAAI,IACvD,kBAAC,GAAD,CACE1O,KAAMmG,EACNoF,MAAOlD,EAAOlC,GACdwF,SAAU6C,EACVvC,MAAOsC,EACPxM,QAAQ,WACRgL,SAAUA,EACVtJ,QAASA,IAEVvD,QAAQiN,IAAU,kBAAC7C,GAAA,EAAD,CAAKC,GAAI,CAAEC,GAAI,IAAM2C,ODlB9B,GAUHyB,GAAS,SAAC,GAEuB,IAD5C7G,EAC2C,EAD3CA,UAEA,OACE,oCACGA,EAAU3B,KAAI,SAAAkI,GACb,IAAMO,EAAYR,GAAWC,EAASpG,MACtC,OAAO,kBAAC2G,EAAD,CAAWjR,IAAK0Q,EAASnI,KAAMmI,SAAUA,SEkElD7N,GAAqBC,YAAyB,CAClDmE,UAAW,SAAAjE,GAAK,OAAI9C,IAAK8C,EAAO,uBAChClD,OAAQ,SAAAkD,GAAK,OAAI9C,IAAK8C,EAAO,oBAC7BkO,UAAW,SAAAlO,GAAK,OAAI9C,IAAK8C,EAAO,yBAG5BuB,GAAqB,CACzByE,iBACAI,aACA+H,qBAMclO,qBACdJ,GACA0B,GAFctB,CAGdE,aA9EkB,SAAC,GASc,IARjC8D,EAQgC,EARhCA,UACAnH,EAOgC,EAPhCA,OACAkE,EAMgC,EANhCA,gBACAgF,EAKgC,EALhCA,aACAI,EAIgC,EAJhCA,SACA+H,EAGgC,EAHhCA,gBACAC,EAEgC,EAFhCA,OACAF,EACgC,EADhCA,UAEM/G,EAAYjK,IAAKJ,EAAQ,YAAa,IAEtCuR,EADmBnR,IAAKJ,EAAQ,iBAAkB,IACTuI,QAC7C,SAAAhF,GAAW,OAAIA,EAAYjB,OAASC,OAEhCiP,EAAgBpH,GAAsBC,GAEtCoH,EAAQ,uCAAG,WAAO9G,GAAP,iBAAAzD,EAAA,sEAEbgC,GAAa,GACPjH,EAAO4I,GAAmB,CAAE3G,kBAAiByG,SAAQ3K,WAH9C,SAIiBiH,GAAgByK,cAAc,CAC1DvK,YACAlF,SANW,OAIP0P,EAJO,OAQbN,EAAgBM,GAChBL,IACApI,GAAa,GAVA,kDAYbA,GAAa,GACbI,EAAS,EAAD,IAbK,0DAAH,sDAiBd,OACE,kBAACsD,GAAA,EAAD,CAAKC,GAAI,CAAEQ,QAAS,OAAQ0D,cAAe,WACzC,kBAAC,KAAD,CAAQS,cAAeA,EAAeC,SAAUA,GAC9C,kBAAC,KAAD,KACE,kBAAC,GAAD,CAAkBjG,iBAAkB+F,IACpC,kBAAC,GAAD,CAAiBrN,gBAAiBA,IAClC,kBAAC0N,GAAA,EAAD,MACA,kBAAChF,GAAA,EAAD,CAAKC,GAAI,CAAEC,GAAI,IACb,kBAAC,GAAD,CAAQzC,UAAWA,KAErB,kBAACwH,GAAA,EAAD,CACErH,KAAK,SACLlG,MAAM,UACNwN,kBAAgB,EAChBC,WAAS,EACT1N,QAAQ,YACR2N,SAAUZ,GANZ,0B,wFCxDGa,GAAgB,WAC3B,MAAgDtE,eAAxChD,EAAR,EAAQA,OAAQmG,EAAhB,EAAgBA,aAAclD,EAA9B,EAA8BA,cAExBsE,EAAmB,SAACC,GAAD,OAAmB,SAACC,GAC3CxE,EAAcuE,EAAO9R,IAAO+R,GAAMhR,OXdJ,iBWiBhC,OACE,6BACE,kBAACqP,GAAA,EAAD,CACEC,QACE,kBAAC2B,GAAA,EAAD,CACE/P,KAAK,SACLkO,QAAS7F,EAAOW,OAChB2C,SAAU6C,EACVxM,MAAM,YAGViK,MAAM,WAGR,kBAAC+D,GAAA,EAAD,CAAUC,GAAI5H,EAAOW,QACnB,6BACE,kBAACkH,GAAA,EAAD,CACElQ,KAAK,aACLuL,MAAOlD,EAAOY,WACd0C,SAAU6C,GAEV,kBAACL,GAAA,EAAD,CACE5C,MAAM,QACN6C,QAAS,kBAAC+B,GAAA,EAAD,CAAOnO,MAAM,YACtBiK,MAAM,UAER,kBAACkC,GAAA,EAAD,CACE5C,MAAM,SACN6C,QAAS,kBAAC+B,GAAA,EAAD,CAAOnO,MAAM,YACtBiK,MAAM,aAIZ,kBAACmE,GAAA,EAAD,CAAMC,WAAS,EAACrF,eAAe,iBAC7B,kBAAC,KAAD,CAAyBsF,MAAOC,MAC9B,kBAAC,KAAD,CACEC,gBAAc,EACdC,aAAa,WACb3R,OXvDoB,aWwDpB6L,OAAO,SACPsB,MAAM,aACNV,MAAO,IAAIrN,KAAKmK,EAAOtJ,WACvB4M,SAAUiE,EAAiB,eAE7B,kBAAC,KAAD,CACEY,gBAAc,EACdC,aAAa,WACb3R,OXhEoB,aWiEpB6L,OAAO,SACPsB,MAAM,WACNV,MAAO,IAAIrN,KAAKmK,EAAOrJ,SACvB2M,SAAUiE,EAAiB,kBCqBnCnP,GAAqBC,YAAyB,CAClDmE,UAAW,SAAAjE,GAAK,OAAI9C,IAAK8C,EAAO,uBAChClD,OAAQ,SAAAkD,GAAK,OAAI9C,IAAK8C,EAAO,oBAC7B8P,SAAU,SAAA9P,GAAK,OAAI9C,IAAK8C,EAAO,sBAC/BkO,UAAW,SAAAlO,GAAK,OAAI9C,IAAK8C,EAAO,yBAG5BuB,GAAqB,CACzByE,iBACAI,aACA+H,qBAMclO,qBACdJ,GACA0B,GAFctB,CAGdE,aAlFwB,SAAC,GAUQ,IATjC8D,EASgC,EAThCA,UACAnH,EAQgC,EARhCA,OACAkE,EAOgC,EAPhCA,gBACAgF,EAMgC,EANhCA,aACAI,EAKgC,EALhCA,SACA+H,EAIgC,EAJhCA,gBACA2B,EAGgC,EAHhCA,SACA1B,EAEgC,EAFhCA,OACAF,EACgC,EADhCA,UAEMI,EZd4B,SAAC,GAId,IAHrBwB,EAGoB,EAHpBA,SACA9O,EAEoB,EAFpBA,gBAGQmG,EADY,EADpBrK,OAEQqK,UACAhJ,EAAc6C,EAAd7C,UACF+Q,EAAO/R,IAAOgB,GAAWD,OA9BC,cA+B1B6R,EAAU7S,KAAK4S,EAAU,2BAA4B,IACrDE,EAAQ9S,KAAK+S,KAAM,CAAC,OAAQ,aAAc,SAAU,IAC1D,OAAO,6BACF/I,GAAsBC,IAD3B,IAEES,MAAOmI,EACPG,MAAOF,EACP5H,QAAQ,EACRC,WAAYpB,GACZ9I,UAAW+Q,EACX9Q,QAAS8Q,IYHWiB,CAAqB,CACzCL,WACA9O,kBACAlE,WAGIyR,EAAQ,uCAAG,WAAO9G,GAAP,qBAAAzD,EAAA,sEAEbgC,GAAa,GACPjH,EAAOmJ,GAAsB,CAAElH,kBAAiByG,SAAQ3K,WAHjD,SAIsBiH,GAAgBqM,eAAe,CAChEnM,YACAlF,SANW,gBAILwF,EAJK,EAILA,SAAUb,EAJL,EAIKA,OAIb2M,IAAS3M,IAAS0C,EAAS+C,GAAiBzF,IACjDyK,EAAgB5J,GAChB6J,IACApI,GAAa,GAXA,kDAabA,GAAa,GACbI,EAAS,EAAD,IAdK,0DAAH,sDAkBd,OACE,kBAACsD,GAAA,EAAD,CAAKC,GAAI,CAAEQ,QAAS,OAAQ0D,cAAe,WACzC,kBAAC,KAAD,CAAQS,cAAeA,EAAeC,SAAUA,GAC9C,kBAAC,KAAD,KACE,kBAAC7E,GAAA,EAAD,CAAKC,GAAI,CAAE2G,GAAI,IACb,kBAACpP,EAAA,EAAD,CAAYC,QAAQ,MAApB,0BAEF,kBAAC,GAAD,CAAiBH,gBAAiBA,IAClC,kBAAC0N,GAAA,EAAD,MACA,kBAAChF,GAAA,EAAD,CAAKC,GAAI,CAAEmE,GAAI,IACb,kBAAC,GAAD,OAEF,kBAACa,GAAA,EAAD,CACErH,KAAK,SACLlG,MAAM,UACNwN,kBAAgB,EAChBC,WAAS,EACT1N,QAAQ,YACR2N,SAAUZ,GANZ,0BClEJrO,GAAqBC,YAAyB,CAClDgQ,SAAU,SAAA9P,GAAK,OAAI9C,KAAK8C,EAAO,CAAC,WAAY,gBAG9BC,qBAAQJ,GAARI,CACdE,aAZyB,SAAC5D,GAC1B,IAAQyE,EAAsCzE,EAAtCyE,gBAAiB8O,EAAqBvT,EAArBuT,SAAU1B,EAAW7R,EAAX6R,OAC7BmC,EAAgBT,EAAWU,GAAoBC,GAErD,OAAO,gBAACF,EAAD,CAAevP,gBAAiBA,EAAiBoN,OAAQA,Q,2GCT5D1S,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC8U,OAAQ,CACNlR,WAAY5D,EAAMO,QAAQwU,OAAOC,OAEnCC,QAAS,CACPjQ,QAAShF,EAAMG,QAAQ,QAId+U,GAAS,SAACvU,GACrB,IACwBwU,EAMpBxU,EANFyU,qBACwBC,EAKtB1U,EALF2U,uBAC2BC,EAIzB5U,EAJF6U,0BAEA3Q,GAEElE,EAHF8U,aAGE9U,EAFFkE,UACGC,EANL,YAOInE,EAPJ,IASMC,EAAUd,KAEhB,OACE,uCAAKe,UAAWD,EAAQkU,QAAYhQ,GAClC,kBAACuQ,EAAD,MACA,yBAAKxU,UAAWD,EAAQqU,SACtB,kBAACE,EAAD,MACA,kBAACI,EAAD,OAED1Q,IC7BMwQ,GAAgB,SAAC1U,GAC5B,IAAQ+U,EAA+C/U,EAA/C+U,oBAAqBC,EAA0BhV,EAA1BgV,SAAUC,EAAgBjV,EAAhBiV,YAUvC,OARA1L,qBAAU,WACJyL,IACFD,IACAE,GAAY,MAGb,CAACD,IAEG,+BCNIE,GAAkB,WAC7B,MAAgCC,oBAAS,GAAzC,oBAAOH,EAAP,KAAiBC,EAAjB,KACMG,EAAuBC,YAAab,IAAa,iBAAO,CAC5D3C,OAAQ,kBAAMoD,GAAY,QAGtBK,EAAyBD,YAAaX,IAAe,iBAAO,CAChEM,WACAC,kBAGF,OACE,kBAAC,IAAD,CACEM,gBAAiBhB,GACjBE,qBAAsBW,EACtBT,uBAAwBW,KCUxBnW,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC6T,UAAW,CACTsC,UAAW,QACXC,WAAYpW,EAAM0N,WAAW0I,WAAWC,UAE1CC,QAAS,CACPC,OAAQ,oBACRlW,gBAAiBL,EAAMO,QAAQwU,OAAOC,WAiEpC/Q,GAAqBC,YAAyB,CAClDhD,OAAQ,SAAAkD,GAAK,OAAI9C,IAAK8C,EAAO,CAAC,WAAY,YAC1CkO,UAAW,SAAAlO,GAAK,OAAI9C,IAAK8C,EAAO,CAAC,WAAY,eAC7CoS,aAAc,SAAApS,GAAK,OAAI9C,IAAK8C,EAAO,CAAC,WAAY,oBAGlCC,4BACdJ,QACAK,EAFcD,CAGdE,aA/De,SAAC,GAK8B,IAJ9CrD,EAI6C,EAJ7CA,OACAmH,EAG6C,EAH7CA,UACAiK,EAE6C,EAF7CA,UACAkE,EAC6C,EAD7CA,aAEM5V,EAAUd,KAEhBiK,GAAU,CAAE1B,cACZqC,GAAgB,CAAErC,cAClB4C,KAIA,OAAIwJ,IAASvT,KAAYoR,EAAkB,qCAGzC,kBAAC,IAAD,CACEmE,IAAI,MACJC,SAAUpE,EACVqE,OAAQ,kBAAC,SAAD,CAAQC,QAAM,EAAClL,KAAK,aAAalG,MAAM,sBAC/C3E,UAAWC,YAAKF,EAAQiT,UAAT,eACZjT,EAAQ0V,QAAUhE,KAGrB,kBAACjN,EAAA,EAAD,CAAOwR,UAAW,GAChB,kBAAC,IAAD,CAAW1T,KAAMqT,GACf,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEM,uBAAwBtS,EACxBuS,sBAAuBrW,EACvBsW,aACE1V,IAAKJ,EAAQ,4B7B/EK,K6BkFtB,kBAAC,IAAD,CAAc+V,gBAvBE,eAwBhB,kBAAC,EAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAcC,qBAAsBtS,IACpC,kBAAC,IAAD,CACEuS,iBAAe,EACfC,iBAAkBjS,IAEpB,kBAAC,GAAD","file":"static/js/16.fd706014.chunk.js","sourcesContent":["// @flow\nimport * as React from 'react';\nimport { WeekView } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles, alpha } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n  cell: {\n    paddingTop: theme.spacing(1),\n  },\n  today: {\n    backgroundColor: alpha(theme.palette.primary.main, 0.16),\n  },\n}));\n\nconst DayScaleCell = (props: Object): React.Element<'div'> => {\n  const classes = useStyles();\n  const { today } = props;\n\n  return (\n    <WeekView.DayScaleCell\n      {...props}\n      className={clsx(classes.cell, {\n        [classes.today]: today,\n      })}\n    />\n  );\n};\n\nexport default DayScaleCell;\n","// @flow\nimport _get from 'lodash/get';\nimport moment from 'moment';\nimport { BUSY_APPOINTMENT_NAME } from '../../shared/Consts';\n\nexport const DEFAULT_DURATION = 60;\nexport const CALENDAR_CONFIG_FIELDS =\n  'times,times.*,questions,questions.*,services, services.*,services.items.*,actions,actions.*,title';\nexport const ERROR_MESSAGES = {\n  getTimeConfig: 'Something went wrong',\n};\n\nconst DATE_FORMAT = 'MM-DD-YYYY';\nconst MOMENT_FORMAT = `${DATE_FORMAT} HH:mm:ss`;\nconst DISPLAY_DATE_FORMAT = 'dddd, MMMM DD, YYYY';\nconst DISPLAY_TIME_FORMAT = 'hh:mm A';\n\nconst mapDateToName = dateString =>\n  new Date(dateString)\n    .toLocaleString('en-us', { weekday: 'short' })\n    .toLowerCase();\n\nconst getTimeConfig = ({ config, dateString, key }) => {\n  const fieldConfig = _get(config, key) || '';\n  return moment(`${dateString} ${fieldConfig}`, MOMENT_FORMAT);\n};\n\nconst isActivatedMoment = ({ dateName, config }) =>\n  _get(config, `${dateName}Active`) || false;\n\nconst isAvailableMoment = ({\n  config,\n  currentMoment,\n  currentDate: dateString,\n  dateName,\n}) => {\n  const startDate = getTimeConfig({\n    config,\n    dateString,\n    key: `${dateName}Start`,\n  });\n  const endDate = getTimeConfig({ config, dateString, key: `${dateName}End` });\n\n  return (\n    currentMoment.isSameOrAfter(startDate) &&\n    currentMoment.isSameOrBefore(endDate)\n  );\n};\n\nconst isMomentInBreaking = ({\n  config,\n  currentMoment,\n  currentDate: dateString,\n}) => {\n  const breakStart = getTimeConfig({ config, dateString, key: 'breakStart' });\n  const breakEnd = getTimeConfig({ config, dateString, key: 'breakEnd' });\n\n  return (\n    currentMoment.isSameOrAfter(breakStart) &&\n    currentMoment.isSameOrBefore(breakEnd)\n  );\n};\n\nconst isMomentInPast = currentMoment =>\n  moment().diff(currentMoment, 'hours') > 0;\n\nconst isMomentInToday = currentMoment => moment().isSame(currentMoment, 'day');\n\ntype isCellActiveParams = {\n  dateString: string,\n  config: Object,\n};\nexport const isCellActive = ({\n  dateString,\n  config,\n}: isCellActiveParams): boolean => {\n  const dateName = mapDateToName(dateString);\n  const currentMoment = moment(dateString);\n\n  if (isMomentInToday(currentMoment)) return false;\n  if (isMomentInPast(currentMoment)) return false;\n  if (!isActivatedMoment({ dateName, config })) return false;\n\n  const currentDate = currentMoment.format(DATE_FORMAT);\n\n  const isAvailable = isAvailableMoment({\n    config,\n    currentMoment,\n    currentDate,\n    dateName,\n  });\n  if (!isAvailable) return false;\n\n  const isBreakingMoment = isMomentInBreaking({\n    config,\n    currentMoment,\n    currentDate,\n  });\n  return !isBreakingMoment;\n};\n\nexport const formatTime = ({ startDate, endDate }: Object): Object => {\n  const displayDate = moment(startDate).format(DISPLAY_DATE_FORMAT);\n  const displayTime = `${moment(startDate).format(\n    DISPLAY_TIME_FORMAT,\n  )} - ${moment(endDate).format(DISPLAY_TIME_FORMAT)}`;\n  return { displayDate, displayTime };\n};\n\nexport const getAppointmentTypeDuration = ({\n  numberOfSlots,\n  slotLengthMinutes,\n}: Object): string => {\n  return `${numberOfSlots * slotLengthMinutes} minutes`;\n};\n\nexport const isBusyAppointment = (data: Object): boolean => {\n  const { services } = data;\n  const busyAppointmentType = services.find(\n    service => service.name.toLowerCase() === BUSY_APPOINTMENT_NAME,\n  );\n  return Boolean(busyAppointmentType);\n};\n","// @flow\nimport * as React from 'react';\nimport type { AbstractComponent } from 'react';\nimport { WeekView } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash/get';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { isCellActive } from './helpers';\n\nconst useStyles = makeStyles(theme => ({\n  disableCell: {\n    background: `linear-gradient(-45deg,${theme.palette.action.disabledBackground} 10%,transparent 10%,transparent 50%,${theme.palette.action.disabledBackground} 50%,${theme.palette.action.disabledBackground} 60%,transparent 60%,transparent)`,\n    backgroundSize: '8px 8px',\n    pointerEvents: 'none',\n  },\n}));\n\nconst TimeTableCell = (props: Object): React.Element<'div'> => {\n  const classes = useStyles();\n  const { startDate: dateString, timeConfig } = props;\n\n  return (\n    <WeekView.TimeTableCell\n      {...props}\n      className={clsx({\n        [classes.disableCell]: !isCellActive({\n          dateString,\n          config: timeConfig,\n        }),\n      })}\n    />\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  timeConfig: state => _get(state, ['calendar', 'config', 'times']),\n});\n\ntype PropsWithoutRedux = {};\nexport default (connect(\n  structuredSelector,\n  undefined,\n)(withErrorBoundary(TimeTableCell)): AbstractComponent<PropsWithoutRedux>);\n","// @flow\nimport * as React from 'react';\nimport { Appointments } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { isBusyAppointment } from './helpers';\n\nconst useStyles = makeStyles(theme => ({\n  appointment: {\n    backgroundColor: theme.palette.primary.main,\n\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  busy: {\n    backgroundColor: theme.palette.primary.gray,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.gray,\n    },\n  },\n}));\n\nconst Appointment = ({\n  children,\n  ...restProps\n}: Object): React.Element<'div'> => {\n  const { data } = restProps;\n  const classes = useStyles();\n\n  return (\n    <Appointments.Appointment\n      {...restProps}\n      className={clsx(classes.appointment, {\n        [classes.busy]: isBusyAppointment(data),\n      })}\n    >\n      {children}\n    </Appointments.Appointment>\n  );\n};\n\nexport default Appointment;\n","// @flow\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport _get from 'lodash/get';\nimport Typography from '@material-ui/core/Typography';\nimport { formatTime } from './helpers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  AccessTime as AccessTimeIcon,\n  Event as EventIcon,\n} from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    padding: theme.spacing(2),\n    paddingTop: 0,\n  },\n  section: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst TooltipContent = ({ appointmentData }: Object): React.Element<'div'> => {\n  const classes = useStyles();\n  const { displayDate, displayTime } = formatTime(appointmentData);\n\n  return (\n    <Paper className={classes.wrapper}>\n      <Typography variant=\"h3\" color=\"primary\" className={classes.section}>\n        {_get(appointmentData, 'title', '')}\n      </Typography>\n      <div className={classes.section}>\n        <Typography variant=\"h5\">\n          <EventIcon /> {displayDate}\n        </Typography>\n      </div>\n      <div>\n        <Typography variant=\"h5\">\n          <AccessTimeIcon /> {displayTime}\n        </Typography>\n      </div>\n    </Paper>\n  );\n};\nexport default TooltipContent;\n","// @flow\nimport React from 'react';\nimport type { AbstractComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { setEndOfWeek, setStartOfWeek } from './redux/Actions';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\n\nconst IntegratedDates = ({ setStartOfWeek, setEndOfWeek }) => {\n  const startViewDateComputed = ({ startViewDate }) => {\n    setStartOfWeek(startViewDate);\n    return startViewDate;\n  };\n\n  const endViewDateComputed = ({ endViewDate }) => {\n    setEndOfWeek(endViewDate);\n    return endViewDate;\n  };\n\n  return (\n    <Plugin name=\"IntegratedDates\">\n      <Getter name=\"startViewDate\" computed={startViewDateComputed} />\n      <Getter name=\"endViewDate\" computed={endViewDateComputed} />\n    </Plugin>\n  );\n};\n\ntype PropsWithoutRedux = {};\n\nconst mapDispatchToProps = {\n  setStartOfWeek,\n  setEndOfWeek,\n};\n\nexport default (connect(\n  undefined,\n  mapDispatchToProps,\n)(withErrorBoundary(IntegratedDates)): AbstractComponent<PropsWithoutRedux>);\n","import axios from 'axios';\nimport _get from 'lodash/get';\nimport { PLACEHOLDER_AUTHORIZATION } from './constants';\n\nexport default class Request {\n  constructor() {\n    this.baseURL = `${process.env.REACT_APP_YOU_BOOK_ME_ENDPOINT}/${process.env.REACT_APP_YOU_BOOK_ME_ACCOUNT_ID}/`;\n    this.cancelToken = null;\n  }\n\n  cancel() {\n    if (this.cancelToken !== null) this.cancelToken();\n  }\n\n  axios({\n    method,\n    baseURL = this.baseURL,\n    url,\n    data,\n    params,\n    headers = {},\n    needResHeaders = false,\n  }) {\n    const self = this;\n    const { CancelToken } = axios;\n\n    return new Promise((resolve, reject) => {\n      const options = {\n        method,\n        url,\n        baseURL,\n        timeout: 30000,\n        params,\n        data,\n        headers: { ...headers, Authorization: PLACEHOLDER_AUTHORIZATION },\n        cancelToken: new CancelToken(function executor(c) {\n          self.cancelToken = c;\n        }),\n      };\n\n      axios.request(options).then(\n        res => {\n          const data =\n            typeof res.data === 'object' ? res.data : JSON.parse(res.data);\n\n          resolve(needResHeaders ? { data, headers: res.headers } : data);\n        },\n        error => {\n          const status = _get(error, ['response', 'status']);\n          const message = _get(error, ['response', 'data', 'message']);\n          const errors = _get(error, ['response', 'data', 'errors']);\n          const errorRes = { status, message, errors };\n          reject(errorRes);\n        },\n      );\n    });\n  }\n}\n","import Request from './Request';\nimport { PATHS } from './constants';\n\nclass ProfilesService extends Request {\n  getProfileById({ id, fields }) {\n    if (!id) return {};\n\n    return this.axios({\n      method: 'GET',\n      url: `${PATHS.PROFILES}/${id}`,\n      params: {\n        fields,\n      },\n    });\n  }\n}\n\nexport default new ProfilesService();\n","import Request from './Request';\nimport { BOOKING_FIELDS, PATHS } from './constants';\nimport _get from 'lodash/get';\nimport moment from 'moment';\nimport parse from 'parse-link-header';\n\nclass BookingsService extends Request {\n  async createBooking({ profileId, data }) {\n    const booking = this.axios({\n      method: 'POST',\n      url: `${PATHS.PROFILES}/${profileId}/${PATHS.BOOKINGS}`,\n      params: {\n        fields: BOOKING_FIELDS,\n      },\n      data: {\n        ...data,\n      },\n    });\n    return remapBookings([booking]);\n  }\n\n  async createBookings({ profileId, data }) {\n    let cur = 0;\n    let errors = [];\n    let bookings = [];\n    while (cur !== data.length) {\n      try {\n        const res = await this.axios({\n          method: 'POST',\n          url: `${PATHS.PROFILES}/${profileId}/${PATHS.BOOKINGS}`,\n          params: { fields: BOOKING_FIELDS },\n          data: data[cur],\n        });\n        bookings.push(res);\n      } catch (error) {\n        errors.push(data[cur]);\n      }\n\n      cur = cur + 1;\n    }\n    return { bookings: remapBookings(bookings), errors };\n  }\n\n  async getBookings({ profileId, from, to }) {\n    if (!profileId) return [];\n\n    let needMore = true;\n    let nextPage = '';\n    let bookings = [];\n\n    while (needMore) {\n      const res = !nextPage\n        ? await this.axios({\n            method: 'GET',\n            url: `${PATHS.PROFILES}/${profileId}/${PATHS.BOOKINGS}`,\n            params: {\n              fields: BOOKING_FIELDS,\n              jumpToDate: moment(from).format('YYYY-MM-DD'),\n            },\n            needResHeaders: true,\n          })\n        : await this.axios({\n            method: 'GET',\n            url: nextPage,\n            needResHeaders: true,\n          });\n\n      const resLink = _get(res, ['headers', 'link'], '');\n      nextPage = _get(parse(resLink), ['next', 'url'], '');\n\n      const tmpBookings = _get(res, ['data']);\n      bookings = [...bookings, ...tmpBookings];\n      const lastItemStartDate = _get(\n        tmpBookings,\n        [tmpBookings.length - 1, 'startsAt'],\n        '',\n      );\n\n      needMore = nextPage && moment(lastItemStartDate).isBefore(to);\n    }\n\n    return remapBookings(bookings);\n  }\n}\n\nconst getEmail = booking => {\n  const emailField = _get(booking, ['answers'], []).filter(\n    answer => answer.code === 'EMAIL',\n  )[0];\n\n  return _get(emailField, 'string', '');\n};\n\nconst remapBookings = bookings =>\n  bookings.map(booking => {\n    return {\n      title: getEmail(booking),\n      id: _get(booking, 'id'),\n      startDate: _get(booking, 'startsAt'),\n      endDate: _get(booking, 'endsAt'),\n      services: _get(booking, 'services', []),\n      cancelled: _get(booking, 'cancelled'),\n    };\n  });\n\nexport default new BookingsService();\n","// @flow\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ProfilesService } from '../../../services/YouCanBook';\nimport { CALENDAR_CONFIG_FIELDS } from '../helpers';\nimport {\n  setConfig,\n  setError,\n  setIsLoading,\n  setProfileId,\n} from '../redux/Actions';\nimport type { CustomHookProps } from './types';\n\nconst useConfig = ({ profileId }: CustomHookProps) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setProfileId(profileId));\n\n    (async () => {\n      dispatch(setIsLoading(true));\n      try {\n        const data = await ProfilesService.getProfileById({\n          id: profileId,\n          fields: CALENDAR_CONFIG_FIELDS,\n        });\n        dispatch(setConfig(data || {}));\n      } catch (error) {\n        dispatch(setError(error));\n      }\n      dispatch(setIsLoading(false));\n    })();\n\n    return () => {\n      ProfilesService.cancel();\n    };\n    // eslint-disable-next-line\n  }, []);\n};\n\nexport default useConfig;\n","// @flow\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BookingsService } from '../../../services/YouCanBook';\nimport _get from 'lodash/get';\nimport type { CustomHookProps } from './types';\nimport { setError, setIsLoading, setAppointments } from '../redux/Actions';\n\nconst useAppointments = ({ profileId }: CustomHookProps) => {\n  const dispatch = useDispatch();\n  const startOfWeek = useSelector(state =>\n    _get(state, ['calendar', 'startOfWeek']),\n  );\n  const endOfWeek = useSelector(state =>\n    _get(state, ['calendar', 'endOfWeek']),\n  );\n\n  useEffect(() => {\n    (async () => {\n      if (!endOfWeek) return;\n      try {\n        dispatch(setIsLoading(true));\n        const appointmentData = await BookingsService.getBookings({\n          profileId,\n          from: startOfWeek,\n          to: endOfWeek,\n        });\n        const filteredAppointments = appointmentData.filter(\n          appointment => !appointment.cancelled,\n        );\n        dispatch(setAppointments(filteredAppointments));\n      } catch (error) {\n        dispatch(setError(error));\n      }\n      dispatch(setIsLoading(false));\n    })();\n\n    return () => {\n      BookingsService.cancel();\n    };\n    // eslint-disable-next-line\n  }, [endOfWeek]);\n};\n\nexport default useAppointments;\n","// @flow\nimport { useEffect } from 'react';\nimport { ERROR_MESSAGES } from '../helpers';\nimport { toastr } from 'react-redux-toastr';\nimport { useSelector } from 'react-redux';\nimport _get from 'lodash/get';\n\nconst useError = () => {\n  const error = useSelector(state => _get(state, ['calendar', 'error']));\n\n  useEffect(() => {\n    if (!error) return;\n\n    const { message } = error || {};\n\n    if (message) {\n      toastr.error(ERROR_MESSAGES.getTimeConfig, message);\n    }\n  }, [error]);\n};\n\nexport default useError;\n","// @flow\nexport const TYPES = {\n  SIMPLE: 'SIMPLE',\n  CHECKBOX: 'CHECKBOX',\n  MULTI_DROPDOWN: 'MULTI_DROPDOWN',\n};\n","// @flow\nimport type { TQuestion } from '../../types';\nimport { Auth } from 'aws-amplify';\nimport { TYPES } from './constants';\nimport moment from 'moment';\nimport _get from 'lodash.get';\n\nconst BOOKING_FORMAT = 'YYYY-MM-DDTHH:mm:ss';\nconst BOOKING_DATE_FORMAT = 'YYYY-MM-DD';\nconst BOOKING_TIME_FORMAT = 'HH:mm:ss';\nexport const DATE_PICKER_FORMAT = 'MM/DD/YYYY';\nconst WEEK_DAYS = 7;\n\nconst defaultValues = {\n  [TYPES.SIMPLE]: '',\n  [TYPES.CHECKBOX]: false,\n  [TYPES.MULTI_DROPDOWN]: '',\n};\n\nconst REPEAT_TYPE = {\n  daily: 'daily',\n  weekly: 'weekly',\n};\n\nexport const generateInitialValues = (questions: TQuestion[]): Object => {\n  return questions.reduce(\n    (acc, { code, type }) => ({ ...acc, [code]: defaultValues[type] }),\n    {\n      appointmentType: undefined,\n    },\n  );\n};\n\nexport const generateSellerValues = ({\n  property,\n  appointmentData,\n  config,\n}: Object): Object => {\n  const { questions } = config;\n  const { startDate } = appointmentData;\n  const date = moment(startDate).format(DATE_PICKER_FORMAT);\n  const address = _get(property, 'PropertyData.FullAddress', '');\n  const email = _get(Auth, ['user', 'attributes', 'email'], '');\n  return {\n    ...generateInitialValues(questions),\n    FNAME: address,\n    EMAIL: email,\n    repeat: false,\n    repeatType: REPEAT_TYPE.daily,\n    startDate: date,\n    endDate: date,\n  };\n};\n\nconst prepareQuestionsAnswers = (questions: TQuestion[], values): Object => {\n  return questions.map(({ code }) => ({ code, string: values[code] }));\n};\n\nexport const prepareBookingData = ({\n  appointmentData,\n  values,\n  config,\n}: Object): Object => {\n  const { title, questions } = config;\n  const { FNAME: name, appointmentType } = values;\n  const { startDate } = appointmentData;\n\n  return {\n    title: `${name} and ${title}`,\n    startsAt: moment(startDate).format(BOOKING_FORMAT),\n    tentative: 'NOT_USED',\n    timeZone: 'Asia/Ho_Chi_Minh',\n    cancelled: false,\n    units: 1,\n    services: [{ id: appointmentType.id, name: appointmentType.name }],\n    answers: prepareQuestionsAnswers(questions, values),\n  };\n};\n\nexport const BUSY_APPOINTMENT = 'busy';\n\nexport const getBusyAppointmentType = (\n  appointmentTypes: Object[],\n): Object | typeof undefined => {\n  return appointmentTypes.find(({ name }) => name === BUSY_APPOINTMENT);\n};\n\nexport const prepareSellerBookings = ({\n  appointmentData,\n  values,\n  config,\n}: Object): Object[] => {\n  const { questions } = config;\n  const { startDate: appointmentStartDate } = appointmentData;\n  const { repeat, repeatType, startDate, endDate } = values;\n  const appointmentTypes = _get(config, 'services.items', []);\n  const busyAppointmentType = getBusyAppointmentType(appointmentTypes);\n  const busyTitle = 'busy';\n\n  if (!repeat)\n    return [\n      {\n        title: busyTitle,\n        startsAt: moment(appointmentStartDate).format(BOOKING_FORMAT),\n        tentative: 'NOT_USED',\n        timeZone: 'Asia/Ho_Chi_Minh',\n        cancelled: false,\n        units: 1,\n        services: [busyAppointmentType],\n        answers: prepareQuestionsAnswers(questions, values),\n      },\n    ];\n\n  const startTime = moment(appointmentStartDate).format(BOOKING_TIME_FORMAT);\n  const mStartDate = moment(startDate);\n  const mEndDate = moment(endDate);\n  const diff = mEndDate.diff(mStartDate, 'day');\n  const module = repeatType === REPEAT_TYPE.weekly ? WEEK_DAYS : 1;\n\n  const days = Array.from(\n    Array(Math.floor(diff / module) + 1),\n    (_, i) => i * module,\n  );\n\n  return days.map(day => {\n    const mDay = moment(startDate).add(day, 'day');\n    return {\n      title: busyTitle,\n      startsAt: `${mDay.format(BOOKING_DATE_FORMAT)}T${startTime}`,\n      tentative: 'NOT_USED',\n      timeZone: 'Asia/Ho_Chi_Minh',\n      cancelled: false,\n      units: 1,\n      services: [busyAppointmentType],\n      answers: prepareQuestionsAnswers(questions, values),\n    };\n  });\n};\n\nexport const getErrorMessages = (bookings: Object[]): Object => {\n  const bookingDates = bookings.map(booking => booking.startsAt).join(', ');\n  return { message: `Cannot book at dates: ${bookingDates}` };\n};\n","// @flow\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport type { Element } from 'react';\nimport { formatTime } from '../../Calendar/helpers';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    ...theme.typography.h4,\n    padding: theme.spacing(2, 0),\n    backgroundColor: theme.palette.background.gray,\n    textAlign: 'center',\n  },\n}));\n\nexport const AppointmentData = ({\n  appointmentData,\n}: Object): Element<'div'> => {\n  const { startDate, endDate } = appointmentData;\n  const classes = useStyles();\n  const { displayDate, displayTime } = formatTime({ startDate, endDate });\n  return (\n    <div className={classes.wrapper}>\n      <Typography variant=\"h4\">{displayDate}</Typography>\n      <Box sx={{ mt: 1 }}>\n        <Typography variant=\"h3\">{displayTime}</Typography>\n      </Box>\n    </div>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport QueryBuilderOutlinedIcon from '@material-ui/icons/QueryBuilderOutlined';\nimport { getAppointmentTypeDuration } from '../../Calendar/helpers';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport { useFormikContext } from 'formik';\nimport _get from 'lodash.get';\n\nconst useStyles = makeStyles(theme => ({\n  group: {\n    width: '100%',\n    margin: theme.spacing(1, 0, 2, 0),\n  },\n  button: {\n    padding: theme.spacing(1.5, 2),\n    textTransform: 'none',\n  },\n  buttonLabel: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  duration: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  selected: {\n    '&&, &&:hover': {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n}));\n\ntype Props = {\n  appointmentTypes: Object[],\n};\n\nexport const AppointmentTypes = ({\n  appointmentTypes,\n}: Props): Element<typeof React.Fragment> => {\n  const classes = useStyles();\n  const { values, setFieldValue } = useFormikContext();\n  const value = _get(values, 'appointmentType.id') || '';\n\n  const handleChange = (event, newTypeId) => {\n    const newType = appointmentTypes.find(type => type.id === newTypeId);\n    setFieldValue('appointmentType', newType);\n  };\n\n  return (\n    <>\n      <Typography variant=\"h4\">Choose an appointment type</Typography>\n      <ToggleButtonGroup\n        orientation=\"vertical\"\n        value={value}\n        exclusive\n        onChange={handleChange}\n        classes={{ root: classes.group }}\n      >\n        {appointmentTypes.map(type => (\n          <ToggleButton\n            value={type.id}\n            classes={{\n              root: classes.button,\n              label: classes.buttonLabel,\n              selected: classes.selected,\n            }}\n            key={type.id}\n          >\n            <Typography variant=\"h5\" color=\"textPrimary\">\n              {type.name}\n            </Typography>\n            <Typography\n              variant=\"subtitle1\"\n              classes={{ root: classes.duration }}\n            >\n              <QueryBuilderOutlinedIcon fontSize=\"small\" />\n              <Box sx={{ ml: 0.5, mt: 0.25 }}>\n                {getAppointmentTypeDuration(type)}\n              </Box>\n            </Typography>\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport clsx from 'clsx';\nimport {\n  FormControl,\n  FormLabel,\n  makeStyles,\n  TextField as MuiTextField,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    marginTop: theme.spacing(0.5),\n  },\n  label: {\n    color: theme.palette.primary.dark,\n    ...theme.typography.h4,\n  },\n  input: {\n    ...theme.typography.h5,\n    padding: theme.spacing(1, 1.5),\n  },\n}));\n\ntype Props = {\n  name?: string,\n  variant?: string,\n  placeholder?: string,\n  label: string,\n  value: string,\n  onChange: Function,\n  required?: boolean,\n  classes?: Object,\n};\n\nexport const TextField = (props: Props): Element<typeof MuiTextField> => {\n  const styleClasses = useStyles();\n  const {\n    name,\n    variant,\n    placeholder = '',\n    label,\n    value,\n    required,\n    onChange,\n    classes = {},\n  } = props;\n\n  return (\n    <FormControl required={required}>\n      <FormLabel color=\"secondary\" className={styleClasses.label}>\n        {label}\n      </FormLabel>\n      <MuiTextField\n        name={name}\n        variant={variant}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        classes={{ root: clsx(styleClasses.textField, classes.textField) }}\n        InputProps={{\n          classes: {\n            input: clsx(styleClasses.input, classes.input),\n          },\n        }}\n      />\n    </FormControl>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { Box, FormHelperText, makeStyles } from '@material-ui/core';\nimport type { TQuestion } from '../../../types';\nimport { TextField } from '../../Elements/TextField';\nimport { useFormikContext } from 'formik';\n\nconst useStyles = makeStyles(theme => ({\n  after: {\n    ...theme.typography.subtitle,\n  },\n}));\n\ntype Props = {\n  question: TQuestion,\n};\n\nexport const SimpleField = ({ question }: Props): Element<typeof Box> => {\n  const classes = useStyles();\n  const { code, before, after, required } = question;\n  const { values, handleChange } = useFormikContext();\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', my: 1 }}>\n      <TextField\n        name={code}\n        variant=\"outlined\"\n        placeholder=\"\"\n        label={before}\n        value={values[code]}\n        onChange={handleChange}\n        required={required}\n      />\n      {Boolean(after) && (\n        <FormHelperText className={classes.after}>{after}</FormHelperText>\n      )}\n    </Box>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport {\n  FormControl,\n  MenuItem,\n  Select as MuiSelect,\n  FormLabel,\n  makeStyles,\n} from '@material-ui/core';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    '& .MuiOutlinedInput-notchedOutline>legend>span': {\n      display: 'none',\n    },\n  },\n  label: {\n    '&&': {\n      color: theme.palette.primary.dark,\n      ...theme.typography.h4,\n    },\n  },\n  select: {\n    ...theme.typography.h5,\n    padding: theme.spacing(1, 1.5),\n  },\n  item: {\n    ...theme.typography.h5,\n  },\n}));\n\ntype Props = {\n  name?: string,\n  value: string,\n  onChange: Function,\n  label: string,\n  variant?: string,\n  required?: boolean,\n  options: string[],\n  classes?: Object,\n};\n\nexport const Select = (props: Props): Element<typeof FormControl> => {\n  const styleClasses = useStyles();\n  const {\n    name,\n    value,\n    onChange,\n    label,\n    variant,\n    required,\n    options,\n    classes = {},\n  } = props;\n\n  return (\n    <FormControl required={required} classes={{ root: styleClasses.wrapper }}>\n      <FormLabel className={styleClasses.label}>{label}</FormLabel>\n      <MuiSelect\n        name={name}\n        classes={{ root: clsx(styleClasses.select, classes.select) }}\n        value={value}\n        onChange={onChange}\n        label=\"\"\n        variant={variant}\n        MenuProps={{\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left',\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'left',\n          },\n          getContentAnchorEl: null,\n        }}\n      >\n        <MenuItem\n          classes={{ root: clsx(styleClasses.item, classes.item) }}\n          value=\"\"\n        >\n          <em>None</em>\n        </MenuItem>\n        {options.map((option: string) => (\n          <MenuItem\n            key={option}\n            value={option}\n            classes={{ root: clsx(styleClasses.item, classes.item) }}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </MuiSelect>\n    </FormControl>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport {\n  Checkbox as MuiCheckbox,\n  FormControlLabel,\n  FormControl,\n  makeStyles,\n} from '@material-ui/core';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n  label: {\n    ...theme.typography.h5,\n  },\n  checkbox: {},\n}));\n\ntype Props = {\n  name?: string,\n  required?: boolean,\n  checked: boolean,\n  onChange: Function,\n  label: string,\n  color?: string,\n  classes?: Object,\n};\n\nexport const Checkbox = (props: Props): Element<typeof FormControl> => {\n  const styleClasses = useStyles();\n  const {\n    name,\n    required,\n    checked,\n    onChange,\n    label,\n    color = 'primary',\n    classes = {},\n  } = props;\n  return (\n    <FormControl required={required}>\n      <FormControlLabel\n        classes={{ label: clsx(styleClasses.label, classes.label) }}\n        control={\n          <MuiCheckbox\n            classes={{ root: clsx(styleClasses.checkbox, classes.checkbox) }}\n            checked={checked}\n            onChange={onChange}\n            name={name}\n            color={color}\n          />\n        }\n        label={label}\n      />\n    </FormControl>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { Box, FormHelperText, makeStyles } from '@material-ui/core';\nimport type { TQuestion } from '../../../types';\nimport { Checkbox } from '../../Elements';\nimport { useFormikContext } from 'formik';\n\nconst useStyles = makeStyles(theme => ({\n  after: {\n    ...theme.typography.subtitle,\n  },\n}));\n\ntype Props = {\n  question: TQuestion,\n};\n\nexport const CheckboxField = ({ question }: Props): Element<typeof Box> => {\n  const classes = useStyles();\n  const { after, before, required, code } = question;\n  const { values, handleChange } = useFormikContext();\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', my: 1 }}>\n      <Checkbox\n        checked={values[code]}\n        onChange={handleChange}\n        name={code}\n        color=\"primary\"\n        label={before}\n        required={required}\n      />\n      {Boolean(after) && (\n        <FormHelperText className={classes.after}>{after}</FormHelperText>\n      )}\n    </Box>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { SimpleField } from './SimpleField';\nimport { CheckboxField } from './CheckboxField';\nimport { DropdownField } from './DropdownField';\nimport type { TQuestion } from '../../../types';\nimport { TYPES } from '../constants';\n\nconst components = {\n  [TYPES.SIMPLE]: SimpleField,\n  [TYPES.CHECKBOX]: CheckboxField,\n  [TYPES.MULTI_DROPDOWN]: DropdownField,\n};\n\ntype Props = {\n  questions: TQuestion[],\n};\n\nexport const Fields = ({\n  questions,\n}: Props): Element<typeof React.Fragment> => {\n  return (\n    <>\n      {questions.map(question => {\n        const Component = components[question.type];\n        return <Component key={question.code} question={question} />;\n      })}\n    </>\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { Box } from '@material-ui/core';\nimport type { TQuestion } from '../../../types';\nimport { Select } from '../../Elements';\nimport { useFormikContext } from 'formik';\n\ntype Props = {\n  question: TQuestion,\n};\n\nexport const DropdownField = ({ question }: Props): Element<typeof Box> => {\n  const { code, after, before, required, options = [] } = question;\n  const { values, handleChange } = useFormikContext();\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', my: 1 }}>\n      <Select\n        name={code}\n        value={values[code]}\n        onChange={handleChange}\n        label={before}\n        variant=\"outlined\"\n        required={required}\n        options={options}\n      />\n      {Boolean(after) && <Box sx={{ mt: 1 }}>{after}</Box>}\n    </Box>\n  );\n};\n","// @flow\nimport type { Element, AbstractComponent } from 'react';\nimport React from 'react';\nimport { Box, Button, Divider } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport { generateInitialValues, prepareBookingData } from './helpers';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash/get';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { AppointmentData } from './AppointmentData';\nimport { AppointmentTypes } from './AppointmentTypes';\nimport { BookingsService } from '../../services/YouCanBook';\nimport {\n  setIsLoading,\n  setError,\n  addAppointments,\n} from '../Calendar/redux/Actions';\nimport { Fields } from './Fields';\nimport { BUSY_APPOINTMENT_NAME } from '../../shared/Consts';\n\ntype Props = {\n  profileId: string | typeof undefined,\n  config: Object,\n  appointmentData: Object,\n  setIsLoading: Function,\n  setError: Function,\n  addAppointments: Function,\n  onSave: Function,\n  isLoading: boolean,\n};\n\nconst BookingForm = ({\n  profileId,\n  config,\n  appointmentData,\n  setIsLoading,\n  setError,\n  addAppointments,\n  onSave,\n  isLoading,\n}: Props): Element<typeof Box> => {\n  const questions = _get(config, 'questions', []);\n  const appointmentTypes = _get(config, 'services.items', []);\n  const buyerAppointmentTypes = appointmentTypes.filter(\n    appointment => appointment.name !== BUSY_APPOINTMENT_NAME,\n  );\n  const initialValues = generateInitialValues(questions);\n\n  const onSubmit = async (values: Object) => {\n    try {\n      setIsLoading(true);\n      const data = prepareBookingData({ appointmentData, values, config });\n      const newAppointments = await BookingsService.createBooking({\n        profileId,\n        data,\n      });\n      addAppointments(newAppointments);\n      onSave();\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error);\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\n        <Form>\n          <AppointmentTypes appointmentTypes={buyerAppointmentTypes} />\n          <AppointmentData appointmentData={appointmentData} />\n          <Divider />\n          <Box sx={{ mt: 4 }}>\n            <Fields questions={questions} />\n          </Box>\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            disableElevation\n            fullWidth\n            variant=\"contained\"\n            disabled={isLoading}\n          >\n            Confirm Booking\n          </Button>\n        </Form>\n      </Formik>\n    </Box>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  profileId: state => _get(state, 'calendar.profileId'),\n  config: state => _get(state, 'calendar.config'),\n  isLoading: state => _get(state, 'calendar.isLoading'),\n});\n\nconst mapDispatchToProps = {\n  setIsLoading,\n  setError,\n  addAppointments,\n};\n\ntype PropsWithoutRedux = {\n  appointmentData: Object,\n};\nexport default (connect(\n  structuredSelector,\n  mapDispatchToProps,\n)(withErrorBoundary(BookingForm)): AbstractComponent<PropsWithoutRedux>);\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport MomentUtils from '@date-io/moment';\nimport { useFormikContext } from 'formik';\nimport {\n  Collapse,\n  FormControlLabel,\n  Switch,\n  Grid,\n  RadioGroup,\n  Radio,\n} from '@material-ui/core';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { DATE_PICKER_FORMAT } from '../helpers';\nimport moment from 'moment';\n\nexport const RepeatSection = (): Element<'div'> => {\n  const { values, handleChange, setFieldValue } = useFormikContext();\n\n  const handleDateChange = (field: string) => (date: Object) => {\n    setFieldValue(field, moment(date).format(DATE_PICKER_FORMAT));\n  };\n\n  return (\n    <div>\n      <FormControlLabel\n        control={\n          <Switch\n            name=\"repeat\"\n            checked={values.repeat}\n            onChange={handleChange}\n            color=\"primary\"\n          />\n        }\n        label=\"Repeat\"\n      />\n\n      <Collapse in={values.repeat}>\n        <div>\n          <RadioGroup\n            name=\"repeatType\"\n            value={values.repeatType}\n            onChange={handleChange}\n          >\n            <FormControlLabel\n              value=\"daily\"\n              control={<Radio color=\"primary\" />}\n              label=\"Daily\"\n            />\n            <FormControlLabel\n              value=\"weekly\"\n              control={<Radio color=\"primary\" />}\n              label=\"Weekly\"\n            />\n          </RadioGroup>\n        </div>\n        <Grid container justifyContent=\"space-between\">\n          <MuiPickersUtilsProvider utils={MomentUtils}>\n            <KeyboardDatePicker\n              disableToolbar\n              inputVariant=\"outlined\"\n              format={DATE_PICKER_FORMAT}\n              margin=\"normal\"\n              label=\"Start date\"\n              value={new Date(values.startDate)}\n              onChange={handleDateChange('startDate')}\n            />\n            <KeyboardDatePicker\n              disableToolbar\n              inputVariant=\"outlined\"\n              format={DATE_PICKER_FORMAT}\n              margin=\"normal\"\n              label=\"End date\"\n              value={new Date(values.endDate)}\n              onChange={handleDateChange('endDate')}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n      </Collapse>\n    </div>\n  );\n};\n","// @flow\nimport type { Element, AbstractComponent } from 'react';\nimport React from 'react';\nimport { Box, Button, Divider, Typography } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport {\n  generateSellerValues,\n  getErrorMessages,\n  prepareSellerBookings,\n} from './helpers';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { AppointmentData } from './AppointmentData';\nimport { BookingsService } from '../../services/YouCanBook';\nimport {\n  setIsLoading,\n  setError,\n  addAppointments,\n} from '../Calendar/redux/Actions';\nimport { RepeatSection } from './RepeatSection';\n\ntype Props = {\n  profileId: string | typeof undefined,\n  config: Object,\n  appointmentData: Object,\n  setIsLoading: Function,\n  setError: Function,\n  addAppointments: Function,\n  property: Object,\n  onSave: Function,\n  isLoading: boolean,\n};\n\nconst SellerBookingForm = ({\n  profileId,\n  config,\n  appointmentData,\n  setIsLoading,\n  setError,\n  addAppointments,\n  property,\n  onSave,\n  isLoading,\n}: Props): Element<typeof Box> => {\n  const initialValues = generateSellerValues({\n    property,\n    appointmentData,\n    config,\n  });\n\n  const onSubmit = async (values: Object) => {\n    try {\n      setIsLoading(true);\n      const data = prepareSellerBookings({ appointmentData, values, config });\n      const { bookings, errors } = await BookingsService.createBookings({\n        profileId,\n        data,\n      });\n      if (!_isEmpty(errors)) setError(getErrorMessages(errors));\n      addAppointments(bookings);\n      onSave();\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error);\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\n        <Form>\n          <Box sx={{ mb: 2 }}>\n            <Typography variant=\"h4\">Block available slots</Typography>\n          </Box>\n          <AppointmentData appointmentData={appointmentData} />\n          <Divider />\n          <Box sx={{ my: 2 }}>\n            <RepeatSection />\n          </Box>\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            disableElevation\n            fullWidth\n            variant=\"contained\"\n            disabled={isLoading}\n          >\n            Confirm Booking\n          </Button>\n        </Form>\n      </Formik>\n    </Box>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  profileId: state => _get(state, 'calendar.profileId'),\n  config: state => _get(state, 'calendar.config'),\n  property: state => _get(state, 'calendar.property'),\n  isLoading: state => _get(state, 'calendar.isLoading'),\n});\n\nconst mapDispatchToProps = {\n  setIsLoading,\n  setError,\n  addAppointments,\n};\n\ntype PropsWithoutRedux = {\n  appointmentData: Object,\n};\nexport default (connect(\n  structuredSelector,\n  mapDispatchToProps,\n)(withErrorBoundary(SellerBookingForm)): AbstractComponent<PropsWithoutRedux>);\n","// @flow\nimport * as React from 'react';\nimport type { AbstractComponent } from 'react';\nimport type { Element } from 'react';\nimport { BookingForm, SellerBookingForm } from '../../BookingForm';\nimport { connect } from 'react-redux';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash.get';\n\nexport const BasicLayout = (props: Object): Element<typeof BookingForm> => {\n  const { appointmentData, property, onSave } = props;\n  const FormComponent = property ? SellerBookingForm : BookingForm;\n\n  return <FormComponent appointmentData={appointmentData} onSave={onSave} />;\n};\n\nconst structuredSelector = createStructuredSelector({\n  property: state => _get(state, ['calendar', 'property']),\n});\n\nexport default (connect(structuredSelector)(\n  withErrorBoundary(BasicLayout),\n): AbstractComponent<{}>);\n","// @flow\nimport React from 'react';\nimport type { Element } from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    background: theme.palette.common.white,\n  },\n  content: {\n    padding: theme.spacing(4),\n  },\n}));\n\nexport const Layout = (props: Object): Element<'div'> => {\n  const {\n    basicLayoutComponent: BasicLayout,\n    commandLayoutComponent: CommandLayout,\n    recurrenceLayoutComponent: RecurrenceLayout,\n    isRecurrence,\n    children,\n    ...restProps\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.layout} {...restProps}>\n      <CommandLayout />\n      <div className={classes.content}>\n        <BasicLayout />\n        <RecurrenceLayout />\n      </div>\n      {children}\n    </div>\n  );\n};\n","// @flow\nimport React, { useEffect } from 'react';\nimport type { Element } from 'react';\n\nexport const CommandLayout = (props: Object): Element<'div'> => {\n  const { onCommitButtonClick, isSaving, setIsSaving } = props;\n\n  useEffect(() => {\n    if (isSaving) {\n      onCommitButtonClick();\n      setIsSaving(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isSaving]);\n\n  return <div></div>;\n};\n","// @flow\nimport React, { useState } from 'react';\nimport type { Element } from 'react';\nimport { AppointmentForm as SchedulerAppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\nimport BasicLayout from './BasicLayout';\nimport { Layout } from './Layout';\nimport { CommandLayout } from './CommandLayout';\nimport { connectProps } from '@devexpress/dx-react-core';\n\nexport const AppointmentForm = (): Element<typeof SchedulerAppointmentForm> => {\n  const [isSaving, setIsSaving] = useState(false);\n  const BasicLayoutComponent = connectProps(BasicLayout, () => ({\n    onSave: () => setIsSaving(true),\n  }));\n\n  const CommandLayoutComponent = connectProps(CommandLayout, () => ({\n    isSaving,\n    setIsSaving,\n  }));\n\n  return (\n    <SchedulerAppointmentForm\n      layoutComponent={Layout}\n      basicLayoutComponent={BasicLayoutComponent}\n      commandLayoutComponent={CommandLayoutComponent}\n    />\n  );\n};\n","// @flow\nimport React, { Fragment } from 'react';\nimport type { Element, AbstractComponent } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler';\nimport {\n  Scheduler,\n  WeekView,\n  Appointments,\n  AppointmentTooltip,\n  Toolbar,\n  DateNavigator,\n  TodayButton,\n} from '@devexpress/dx-react-scheduler-material-ui';\nimport _get from 'lodash/get';\nimport DayScaleCell from './DayScaleCell';\nimport TimeTableCell from './TimeTableCell';\nimport Appointment from './Appointment';\nimport TooltipContent from './TooltipContent';\nimport { DEFAULT_DURATION } from './helpers';\nimport { connect } from 'react-redux';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { createStructuredSelector } from 'reselect';\nimport _isEmpty from 'lodash/isEmpty';\nimport IntegratedDates from './IntegratedDates';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Loader } from 'react-loaders';\nimport BlockUi from 'react-block-ui';\nimport useConfig from './hooks/useConfig';\nimport useAppointments from './hooks/useAppointments';\nimport useError from './hooks/useError';\nimport { AppointmentForm } from './AppointmentForm';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    minHeight: '100px',\n    fontFamily: theme.typography.fontFamily.avenirLT,\n  },\n  loading: {\n    border: '1px solid #E0E0E0',\n    backgroundColor: theme.palette.common.white,\n  },\n}));\n\ntype Props = {\n  config: Object,\n  profileId: string,\n  isLoading: boolean,\n  appointments: Object[],\n};\n\nconst Calendar = ({\n  config,\n  profileId,\n  isLoading,\n  appointments,\n}: Props): Element<'div' | typeof Fragment> => {\n  const classes = useStyles();\n\n  useConfig({ profileId });\n  useAppointments({ profileId });\n  useError();\n\n  const onCommitChanges = () => {};\n\n  if (_isEmpty(config) && !isLoading) return <></>;\n\n  return (\n    <BlockUi\n      tag=\"div\"\n      blocking={isLoading}\n      loader={<Loader active type=\"ball-pulse\" color=\"rgba(231,28,99,1)\" />}\n      className={clsx(classes.container, {\n        [classes.loading]: isLoading,\n      })}\n    >\n      <Paper elevation={3}>\n        <Scheduler data={appointments}>\n          <ViewState />\n          <WeekView\n            timeTableCellComponent={TimeTableCell}\n            dayScaleCellComponent={DayScaleCell}\n            cellDuration={\n              _get(config, 'times.slotLengthMinutes') || DEFAULT_DURATION\n            }\n          />\n          <EditingState onCommitChanges={onCommitChanges} />\n          <IntegratedDates />\n          <Toolbar />\n          <DateNavigator />\n          <TodayButton />\n          <Appointments appointmentComponent={Appointment} />\n          <AppointmentTooltip\n            showCloseButton\n            contentComponent={TooltipContent}\n          />\n          <AppointmentForm />\n        </Scheduler>\n      </Paper>\n    </BlockUi>\n  );\n};\n\ntype PropsWithoutRedux = {};\n\nconst structuredSelector = createStructuredSelector({\n  config: state => _get(state, ['calendar', 'config']),\n  isLoading: state => _get(state, ['calendar', 'isLoading']),\n  appointments: state => _get(state, ['calendar', 'appointments']),\n});\n\nexport default (connect(\n  structuredSelector,\n  undefined,\n)(withErrorBoundary(Calendar)): AbstractComponent<PropsWithoutRedux>);\n"],"sourceRoot":""}