{"version":3,"sources":["containers/BuyerOffer/Messages.js","components/Offer/OfferSteps/Step1/Content.js","components/Offer/OfferSteps/Step1/Constants.js"],"names":["OFFER_ERROR_MESSAGE","structuredSelector","createStructuredSelector","urls","state","_get","file","error","isLoading","isFormSaved","formData","mapDispatchToProps","saveFormData","saveFormFiles","getFormFiles","updateOfferStep","connect","withErrorBoundary","props","formId","offerId","step","endpoint","step1Endpoint","formBaseEndpoint","formSubmissionEndpoint","saveData","survey","fileTypeQuestions","isFormSubmitted","data","formatSurveyData","currentPageNo","ItemType","FORM_ITEM_TYPE","offer","toastr","SURVEYS_ERROR_MESSAGE","COMMON","message","FORM_SUBMITTED","React","_isEmpty","uploadFilesHandler","className","FormBuilder","onFilesUploadHandler","options","onFilesUploadCallbackHandler","onCompleteHandler","newStep","parseInt","onPageChangedHandler","onSaveExitHandler","formDataParser","fileQuestionsList","switchIdToName","FORM_ENDPOINT","redirectUrl","APP_BASE_NAME"],"mappings":"yOAAaA,EACG,6C,kBCiJhB,IAAMC,EAAqBC,YAAyB,CAClDC,KAAM,SAAAC,GAAK,OAAIC,IAAKD,EAAO,CAAC,OAAQ,UACpCE,KAAM,SAAAF,GAAK,OAAIC,IAAKD,EAAO,CAAC,OAAQ,UACpCG,MAAO,SAAAH,GAAK,OAAIC,IAAKD,EAAO,CAAC,OAAQ,WACrCI,UAAW,SAAAJ,GAAK,OAAIC,IAAKD,EAAO,CAAC,OAAQ,eACzCK,YAAa,SAAAL,GAAK,OAAIC,IAAKD,EAAO,CAAC,OAAQ,iBAC3CM,SAAU,SAAAN,GAAK,OAAIC,IAAKD,EAAO,CAAC,OAAQ,OAAQ,gBAG5CO,EAAqB,CACzBC,iBACAC,kBACAC,iBACAC,qBAEcC,4BACdf,EACAU,EAFcK,CAGdC,aArHF,SAA+BC,GAAgC,IAE3DC,EAWED,EAXFC,OACAC,EAUEF,EAVFE,QACAR,EASEM,EATFN,aACAC,EAQEK,EARFL,cACAV,EAOEe,EAPFf,KACAW,EAMEI,EANFJ,aACAP,EAKEW,EALFX,MACAD,EAIEY,EAJFZ,KACAI,EAGEQ,EAHFR,SACAK,EAEEG,EAFFH,gBACAM,EACEH,EADFG,KAEIC,EAAWC,wBAAc,CAAEJ,SAAQC,YACjCI,EAA6CF,EAA7CE,iBAAkBC,EAA2BH,EAA3BG,uBACpBC,EAAW,SAACC,EAAQL,EAAUM,GAClC,IAAKC,YAAgBnB,GACnB,IACE,IAAMoB,EAAOC,YAAiBJ,EAAQC,GACtC,OAAOhB,EAAa,CAClBU,WACAK,OAAQ,CACNK,cAAe,EACfF,OACAG,SAAUC,IAAeC,SAG7B,MAAO5B,GAEP,YADA6B,SAAO7B,MAAM8B,IAAsBC,OAAQ/B,EAAMgC,SAIrDH,SAAO7B,MACL8B,IAAsBC,OACtBD,IAAsBG,iBAkD1B,OAZAC,aAAgB,WACVC,IAASvC,IAjCbwC,YAAmBrC,EAAMH,EAAMU,KAoC9B,CAACV,IAEJsC,aAAgB,WACVlC,GACF6B,SAAO7B,MAAM8B,IAAsBC,UAEpC,CAAC/B,IAGF,uBAAKqC,UAAU,aACb,gBAACC,EAAA,EAAD,CACEvB,SAAUE,EACVsB,qBApBuB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC9B,OAAOC,YAA6BD,EAASjC,IAoBzCmC,kBA1CoB,SAACtB,EAAQC,GACjCF,EAASC,EAAQF,EAAwBG,GACzC,IACE,IAAMsB,EAAUC,SAAS9B,GAAQ,IAAM,IAAM,IAC7CN,EAAgB,CAAEmC,UAAS9B,YAC3B,MAAOb,GACP6B,SAAO7B,MACL8B,IAAsBC,OACtBtC,KAmCAoD,qBA9BuB,SAACzB,EAAQC,GACpCF,EAASC,EAAD,UAAYH,GAAoBI,IA8BpCyB,kBA3BoB,SAAC1B,EAAQC,GACjCF,EAASC,EAAD,UAAYH,GAAoBI,IA2BpC0B,eAjDiB,SAACxB,EAAMH,EAAQ4B,GACpC,OAAOC,YAAe7B,EAAQG,EAAMyB,Y,iCC5FxC,wEAGahC,EAAgB,SAAC,GAAyB,IAAvBH,EAAsB,EAAtBA,QAASD,EAAa,EAAbA,OACjCK,EAAgB,UAAMiC,IAAN,YAAuBtC,EAAvB,kBAAuCC,GACvDsC,EAAW,UAAMC,IAAN,0BAAqCvC,EAArC,0BAA8DD,GAC/E,MAAO,CACLK,mBACAC,uBAAuB,GAAD,OAAKD,EAAL,WACtBkC","file":"static/js/2.f51c4a89.chunk.js","sourcesContent":["export const OFFER_ERROR_MESSAGE = {\n  improperStep: 'Conflict - the offer is not in proper step',\n};\n","// @flow\nimport * as React from 'react';\nimport type { Element } from 'react';\nimport FormBuilder from 'components/FormBuilder';\nimport {\n  saveFormData,\n  saveFormFiles,\n  getFormFiles,\n} from 'components/FormBuilder/redux/Actions';\nimport { updateOfferStep } from 'containers/BuyerOffer/redux/Actions';\nimport { connect } from 'react-redux';\nimport { FORM_ITEM_TYPE } from 'components/FormBuilder/Constants';\nimport { createStructuredSelector } from 'reselect';\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\nimport { SURVEYS_ERROR_MESSAGE } from 'components/FormBuilder/Messages';\nimport {\n  formatSurveyData,\n  switchIdToName,\n  isFormSubmitted,\n  uploadFilesHandler,\n  onFilesUploadCallbackHandler,\n} from 'helpers/SurveyJS';\nimport { toastr } from 'react-redux-toastr';\nimport { OFFER_ERROR_MESSAGE } from 'containers/BuyerOffer/Messages';\nimport { withErrorBoundary } from 'components/ErrorBoundary';\nimport { step1Endpoint } from './Constants';\n\ntype PropsWithoutRedux = {\n  offerId: string,\n  step: string,\n  formId: string,\n};\n\ntype Props = {\n  ...PropsWithoutRedux,\n  saveFormData: Function,\n  saveFormFiles: Function,\n  getFormFiles: Function,\n  updateOfferStep: Function,\n  urls: Array<Object>,\n  file: Array<Object>,\n  error: string,\n  isFormSaved: boolean,\n  formData: Object,\n};\n\nfunction BuyerOfferFormBuilder(props: Props): Element<Object> {\n  const {\n    formId,\n    offerId,\n    saveFormData,\n    saveFormFiles,\n    urls,\n    getFormFiles,\n    error,\n    file,\n    formData,\n    updateOfferStep,\n    step,\n  } = props;\n  const endpoint = step1Endpoint({ formId, offerId });\n  const { formBaseEndpoint, formSubmissionEndpoint } = endpoint;\n  const saveData = (survey, endpoint, fileTypeQuestions) => {\n    if (!isFormSubmitted(formData)) {\n      try {\n        const data = formatSurveyData(survey, fileTypeQuestions);\n        return saveFormData({\n          endpoint,\n          survey: {\n            currentPageNo: 0,\n            data,\n            ItemType: FORM_ITEM_TYPE.offer,\n          },\n        });\n      } catch (error) {\n        toastr.error(SURVEYS_ERROR_MESSAGE.COMMON, error.message);\n        return;\n      }\n    }\n    toastr.error(\n      SURVEYS_ERROR_MESSAGE.COMMON,\n      SURVEYS_ERROR_MESSAGE.FORM_SUBMITTED,\n    );\n    return;\n  };\n\n  const uploadFiles = () => {\n    uploadFilesHandler(file, urls, saveFormFiles);\n  };\n\n  const formDataParser = (data, survey, fileQuestionsList) => {\n    return switchIdToName(survey, data, fileQuestionsList);\n  };\n\n  const onCompleteHandler = (survey, fileTypeQuestions) => {\n    saveData(survey, formSubmissionEndpoint, fileTypeQuestions);\n    try {\n      const newStep = parseInt(step) > 100 ? 200 : 100;\n      updateOfferStep({ newStep, offerId });\n    } catch (error) {\n      toastr.error(\n        SURVEYS_ERROR_MESSAGE.COMMON,\n        OFFER_ERROR_MESSAGE.improperStep,\n      );\n    }\n  };\n\n  const onPageChangedHandler = (survey, fileTypeQuestions) => {\n    saveData(survey, `${formBaseEndpoint}`, fileTypeQuestions);\n  };\n\n  const onSaveExitHandler = (survey, fileTypeQuestions) => {\n    saveData(survey, `${formBaseEndpoint}`, fileTypeQuestions);\n  };\n\n  const onFilesUploadHandler = ({ options }) => {\n    return onFilesUploadCallbackHandler(options, getFormFiles);\n  };\n\n  React.useEffect(() => {\n    if (_isEmpty(urls)) return;\n    uploadFiles();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [urls]);\n\n  React.useEffect(() => {\n    if (error) {\n      toastr.error(SURVEYS_ERROR_MESSAGE.COMMON);\n    }\n  }, [error]);\n\n  return (\n    <div className=\"container\">\n      <FormBuilder\n        endpoint={formBaseEndpoint}\n        onFilesUploadHandler={onFilesUploadHandler}\n        onCompleteHandler={onCompleteHandler}\n        onPageChangedHandler={onPageChangedHandler}\n        onSaveExitHandler={onSaveExitHandler}\n        formDataParser={formDataParser}\n      />\n    </div>\n  );\n}\n\nconst structuredSelector = createStructuredSelector({\n  urls: state => _get(state, ['form', 'urls']),\n  file: state => _get(state, ['form', 'file']),\n  error: state => _get(state, ['form', 'error']),\n  isLoading: state => _get(state, ['form', 'isLoading']),\n  isFormSaved: state => _get(state, ['form', 'isFormSaved']),\n  formData: state => _get(state, ['form', 'form', 'FormData']),\n});\n\nconst mapDispatchToProps = {\n  saveFormData,\n  saveFormFiles,\n  getFormFiles,\n  updateOfferStep,\n};\nexport default (connect(\n  structuredSelector,\n  mapDispatchToProps,\n)(withErrorBoundary(BuyerOfferFormBuilder)): Element<PropsWithoutRedux>);\n","import { FORM_ENDPOINT } from 'components/FormBuilder/Constants';\nimport { APP_BASE_NAME } from 'shared/Consts';\n\nexport const step1Endpoint = ({ offerId, formId }) => {\n  const formBaseEndpoint = `${FORM_ENDPOINT}/${formId}/items/${offerId}`;\n  const redirectUrl = `${APP_BASE_NAME}/offer?offerId=${offerId}&step=1&formId=${formId}`;\n  return {\n    formBaseEndpoint,\n    formSubmissionEndpoint: `${formBaseEndpoint}/submit`,\n    redirectUrl,\n  };\n};\n"],"sourceRoot":""}