{"version":3,"sources":["../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","components/Property/index.js"],"names":["MEDIA_COMPONENTS","props","ref","children","classes","className","_props$component","component","Component","image","src","style","other","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","root","media","img","undefined","withStyles","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","name","useStyles","makeStyles","theme","border","backgroundColor","palette","common","white","marginBottom","spacing","breakpoints","up","minHeight","attributesWrapper","flexDirection","justifyContent","contentWrapper","padding","activeWrapper","alignItems","background","lightGray","borderTop","propertyName","down","paddingTop","height","price","fontFamily","typography","avenirLT","fontSize","IMAGE_PLACEHOLDER","APP_BASE_URL","React","property","_get","listPrice","fullAddress","Grid","container","item","md","sm","xs","title","Box","Typography","variant","color","formatPrice"],"mappings":"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","file":"static/js/16.4e8fbc4a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","// @flow\nimport * as React from 'react';\nimport _get from 'lodash/get';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Box, Grid } from '@material-ui/core';\nimport { formatPrice } from 'helpers/number';\nimport { APP_BASE_URL } from '../../shared/Consts';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    border: '1px solid #E0E0E0',\n    backgroundColor: theme.palette.common.white,\n    marginBottom: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      minHeight: '180px',\n    },\n  },\n  attributesWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n  },\n  contentWrapper: {\n    padding: '26px 24px 24px',\n  },\n  activeWrapper: {\n    padding: '19px 24px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: theme.palette.background.lightGray,\n    borderTop: '1px solid #E0E0E0',\n  },\n  propertyName: {\n    marginBottom: theme.spacing(1.5),\n  },\n  media: {\n    backgroundSize: 'cover',\n    [theme.breakpoints.down('xs')]: {\n      paddingTop: '80%',\n    },\n    [theme.breakpoints.up('sm')]: {\n      height: '100%',\n    },\n  },\n  price: {\n    fontFamily: theme.typography.fontFamily.avenirLT,\n    fontSize: '1.25rem',\n  },\n}));\n\ntype Props = {\n  property: Object,\n};\n\nconst IMAGE_PLACEHOLDER = `${APP_BASE_URL}/img/placeholder.png`;\n\nconst Property = ({ property }: Props): React.Element<typeof Grid> => {\n  const image = _get(property, 'Thumbnail') || IMAGE_PLACEHOLDER;\n  const listPrice = _get(property, 'ListingDetails.ListPrice', '');\n  const fullAddress = _get(property, 'PropertyData.FullAddress', '');\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item md={3} sm={4} xs={12}>\n        <CardMedia className={classes.media} image={image} title=\"avatar\" />\n      </Grid>\n      <Grid item md={9} sm={8} xs={12} className={classes.attributesWrapper}>\n        <Box component=\"div\" className={classes.contentWrapper}>\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n            component=\"p\"\n            className={classes.propertyName}\n          >\n            {fullAddress}\n          </Typography>\n        </Box>\n        <Box component=\"div\" className={classes.activeWrapper}>\n          <Typography variant=\"h3\" className={classes.price} component=\"span\">\n            {listPrice ? formatPrice(listPrice) : 'TBD'}\n          </Typography>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default React.memo(Property);\n"],"sourceRoot":""}